{"version":3,"sources":["webpack:///webpack/bootstrap 5fc6f6a84b95d08c087c","webpack:///./config/config.js","webpack:///./style/style.js","webpack:///./component/SliderBarRender.js","webpack:///./component/SheetEventHandler.js","webpack:///./component/SheetRender.js","webpack:///./component/Cell.js","webpack:///./component/Formula.js","webpack:///./component/ToolEventBinder.js","webpack:///./component/WSManager.js","webpack:///./app.js","webpack:///./component/CellRender.js","webpack:///./component/FuncListRender.js","webpack:///./component/Sheet.js","webpack:///./component/SheetEventBinder.js","webpack:///./component/SliderBarHandler.js","webpack:///./component/Tool.js","webpack:///./component/ToolEventHandler.js","webpack:///./component/ToolRender.js","webpack:///./component/UndoStack.js","webpack:///./component/WSRender.js","webpack:///./component/Workspace.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB,UAAU;AACV,SAAS;AACT,aAAa;AACb,cAAc;AACd;;AAEA;AACA,qBAAqB;AACrB,SAAS;AACT,UAAU;AACV,cAAc;AACd;;AAEA,yCAAyC;;AAEzC;AACA,wBAAwB;AACxB,cAAc;AACd,cAAc;AACd,iBAAiB;AACjB,eAAe;AACf;;AAEA;AACA,wBAAwB;AACxB,qBAAqB;AACrB,WAAW;AACX,SAAS;AACT,WAAW;AACX,eAAe;AACf,yBAAyB;AACzB,4BAA4B;AAC5B,iBAAiB;;AAEjB,oCAAoC;AACpC,mCAAmC;;AAEnC;AACA,kBAAkB;AAClB,eAAe;AACf,yBAAyB;AACzB,cAAc;AACd,eAAe;AACf,sBAAsB;AACtB,eAAe;AACf,oBAAoB;AACpB,qBAAqB;AACrB,eAAe;AACf,oBAAoB;AACpB,kBAAkB;AAClB,4BAA4B;;AAE5B;AACA,kBAAkB;AAClB,eAAe;AACf,0BAA0B;AAC1B,cAAc;AACd,eAAe;AACf,sBAAsB;AACtB,cAAc;AACd,oBAAoB;AACpB,qBAAqB;AACrB,eAAe;AACf,oBAAoB;AACpB,kBAAkB;AAClB,4BAA4B;;AAE5B;AACA,gBAAgB;AAChB,SAAS;AACT,UAAU;;AAEV;AACA,iDAAiD;AACjD,+BAA+B;AAC/B,sBAAsB;AACtB,mBAAmB;AACnB,oBAAoB;AACpB,kBAAkB;;AAElB;AACA,YAAY;AACZ,cAAc;AACd,kBAAkB;AAClB,0CAA0C;AAC1C,qBAAqB;AACrB,4BAA4B;;AAE5B;AACA,cAAc;AACd,eAAe;AACf,oBAAoB;AACpB,0CAA0C;AAC1C,qBAAqB;AACrB,4BAA4B;;AAE5B;AACA,wBAAwB;AACxB,WAAW;AACX,4BAA4B;;AAE5B;AACA,wBAAwB;AACxB,WAAW;AACX,4BAA4B;AAC5B;;AAEA;AACA,cAAc;AACd,eAAe;;AAEf;AACA,eAAe;AACf,oCAAoC;;AAEpC;AACA,eAAe;AACf,kCAAkC;;AAElC;AACA,aAAa;AACb,eAAe;AACf,oBAAoB;AACpB,oBAAoB;AACpB,mBAAmB;AACnB;;AAEA;AACA,gBAAgB;AAChB;;AAEA;AACA,eAAe;AACf,oBAAoB;AACpB,aAAa;AACb,YAAY;AACZ,YAAY;AACZ,0BAA0B;;AAE1B;AACA;;AAEA;;AAEA;AACA,aAAa;AACb,cAAc;AACd,oBAAoB;AACpB;;AAEA;AACA,wBAAwB;AACxB,eAAe;AACf,sBAAsB;AACtB,oBAAoB;AACpB,kBAAkB;AAClB;AACA,gCAAgC;AAChC,sBAAsB;;AAEtB;AACA,wBAAwB;AACxB,eAAe;AACf,uBAAuB;AACvB,qBAAqB;AACrB,kBAAkB;AAClB,uBAAuB;AACvB,yBAAyB;AACzB,gCAAgC;;AAEhC;AACA,cAAc;AACd,cAAc;AACd,yBAAyB;AACzB;AACA,mBAAmB;;AAEnB;AACA,wBAAwB;AACxB,eAAe;AACf,kBAAkB;AAClB,uBAAuB;AACvB,cAAc;AACd,oBAAoB;AACpB,oBAAoB;AACpB;;AAEA;AACA,wBAAwB;AACxB,eAAe;AACf,kBAAkB;AAClB,uBAAuB;AACvB,cAAc;AACd,oBAAoB;AACpB,oBAAoB;AACpB;;AAEA;;AAEA;AACA,kBAAkB;AAClB,oBAAoB;AACpB,qBAAqB;AACrB,kBAAkB;AAClB,eAAe;AACf,cAAc;AACd,eAAe;AACf,yBAAyB;;AAEzB;AACA,kBAAkB;AAClB,oBAAoB;AACpB,qBAAqB;AACrB,kBAAkB;AAClB,eAAe;AACf,cAAc;AACd,eAAe;AACf,yBAAyB;;AAEzB;AACA,gBAAgB;AAChB,qBAAqB;AACrB,eAAe;AACf,yBAAyB;AACzB,0BAA0B;AAC1B,eAAe;;AAEf;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,8C;;;;;;AC7SA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;AACF;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,kDAAkD;AAC7E;AACA,EAAE;AACF;AACA;;AAEA,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,0C;;;;;;AChMA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,wBAAwB;AAChE,4CAA4C,wBAAwB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,wBAAwB;AAChF;AACA,4DAA4D,wBAAwB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,cAAc;AACrD;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,wBAAwB;AAChF;AACA,4DAA4D,wBAAwB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,oD;;;;;;AC/aA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;;AAEA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEA,aAAa,YAAY;AACzB;AACA;;AAEA,aAAa,YAAY;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,YAAY;AAC/B;AACA;;AAEA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C,oBAAoB,wBAAwB;AACxF;AACA;AACA;;AAEA;AACA,8CAA8C,WAAW,UAAU,aAAa;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,WAAW,UAAU;AACrE;AACA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wC;;;;;;ACtNA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0B;;;;;;ACjDA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtqBAAqB,oEAAoE;AACzF,oBAAoB,oEAAoE;AACxF,uBAAuB,yEAAyE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,wBAAwB,oEAAoE;AAC5F;AACA;AACA;AACA;AACA,SAAS;AACT,yBAAyB;AACzsBAAsB,kBAAkB;;AAExC;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,kBAAkB;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,kBAAkB;AAC5C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;;AAEA,wDAAwD;AACxD,uDAAuD;AACvD,8DAA8D;;AAE9D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,wBAAwB,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,kBAAkB,OAAO;AAC5C;AACA;AACA,2BAA2B,wBAAwB,OAAO;AAC1D,+BAA+B,wBAAwB,OAAO;AAC9D,8GAA8G;AAC9G;AACA;AACA,0FAA0F;AAC1F;AACA,mFAAmF;AACnF;AACA;AACA,iDAAiD;AACjD;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;;AAEA,qEAAqE;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,yCAAyC;AACzC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC;AACA;;AAEA;;AAEA,wBAAwB,gBAAgB,YAAY;AACpD;AACA;AACA,+CAA+C;AAC/C,qCAAqC;AACrC;AACA;AACA;AACA,iBAAiB;;AAEjB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,kBAAkB;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA,sDAAsD;AACtD,sCAAsC;AACtC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA,kCAAkC;AAClC;AACA,8BAA8B;AAC9B;AACA,qDAAqD;AACrD;AACA;AACA;AACA,4EAA4E;AAC5E;AACA,kCAAkC;AAClC;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA,+DAA+D;AAC/D,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,0BAA0B,kBAAkB;AAC5C;;AAEA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,kBAAkB;AAC5C;;AAEA,4DAA4D;AAC5D,sDAAsD;AACtD;AACA,uCAAuC;AACvC;AACA;AACA,4CAA4C;AAC5C,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA;AACA,iDAAiD;AACjD;AACA,kDAAkD;AAClD;AACA;AACA,kDAAkD;AAClD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,0BAA0B,2BAA2B;AACrD;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,mEAAmE;AACnmBAAmB,cAAc,OAAO;AACxC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,EAAE;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kDAAkD,WAAW;AAC7F;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC;AACA;AACA;AACA;;AAEA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD,uCAAuC;AACvC;AACA;AACA;AACA;AACA,sEAAsE;AACtE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD,uCAAuC;AACvC;AACA;AACA;AACA;AACA,wEAAwE;AACxE;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;AACzB,oCAAoC;;AAEpC,mBAAmB,8CAA8C,OAAO;AACxE;AACA,sFAAsF;AACtF;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iEAAiE;AACjE,uGAAuG;;AAEvG;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,kCAAkC;AAClC;AACA;AACA,sCAAsC;AACtC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC,+CAA+C;AAC/C;AACA;AACA;AACA,8EAA8E;AAC9E;AACA,oDAAoD;AACpD;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,0CAA0C;;AAE1C,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB;;AAEjB,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD;AACtD;AACA,sCAAsC;AACtC;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yCAAyC;AAChE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA,yCAAyC;AACzC,oDAAoD;AACpD;AACA;AACA,wCAAwC;AACxC,2BAA2B;AAC3B;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;AACA,aAAa,oCAAoC;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,iCAAiC;AACjC,0CAA0C;AAC1C;AACA;AACA,2CAA2C;AAC3C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,gCAAgC,IAAI;;AAEpC;AACA;AACA;AACA;;AAEA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,0CAA0C;AAC1C;AACA,kBAAkB;AAClB;AACA,0BAA0B;AAC1B;AACA;;AAEA,oDAAoD;AACpD,oDAAoD;AACpD;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+GAA+G;AAC/G,qCAAqC;AACrC;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,+CAA+C;AAC/C;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,0CAA0C;;AAE9D;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iGAAiG;;AAEjG;AACA;AACA,+BAA+B,4BAA4B;;AAE3D;AACA,sCAAsC,cAAc,kBAAkB;;AAEtE;;AAEA;AACA,iBAAiB,oFAAoF;AACrG;;AAEA,aAAa,oBAAoB;AACjC;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;AACA,sBAAsB;AACtB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA,iEAAiE;AACjE,sCAAsC;AACtC;AACA;AACA,0DAA0D;AAC1D;;AAEA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA,iEAAiE;AACjE,sCAAsC;AACtC;AACA;AACA,0DAA0D;AAC1D;;AAEA;;AAEA;AACA,0CAA0C;AAC1C,6DAA6D;AAC7D;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA,uCAAuC,4CAA4C;AACnF,4CAA4C,6CAA6C;AACzF,4CAA4C,6CAA6C;AACzF,4CAA4C,6CAA6C;AACzF,4CAA4C,4CAA4C;AACxF,4CAA4C,6CAA6C;AACzF;AACA;AACA,wDAAwD;AACxD;AACA;AACA,wDAAwD;AACxD;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA,uCAAuC,4CAA4C;AACnF,4CAA4C,6CAA6C;AACzF,4CAA4C,6CAA6C;AACzF,4CAA4C,6CAA6C;AACzF,4CAA4C,4CAA4C;AACxF,4CAA4C,6CAA6C;AACzF;AACA;AACA;;AAEA;;AAEA,kBAAkB;AAClB,0CAA0C;AAC1C,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C;AAC3C;AACA;;AAEA;;AAEA;;AAEA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa,gDAAgD;;AAE7D;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,8FAA8F;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa,uCAAuC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;;AAEA,oBAAoB;AACpB;AACA;AACA;;AAEA,6CAA6C;AAC7C;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,2BAA2B;AAC3B,gFAAgF;AAChF,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0EAA0E;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2EAA2E;AAC3E,qCAAqC;AACrC;AACA,kBAAkB;;AAElB;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;;AAEA,YAAY;;AAEZ;;AAEA,gC;;;;;;AC73IA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,gD;;;;;;AClLA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oC;;;;;;AC9CA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;ACvBA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sC;;;;;;ACrKA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8C;;;;;;ACjGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,WAAW;AAC9C,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,wBAAwB;AAC5E,wDAAwD,wBAAwB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,wBAAwB;AAC5E,wDAAwD,wBAAwB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,WAAW;AAC7C,sCAAsC,WAAW;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,wBAAwB;AACxE,oDAAoD,wBAAwB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,wBAAwB;AACxE,oDAAoD,wBAAwB;AAC5E;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA,gDAAgD,wBAAwB;AACxE,oDAAoD,wBAAwB;AAC5E;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,wBAAwB;AAC5D,wCAAwC,wBAAwB;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,4B;;;;;;ACxZA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;AClEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,0BAA0B;;AAE1B;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kD;;;;;;ACzFA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,0B;;;;;;ACZA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,sBAAsB;AAClF;AACA;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB;AACpE,gDAAgD,wBAAwB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB;AACpE,gDAAgD,wBAAwB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB;AACpE,gDAAgD,wBAAwB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,wBAAwB;AACpE,gDAAgD,wBAAwB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,kD;;;;;;ACxpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,gCAAgC;AACnD,kBAAkB,+BAA+B;AACjD,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA,uBAAuB,sBAAsB;;AAE7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;;AAEL,uBAAuB,qBAAqB;;AAE5C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL,uBAAuB,qBAAqB;;AAE5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,yBAAyB;AACxC;AACA,2BAA2B,yBAAyB;AACpD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,wBAAwB;AACvC;AACA,2BAA2B,wBAAwB;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,UAAU;AAC/B;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,sC;;;;;;ACnaA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kC;;;;;;ACnDA;AACA;AACA,UAAU;AACV;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oC","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5fc6f6a84b95d08c087c","/**\r\n * 配置文件，主要是个各类属性默认值\r\n * 整张表命名为：WorkSpace\r\n * 表格上半部分叫做：Tool\r\n * 表格叫做：Sheet\r\n *\r\n */\r\n\r\n/**\r\n * 整张表-WorkSpace的属性默认值\r\n *\r\n */\r\nvar WSConfig = {\r\n    isInit: true\r\n}\r\n\r\n/**\r\n * 表头-Tool的属性默认值\r\n *\r\n */\r\nvar ToolConfig = {\r\n    height: '12%',\r\n    width: '100%',\r\n\r\n    cmdCodeMap: {\r\n        borderAll: '&#xe228', borderBottom: '&#xe229', borderClear: '&#xe22a',\r\n        borderLeft: '&#xe22e', borderOuter: '&#xe22f', borderRight: '&#xe230',\r\n        borderTop: \"&#xe232\", mergeCell: '&#xe252', splitCell: '&#xe0b6',\r\n        copy: '&#xe14d', cut: '&#xe14e', paste: '&#xe14f', find: '&#xe881',\r\n        font: '&#xe167', alignCenter: '&#xe234', alignLeft: '&#xe236', alignRight: '&#xe237',\r\n        bold: '&#xe238', italic: '&#xe23f', fillColor: '&#xe23a', textColor: '&#xe23c',\r\n        brush: '&#xe243', underline: '&#xe249', sigma: '&#xe24a', func: '&#xe940',\r\n        preview: '&#xe8f4', sort: '&#xe164', wrapText: '&#xe25b', undo: '&#xe967', redo: '&#xe968',\r\n        cleanText: '清除文字', cleanStyle: '清除格式', cleanAll: '清除文字和格式', multiLine: '多行输入',\r\n        addCol: '插列', addRow: '插列', menu: '&#xe3c7', close: '&#xe5cd',Init:'Init'\r\n    },\r\n    styleHtml: ['font', 'bold', 'italic', 'textColor', 'fillColor', 'align', 'border', 'brush', 'cleanText',\r\n        'cleanStyle', 'cleanAll'],\r\n    toolHtml: ['copy', 'paste', 'cut', 'sort', 'find', 'wrapText', 'func', 'sigma', 'mergeCell', 'splitCell',\r\n        'multiLine', 'addCol','addRow'],\r\n    dataHtml: ['数据源', '数据集'],\r\n    defaultHtml: ['undo', 'redo', 'preview', 'Init'],\r\n    borderHtml: ['borderAll', 'borderBottom', 'borderTop', 'borderClear', 'borderLeft', 'borderOuter', 'borderRight'],\r\n    alignHtml: ['alignLeft', 'alignCenter', 'alignRight'],\r\n    previewHtml: ['Edit', 'Down'],\r\n    fontBorderOption: {\r\n        borderLeft: 'left',\r\n        borderTop: 'top',\r\n        borderRight: 'right',\r\n        borderBottom: 'bottom',\r\n        borderClear: 'clear',\r\n        borderOuter: 'outer',\r\n        borderAll: 'all'\r\n    },\r\n    alignOption: {\r\n        alignLeft: 'left',\r\n        alignCenter: 'center',\r\n        alignRight: 'right'\r\n    },\r\n\r\n    menu: ['样式', '工具', '数据']\r\n}\r\n\r\n/**\r\n * 侧边栏-sliderBar的常量\r\n *\r\n * */\r\nvar SlideBarConfig = {\r\n    toggleOpenIcon: 'open',\r\n    toggleCloseIcon: 'close',\r\n\tarrowIcon: 'arrow',\r\n\r\n    id: 'sliderBarDiv',\r\n\r\n    iconHtmlMap: {\r\n\t\topen: '&#xe3c7',\r\n        close: '&#xe5cd',\r\n        arrow: '&#xe313'\r\n    },\r\n\r\n    sliderPaneTitle: ['单元格属性','表格属性', '公式','数据源','数据集'],\r\n    sliderPaneId: ['cellAttrPane', 'sheetAttrPane','funcPane', 'dataSrcPane', 'dataTarPane'],\r\n    sliderPaneConfig:{\r\n        cellAttr: {\r\n            title: '单元格属性',\r\n            paneId: 'cellAttrPane',\r\n            titleId: 'cellAttrTitle',\r\n            arrowId: 'cellAttrArrow',\r\n            contentId: 'cellAttrContent'\r\n        },\r\n\t\tsheetAttr: {\r\n\t\t\ttitle: '表格属性',\r\n\t\t\tpaneId: 'sheetAttrPane',\r\n\t\t\ttitleId: 'sheetAttrTitle',\r\n\t\t\tarrowId: 'sheetAttrArrow',\r\n\t\t\tcontentId: 'sheetAttrContent'\r\n\t\t},\r\n\t\tfunc: {\r\n\t\t\ttitle: '公式',\r\n\t\t\tpaneId: 'funcPane',\r\n\t\t\ttitleId: 'funcTitle',\r\n\t\t\tarrowId: 'funcArrow',\r\n\t\t\tcontentId: 'funcContent'\r\n\t\t},\r\n\t\tdataSrc: {\r\n\t\t\ttitle: '数据源',\r\n\t\t\tpaneId: 'dataSrcPane',\r\n\t\t\ttitleId: 'dataSrcTitle',\r\n\t\t\tarrowId: 'dataSrcArrow',\r\n\t\t\tcontentId: 'dataSrcContent'\r\n\t\t},\r\n\t\tdataTar: {\r\n\t\t\ttitle: '数据集',\r\n\t\t\tpaneId: 'dataTarPane',\r\n\t\t\ttitleId: 'dataTarTitle',\r\n\t\t\tarrowId: 'dataTarArrow',\r\n\t\t\tcontentId: 'dataTarContent'\r\n\t\t}\r\n    },\r\n\r\n    toggleId: 'toggleDiv'\r\n}\r\n\r\n/**\r\n * 表单-Cell的属性默认值\r\n *\r\n */\r\nvar CellConfig = {\r\n    height: 20,\r\n    width: 100\r\n}\r\n\r\n/**\r\n * 表单-Sheet的属性默认值\r\n *\r\n */\r\nvar SheetConfig = {\r\n    headWidth: 30,\r\n    headHeight: 25,\r\n\r\n    rowNum: 200,\r\n    colNum: 25\r\n}\r\n\r\nvar SheetTableDivConfig = {\r\n    id: 'sheetTableDiv'\r\n}\r\n\r\nvar CellPropConfig = {\r\n    id: 'cellProp'\r\n}\r\n\r\nvar InputConfig = {\r\n    id: 'input'\r\n}\r\n\r\nvar ClipBoardConfig = {\r\n    id: 'ta',\r\n    value: ''\r\n}\r\nvar keyboardTables = {\r\n\r\n    specialKeysCommon: {\r\n        8: \"[backspace]\", 9: \"[tab]\", 13: \"[enter]\", 25: \"[tab]\", 27: \"[esc]\", 33: \"[pgup]\", 34: \"[pgdn]\",\r\n        35: \"[end]\", 36: \"[home]\", 37: \"[aleft]\", 38: \"[aup]\", 39: \"[aright]\", 40: \"[adown]\", 45: \"[ins]\",\r\n        46: \"[del]\", 113: \"[f2]\"\r\n    },\r\n\r\n    specialKeysIE: {\r\n        8: \"[backspace]\", 9: \"[tab]\", 13: \"[enter]\", 25: \"[tab]\", 27: \"[esc]\", 33: \"[pgup]\", 34: \"[pgdn]\",\r\n        35: \"[end]\", 36: \"[home]\", 37: \"[aleft]\", 38: \"[aup]\", 39: \"[aright]\", 40: \"[adown]\", 45: \"[ins]\",\r\n        46: \"[del]\", 113: \"[f2]\"\r\n    },\r\n\r\n    controlKeysIE: {\r\n        67: \"[ctrl-c]\",\r\n        83: \"[ctrl-s]\",\r\n        86: \"[ctrl-v]\",\r\n        88: \"[ctrl-x]\",\r\n        90: \"[ctrl-z]\"\r\n    },\r\n\r\n    specialKeysOpera: {\r\n        8: \"[backspace]\", 9: \"[tab]\", 13: \"[enter]\", 25: \"[tab]\", 27: \"[esc]\", 33: \"[pgup]\", 34: \"[pgdn]\",\r\n        35: \"[end]\", 36: \"[home]\", 37: \"[aleft]\", 38: \"[aup]\", 39: \"[aright]\", 40: \"[adown]\",\r\n        45: \"[ins]\", // issues with releases before 9.5 - same as \"-\" (\"-\" changed in 9.5)\r\n        46: \"[del]\", // issues with releases before 9.5 - same as \".\" (\".\" changed in 9.5)\r\n        113: \"[f2]\"\r\n    },\r\n\r\n    controlKeysOpera: {\r\n        67: \"[ctrl-c]\",\r\n        83: \"[ctrl-s]\",\r\n        86: \"[ctrl-v]\",\r\n        88: \"[ctrl-x]\",\r\n        90: \"[ctrl-z]\"\r\n    },\r\n\r\n    specialKeysSafari: {\r\n        8: \"[backspace]\", 9: \"[tab]\", 13: \"[enter]\", 25: \"[tab]\", 27: \"[esc]\", 63232: \"[aup]\", 63233: \"[adown]\",\r\n        63234: \"[aleft]\", 63235: \"[aright]\", 63272: \"[del]\", 63273: \"[home]\", 63275: \"[end]\", 63276: \"[pgup]\",\r\n        63277: \"[pgdn]\", 63237: \"[f2]\"\r\n    },\r\n\r\n    controlKeysSafari: {\r\n        99: \"[ctrl-c]\",\r\n        115: \"[ctrl-s]\",\r\n        118: \"[ctrl-v]\",\r\n        120: \"[ctrl-x]\",\r\n        122: \"[ctrl-z]\"\r\n    },\r\n\r\n    ignoreKeysSafari: {\r\n        63236: \"[f1]\", 63238: \"[f3]\", 63239: \"[f4]\", 63240: \"[f5]\", 63241: \"[f6]\", 63242: \"[f7]\",\r\n        63243: \"[f8]\", 63244: \"[f9]\", 63245: \"[f10]\", 63246: \"[f11]\", 63247: \"[f12]\", 63289: \"[numlock]\"\r\n    },\r\n\r\n    specialKeysFirefox: {\r\n        8: \"[backspace]\", 9: \"[tab]\", 13: \"[enter]\", 25: \"[tab]\", 27: \"[esc]\", 33: \"[pgup]\", 34: \"[pgdn]\",\r\n        35: \"[end]\", 36: \"[home]\", 37: \"[aleft]\", 38: \"[aup]\", 39: \"[aright]\", 40: \"[adown]\", 45: \"[ins]\",\r\n        46: \"[del]\", 113: \"[f2]\"\r\n    },\r\n\r\n    controlKeysFirefox: {\r\n        99: \"[ctrl-c]\",\r\n        115: \"[ctrl-s]\",\r\n        118: \"[ctrl-v]\",\r\n        120: \"[ctrl-x]\",\r\n        122: \"[ctrl-z]\"\r\n    },\r\n\r\n    ignoreKeysFirefox: {\r\n        16: \"[shift]\", 17: \"[ctrl]\", 18: \"[alt]\", 20: \"[capslock]\", 19: \"[pause]\", 44: \"[printscreen]\",\r\n        91: \"[windows]\", 92: \"[windows]\", 112: \"[f1]\", 114: \"[f3]\", 115: \"[f4]\", 116: \"[f5]\",\r\n        117: \"[f6]\", 118: \"[f7]\", 119: \"[f8]\", 120: \"[f9]\", 121: \"[f10]\", 122: \"[f11]\", 123: \"[f12]\",\r\n        144: \"[numlock]\", 145: \"[scrolllock]\", 224: \"[cmd]\"\r\n    }\r\n}\r\n/**\r\n * 公式类型\r\n * @type {[*]}\r\n */\r\n// var function_classlist= [\"all\", \"stat\", \"lookup\", \"datetime\", \"financial\", \"test\", \"math\", \"text\"]\r\n/**\r\n * 输出模块\r\n *\r\n */\r\nmodule.exports.WSConfig = WSConfig\r\nmodule.exports.ToolConfig = ToolConfig\r\nmodule.exports.SheetConfig = SheetConfig\r\nmodule.exports.CellConfig = CellConfig\r\nmodule.exports.CellPropConfig = CellPropConfig\r\nmodule.exports.InputConfig = InputConfig\r\nmodule.exports.ClipBoardConfig = ClipBoardConfig\r\nmodule.exports.SlideBarConfig = SlideBarConfig\r\nmodule.exports.SheetTableDivConfig = SheetTableDivConfig\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config/config.js\n// module id = 0\n// module chunks = 0","/**\r\n * Created by Ian on 17/6/8.\r\n */\r\n/**\r\n * 样式常量类\r\n *\r\n * 存储各种默认样式\r\n * 以及后续要添加的主题样式\r\n *\r\n * 注意，大多数宽与高，是成员属性，写在config里面\r\n */\r\n\r\nvar config = require('config')\r\nvar WSConfig = config.WSConfig\r\nvar SheetConfig = config.SheetConfig\r\nvar ToolConfig = config.ToolConfig\r\n\r\nvar WSStyle =\r\n\t'position: absolute;' +\r\n\t'left: 0;' +\r\n\t'top: 0;' +\r\n\t'width:100%;' +\r\n\t'height:100%;' +\r\n\t'overflow: hidden'\r\n\r\nvar SheetDivStyle =\r\n\t'position: relative;' +\r\n\t'top: 0;' +\r\n\t'left: 0;' +\r\n\t'width: 100%;' +\r\n\t'height: 87%'\r\n\r\nvar SheetTableStyle = 'user-select: none;'\r\n\r\nvar SheetTableDivStyle =\r\n\t'display: inline-block;' +\r\n\t'height:100%;' +\r\n\t'width: 100%;' +\r\n\t'overflow: auto;' +\r\n\t'border: none;' +\r\n\t'transition: all 0.5s ease'\r\n\r\nvar SliderBarStyle =\r\n\t'display: inline-block;' +\r\n\t'position: absolute;' +\r\n\t'right :0;' +\r\n\t'top: 0;' +\r\n\t'width: 0;' +\r\n\t'height: 100%;' +\r\n\t'background-color: gray;' +\r\n\t'transition: all 0.5s ease;' +\r\n\t'overflow: auto;'\r\n\r\nvar ToggleDivCloseLeft = 'left: 95%;'\r\nvar ToggleDivOpenLeft = 'left: 76%;'\r\n\r\nvar ToggleDivStyle =\r\n\t'position: fixed;' +\r\n\t'bottom: 20px;' +\r\n\t'background-color: gray;' +\r\n\t'width: 40px;' +\r\n\t'height: 40px;' +\r\n\t'border-radius: 20px;' +\r\n\t'color: white;' +\r\n\t'line-height: 40px;' +\r\n\t'text-align: center;' +\r\n\t'z-index: 100;' +\r\n\t'user-select: none;' +\r\n\t'cursor: pointer;' +\r\n\t'transition: all 0.5s ease;'\r\n\r\nvar ToggleDivHoverStyle =\r\n\t'position: fixed;' +\r\n\t'bottom: 20px;' +\r\n\t'background-color: white;' +\r\n\t'width: 40px;' +\r\n\t'height: 40px;' +\r\n\t'border-radius: 20px;' +\r\n\t'color: gray;' +\r\n\t'line-height: 40px;' +\r\n\t'text-align: center;' +\r\n\t'z-index: 100;' +\r\n\t'user-select: none;' +\r\n\t'cursor: pointer;' +\r\n\t'transition: all 0.5s ease;'\r\n\r\nvar PaneStyle =\r\n\t'padding: 10px;' +\r\n\t'top: 0;' +\r\n\t'left: 0;'\r\n\r\nvar PaneTitleStyle =\r\n\t'border-bottom: solid 1px rgba(255,255,255,0.3);' +\r\n\t'color: rgba(255,255,255,0.9);' +\r\n\t'margin-bottom: 10px;' +\r\n\t'font-size: 0.9em;' +\r\n\t'user-select: none;' +\r\n\t'cursor: pointer;'\r\n\r\nvar PaneContentCloseStyle =\r\n\t'height: 0;' +\r\n\t'width: 100%;' +\r\n\t'min-height: 0px;' +\r\n\t'background-color: rgba(255,255,255,0.1);' +\r\n\t'border-radius: 8px;' +\r\n\t'transition: all 0.5s ease;'\r\n\r\nvar PaneContentOpenStyle =\r\n\t'width: 100%;' +\r\n\t'height: auto;' +\r\n\t'min-height: 200px;' +\r\n\t'background-color: rgba(255,255,255,0.1);' +\r\n\t'border-radius: 8px;' +\r\n\t'transition: all 0.5s ease;'\r\n\r\nvar ArrowDownStyle =\r\n\t'display: inline-block;' +\r\n\t'right: 0;' +\r\n\t'transition: all 0.5s ease;'\r\n\r\nvar ArrowUpStyle =\r\n\t'display: inline-block;' +\r\n\t'right: 0;' +\r\n\t'transform: rotate(180deg);' +\r\n\t'transition: all 0.5s ease'\r\n\r\nvar SliderTableStyle =\r\n\t'width: 100%;' +\r\n\t'border: none;'\r\n\r\nvar SliderOddTrStyle =\r\n\t'border: none;' +\r\n\t'background-color: rgba(0,0,0,0.1);'\r\n\r\nvar SliderEvenTrStyle=\r\n\t'border: none;' +\r\n\t'background-color: rgba(0,0,0,0);'\r\n\r\nvar  SliderTdStyle =\r\n\t'width: 50%;' +\r\n\t'border: none;' +\r\n\t'padding-left: 5px;' +\r\n\t'color: whiteSmoke;' +\r\n\t'font-size: 0.9em;' +\r\n\t'line-height: 1.8em'\r\n\r\nvar InputStyle =\r\n\t'display: none;' +\r\n\t'position: absolute'\r\n\r\nvar ClipBoardStyle =\r\n\t'display:none;' +\r\n\t'position:absolute;' +\r\n\t'height:1px;' +\r\n\t'width:1px;' +\r\n\t'opacity:0;' +\r\n\t'filter:alpha(opacity=0);'\r\n\r\nvar SpanStyle =\r\n\t''\r\n\r\nvar ToolStyle = ''\r\n\r\nvar MenuDivStyle =\r\n\t'height:37%; ' +\r\n\t'width: 100%;' +\r\n\t'line-height: 30px;' +\r\n\t'min-height: 28px'\r\n\r\nvar MenuBoxStyle =\r\n\t'display: inline-block; ' +\r\n\t'height: 100%; ' +\r\n\t'letter-spacing: 7px; ' +\r\n\t'padding-left: 7px; ' +\r\n\t'cursor: pointer; ' +\r\n\t'transition: all 0.1s'+\r\n\t'background-color: transparent; ' +\r\n\t'border-bottom: none;'\r\n\r\nvar MenuBoxSelectedStyle =\r\n\t'display: inline-block; ' +\r\n\t'height: 100%; ' +\r\n\t'letter-spacing: 10px; ' +\r\n\t'padding-left: 10px; ' +\r\n\t'cursor: pointer; ' +\r\n\t'transition: all 0.1s; ' +\r\n\t'background-color: #ddd; ' +\r\n\t'border-bottom: solid 2px grey;'\r\n\r\nvar ButtonBoxStyle =\r\n\t'height: 63%;' +\r\n\t'width: 100%;' +\r\n\t'background-color: #ddd;' +\r\n\t'line-height: 50px' +\r\n\t'min-height: 50px;'\r\n\r\nvar ButtonDivStyle =\r\n\t'display: inline-block;' +\r\n\t'height: 50px;' +\r\n\t'cursor: pointer;' +\r\n\t'transition: all 0.1s;' +\r\n\t'color: #333;' +\r\n\t'line-height: 50px;' +\r\n\t'margin-left: 20px;' +\r\n\t'font-size: 20px'\r\n\r\nvar ButtonDivSelectedStyle =\r\n\t'display: inline-block;' +\r\n\t'height: 50px;' +\r\n\t'cursor: pointer;' +\r\n\t'transition: all 0.1s;' +\r\n\t'color: #fff;' +\r\n\t'line-height: 50px;' +\r\n\t'margin-left: 20px;' +\r\n\t'font-size: 20px'\r\n\r\nvar CellStyle = ''\r\n\r\nvar ColorDivStyle =\r\n\t'display: inline; ' +\r\n\t'margin-left: 10px; ' +\r\n\t'padding-left: 15px; ' +\r\n\t'cursor: pointer; ' +\r\n\t'border: none; ' +\r\n\t'width: 15px; ' +\r\n\t'height: 15px; ' +\r\n\t'background-color: #fff;'\r\n\r\nvar backgroundColorDivStyle =\r\n\t'display: inline; ' +\r\n\t'margin-left: 10px; ' +\r\n\t'padding-left: 15px; ' +\r\n\t'cursor: pointer; ' +\r\n\t'border: none; ' +\r\n\t'width: 15px; ' +\r\n\t'height: 15px; ' +\r\n\t'background-color: #fff;'\r\n\r\nvar ColorSelectDivStyle =\r\n\t'display: none;' +\r\n\t'position: absolute;' +\r\n\t'z-index: 100;' +\r\n\t'background-color: #fff;' +\r\n\t'border: 1px solid black;' +\r\n\t'width: 106px;'\r\n\r\nmodule.exports.WSStyle = WSStyle\r\n\r\nmodule.exports.SheetDivStyle = SheetDivStyle\r\n\r\nmodule.exports.SheetTableStyle = SheetTableStyle\r\n\r\nmodule.exports.SheetTableDivStyle = SheetTableDivStyle\r\n\r\nmodule.exports.ToggleDivOpenLeft = ToggleDivOpenLeft\r\nmodule.exports.ToggleDivCloseLeft = ToggleDivCloseLeft\r\nmodule.exports.ToggleDivStyle =  ToggleDivStyle\r\nmodule.exports.ToggleDivHoverStyle = ToggleDivHoverStyle\r\n\r\nmodule.exports.PaneStyle = PaneStyle\r\nmodule.exports.PaneTitleStyle = PaneTitleStyle\r\n\r\nmodule.exports.PaneContentCloseStyle = PaneContentCloseStyle\r\nmodule.exports.PaneContentOpenStyle = PaneContentOpenStyle\r\n\r\nmodule.exports.ArrowDownStyle = ArrowDownStyle\r\nmodule.exports.ArrowUpStyle = ArrowUpStyle\r\n\r\nmodule.exports.SliderTableStyle = SliderTableStyle\r\nmodule.exports.SliderOddTrStyle = SliderOddTrStyle\r\nmodule.exports.SliderEvenTrStyle = SliderEvenTrStyle\r\nmodule.exports.SliderTdStyle = SliderTdStyle\r\n\r\nmodule.exports.InputStyle = InputStyle\r\n\r\nmodule.exports.ToolStyle = ToolStyle\r\n\r\nmodule.exports.MeunDivStyle = MenuDivStyle\r\n\r\nmodule.exports.MeunBoxStyle = MenuBoxStyle\r\n\r\nmodule.exports.MeunBoxSelectedStyle = MenuBoxSelectedStyle\r\n\r\nmodule.exports.CellStyle = CellStyle\r\n\r\nmodule.exports.ClipBoardStyle = ClipBoardStyle\r\n\r\nmodule.exports.ButtonBoxStyle = ButtonBoxStyle\r\n\r\nmodule.exports.ButtonDivStyle = ButtonDivStyle\r\n\r\nmodule.exports.ButtonDivSelectedStyle = ButtonDivSelectedStyle\r\n\r\nmodule.exports.SpanStyle = SpanStyle\r\n\r\nmodule.exports.ColorDivStyle = ColorDivStyle\r\n\r\nmodule.exports.backgroundColorDivStyle = backgroundColorDivStyle\r\n\r\nmodule.exports.ColorSelectDivStyle = ColorSelectDivStyle\r\n\r\nmodule.exports.SliderBarStyle = SliderBarStyle\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./style/style.js\n// module id = 1\n// module chunks = 0","/**\r\n * Created by Ian on 17/7/22.\r\n */\r\n\r\nvar style  = require('style')\r\nvar config = require('config')\r\n\r\nvar SliderBarRender = function (sheet, sheetDiv) {\r\n\tthis.sheet = sheet\r\n\tthis.sheetDiv = sheetDiv\r\n\r\n\t// alert(this.sheetDiv)\r\n}\r\n\r\nSliderBarRender.prototype.init = function (sliderBarDiv, sheetTableDiv) {\r\n\r\n\tvar toggleDiv = document.createElement('div')\r\n\ttoggleDiv.id = config.SlideBarConfig.toggleId\r\n\ttoggleDiv.isOpen = false\r\n\tthis.sheetDiv.appendChild(toggleDiv)\r\n\r\n\trenderBar(sliderBarDiv, sheetTableDiv, toggleDiv)\r\n\trenderToggle(toggleDiv)\r\n\r\n\tvar sliderPaneConfig = config.SlideBarConfig.sliderPaneConfig\r\n\tvar sliderPanes = {}\r\n\r\n\tfor(var paneConfig in sliderPaneConfig){\r\n\t\tvar paneDiv = document.createElement('div')\r\n\t\tpaneDiv.style = style.PaneStyle\r\n\r\n\t\tpaneDiv.id = sliderPaneConfig[paneConfig].paneId\r\n\t\t// paneDiv.config = paneConfig\r\n\t\tsliderPanes[paneConfig] = paneDiv\r\n\r\n\t\tsliderBarDiv.appendChild(paneDiv)\r\n\t}\r\n\trenderPanes(sliderPanes)\r\n\r\n\t// var isOpen = this.isOpen\r\n\t// var sheetDiv = this.sheetDiv\r\n\r\n\ttoggleDiv.onclick = function () {\r\n\t\ttoggleDiv.isOpen = !toggleDiv.isOpen\r\n\r\n\t\trenderBar(sliderBarDiv, sheetTableDiv, toggleDiv)\r\n\t\trenderToggle(toggleDiv)\r\n\t}\r\n}\r\n\r\nfunction renderToggle(toggleDiv) {\r\n\r\n\tvar iconHtmlMap = config.SlideBarConfig.iconHtmlMap\r\n\tvar toggleOpenIcon = config.SlideBarConfig.toggleOpenIcon\r\n\tvar toggleCloseIcon = config.SlideBarConfig.toggleCloseIcon\r\n\r\n\tvar isOpen = toggleDiv.isOpen\r\n\t// var toggleDiv = document.createElement('div')\r\n\r\n\tif(isOpen){\r\n\r\n\t\ttoggleDiv.innerHTML = iconHtmlMap[toggleCloseIcon]\r\n\t\ttoggleDiv.style = style.ToggleDivOpenLeft + style.ToggleDivStyle\r\n\r\n\t\ttoggleDiv.onmouseover = function () {\r\n\t\t\ttoggleDiv.style = style.ToggleDivOpenLeft + style.ToggleDivHoverStyle\r\n\t\t}\r\n\r\n\t\ttoggleDiv.onmouseout = function () {\r\n\t\t\ttoggleDiv.style = style.ToggleDivOpenLeft + style.ToggleDivStyle\r\n\t\t\t// toggleDiv.style.left = '76%'\r\n\t\t}\r\n\t}else{\r\n\r\n\t\ttoggleDiv.innerHTML = iconHtmlMap[toggleOpenIcon]\r\n\t\ttoggleDiv.style = style.ToggleDivCloseLeft + style.ToggleDivStyle\r\n\r\n\t\ttoggleDiv.onmouseover = function () {\r\n\t\t\ttoggleDiv.style = style.ToggleDivCloseLeft + style.ToggleDivHoverStyle\r\n\t\t}\r\n\r\n\t\ttoggleDiv.onmouseout = function () {\r\n\t\t\ttoggleDiv.style = style.ToggleDivCloseLeft + style.ToggleDivStyle\r\n\t\t}\r\n\t}\r\n\r\n\t// console.log(sheet)\r\n\t// sheetDiv.appendChild(toggleDiv)\r\n\r\n\tsetTimeout(function () {\r\n\t\ttoggleDiv.style.opacity = '0.5'\r\n\t}, 5000)\r\n}\r\n\r\nfunction renderBar(sliderBarDiv, sheetTableDiv, toggleDiv) {\r\n\r\n\tvar isOpen = toggleDiv.isOpen\r\n\r\n\tsliderBarDiv.style = style.SliderBarStyle\r\n\r\n\tif(isOpen){\r\n\t\tsheetTableDiv.style.width = '75%'\r\n\t\tsliderBarDiv.style.width = '25%'\r\n\t}else{\r\n\t\tsheetTableDiv.style.width = '100%'\r\n\t\tsliderBarDiv.style.width = '0'\r\n\t}\r\n}\r\n\r\nfunction renderPanes(sliderPanes) {\r\n\r\n\tvar sliderPaneConfig = config.SlideBarConfig.sliderPaneConfig\r\n\r\n\tfor(var key in sliderPanes) {\r\n\t\tvar isOpen = false\r\n\t\tvar paneDiv = sliderPanes[key]\r\n\t\tvar paneConfig = key\r\n\r\n\t\tvar paneTitleDiv = document.createElement('div')\r\n\t\tpaneTitleDiv.innerHTML = sliderPaneConfig[paneConfig].title\r\n\t\tpaneTitleDiv.id = sliderPaneConfig[paneConfig].titleId\r\n\t\tpaneTitleDiv.style = style.PaneTitleStyle\r\n\t\tpaneTitleDiv.isOpen = isOpen\r\n\r\n\t\tvar arrowDiv = document.createElement('div')\r\n\t\tarrowDiv.innerHTML = config.SlideBarConfig.iconHtmlMap[config.SlideBarConfig.arrowIcon]\r\n\t\tarrowDiv.id = sliderPaneConfig[paneConfig].arrowId\r\n\t\tpaneTitleDiv.appendChild(arrowDiv)\r\n\r\n\t\tvar paneContentDiv = document.createElement('div')\r\n\t\tpaneContentDiv.id = sliderPaneConfig[paneConfig].contentId\r\n\r\n\t\trenderPane(arrowDiv, paneContentDiv, isOpen)\r\n\r\n\t\t//第一次写闭包！！！\r\n\t\tpaneTitleDiv.onclick = function (arrowDiv, paneContentDiv, paneTitleDiv) {\r\n\t\t\treturn function () {\r\n\t\t\t\tpaneTitleDiv.isOpen = !paneTitleDiv.isOpen\r\n\t\t\t\trenderPane(arrowDiv, paneContentDiv, paneTitleDiv)\r\n\t\t\t}\r\n\t\t}(arrowDiv, paneContentDiv, paneTitleDiv)\r\n\t\t// paneContentDiv.style = style.PaneContentOpenStyle\r\n\r\n\r\n\t\tpaneDiv.appendChild(paneTitleDiv)\r\n\t\tpaneDiv.appendChild(paneContentDiv)\r\n\r\n\t\t// if(paneDiv.id === 'cellAttrPane'){\r\n\t\t//\r\n\t\t// }else if(paneDiv.id === 'sheetAttrPane'){\r\n\t\t//\r\n\t\t// }else if(paneDiv.id === 'funcPane'){\r\n\t\t//\r\n\t\t// }else if(paneDiv.id === 'dataSrcPane'){\r\n\t\t//\r\n\t\t// }else{\r\n\t\t//\r\n\t\t// }\r\n\t}\r\n}\r\n\r\nfunction renderPane(arrowDiv, paneContentDiv, paneTitleDiv) {\r\n\r\n\tvar isOpen = paneTitleDiv.isOpen\r\n\r\n\tif(isOpen){\r\n\t\tpaneContentDiv.style = style.PaneContentOpenStyle\r\n\t\tarrowDiv.style = style.ArrowUpStyle\r\n\r\n\t\tif(paneContentDiv.firstChild){\r\n\t\t\tsetTimeout(function () {paneContentDiv.firstChild.style.display = 'table'}, 200)\r\n\t\t}\r\n\t}else{\r\n\t\tpaneContentDiv.style = style.PaneContentCloseStyle\r\n\t\tarrowDiv.style = style.ArrowDownStyle\r\n\r\n\t\tif(paneContentDiv.firstChild){paneContentDiv.firstChild.style.display = 'none'}\r\n\t}\r\n}\r\n\r\n// SliderBarRender.prototype\r\n//\r\n// function addFunc() {\r\n//\r\n// }\r\n\r\nmodule.exports.SliderBarRender = SliderBarRender\r\n\r\nmodule.exports.renderBar = renderBar\r\n\r\nmodule.exports.renderPane = renderPane\r\n\r\nmodule.exports.renderToggle = renderToggle\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/SliderBarRender.js\n// module id = 2\n// module chunks = 0","//鼠标和键盘事件\r\n\r\n// var UtilModule=require('Util')\r\n// var Util=UtilModule.Util\r\n// var util=new Util()\r\n\r\nvar config = require('config')\r\n\r\nvar SheetRenderModule = require('SheetRender')\r\nvar SheetRender = SheetRenderModule.SheetRender\r\nvar SliderBarHandler = require('SliderBarHandler').SliderBarHandler\r\n\r\nvar Formula = require('Formula').Formula\r\nvar formula = new Formula()\r\n\r\nvar SheetEventHandler = function (sheet) {\r\n\r\n    this.sheet = sheet\r\n    this.sheetRender = new SheetRender(sheet)\r\n\tthis.sliderBarHandler = new SliderBarHandler(sheet)\r\n}\r\n/**\r\n * 鼠标按下事件\r\n * @param element\r\n */\r\nSheetEventHandler.prototype.mouseDown = function (elementid) {\r\n    //var cellPropDiv=document.getElementById(\"cellProp\")\r\n    //cellPropDiv.style.display='none'\r\n    //cellPropDiv.innerHTML=''\r\n    if (!this.sheet.isEditing) {\r\n        //if (!this.sheet.firstCellid) {\r\n        this.sheet.firstCellid = elementid\r\n        this.sheet.lastCellid = this.sheet.firstCellid\r\n    }\r\n\r\n    this.setCellBackgroundColor('#fff')\r\n    if (elementid) {\r\n        //setCellProp(element,this.sheet.cells[element.id])\r\n        this.sheet.firstCellid = elementid\r\n    }\r\n    document.getElementById('dragBar').style.display = 'none'\r\n    this.sheet.isMouseDown = true\r\n}\r\nSheetEventHandler.prototype.dragBarMouseDown = function () {\r\n    this.setCellBackgroundColor('#fff')\r\n    this.sheet.firstCellid = this.sheet.lastCellid\r\n    this.sheet.isDraging = true\r\n}\r\n/**\r\n * 鼠标移动事件\r\n * @param element\r\n */\r\nSheetEventHandler.prototype.mouseMove = function (elementid) {\r\n    this.setCellBackgroundColor('#fff')\r\n    if (elementid) {\r\n        //var cellPropDiv=document.getElementById(\"cellProp\")\r\n        //cellPropDiv.style.display='none'\r\n        //cellPropDiv.innerHTML=''\r\n        this.sheet.lastCellid = elementid\r\n        this.sheet.editCells = this.sheet.getColAndRow()\r\n        if (this.sheet.isDraging) this.setCellBackgroundColor('#f69')\r\n        else this.setCellBackgroundColor('#69f')\r\n    }\r\n}\r\n/**\r\n * 鼠标抬起事件\r\n * @param element\r\n */\r\nSheetEventHandler.prototype.mouseUp = function (element) {\r\n    if (this.sheet.isDraging) {\r\n        if (!this.sheet.cells[this.sheet.firstCellid]) {\r\n            this.sheet.setAttr('content', '')\r\n        } else {\r\n            this.sheet.setAttr('content', this.sheet.cells[this.sheet.firstCellid].content)\r\n        }\r\n\r\n        this.sheet.render()\r\n    }\r\n    if (this.sheet.isMouseDown || this.sheet.isDraging) {\r\n        if (element.id) {\r\n            var dragBar = document.getElementById('dragBar')\r\n            dragBar.style.left = element.offsetLeft +element.offsetWidth-document.getElementById(config.SheetTableDivConfig.id).scrollLeft - 8 + 'px'\r\n            dragBar.style.top = element.offsetTop +element.offsetHeight -document.getElementById(config.SheetTableDivConfig.id).scrollTop  - 8 + 'px'\r\n            dragBar.style.display = 'block'\r\n            this.sheet.lastCellid = element.id\r\n            this.sheet.editCells = this.sheet.getColAndRow()\r\n            this.setCellBackgroundColor('#69f')\r\n\r\n\t\t\tthis.sliderBarHandler.autoOpen()\r\n\t\t\tthis.sliderBarHandler.addCellAttr()\r\n\r\n        }\r\n    }\r\n    this.sheet.isMouseDown = false\r\n    this.sheet.isDraging = false\r\n}\r\nSheetEventHandler.prototype.dragBarMouseUp = function () {\r\n    this.setCellBackgroundColor('#69f')\r\n    this.sheet.isMouseDown = false\r\n    this.sheet.isDraging = false\r\n}\r\n/**\r\n * 鼠标双击事件\r\n * @param element\r\n */\r\nSheetEventHandler.prototype.dblclick = function (element) {\r\n    if (element.id) {\r\n        var input = document.getElementById('input')\r\n        input.style.display = 'block'\r\n        input.style.backgroundColor = '#efe'\r\n        input.style.left = element.offsetLeft -document.getElementById(config.SheetTableDivConfig.id).scrollLeft + 'px'\r\n        input.style.top = element.offsetTop -document.getElementById(config.SheetTableDivConfig.id).scrollTop+ 'px'\r\n        input.style.height = element.offsetHeight + 'px'\r\n        input.style.width = element.offsetWidth + 'px'\r\n        if (this.sheet.cells[element.id]) {\r\n            input.value = this.sheet.cells[element.id].content\r\n        }\r\n        else {\r\n            input.value = ''\r\n        }\r\n        input.focus()\r\n        this.sheet.isEditing = true\r\n        this.sheet.isMouseDown = false\r\n    }\r\n}\r\nSheetEventHandler.prototype.inputBlur = function () {\r\n    this.sheet.isEditing = false\r\n    var input = document.getElementById('input')\r\n    input.blur()\r\n    input.style.display = 'none'\r\n    //var ele = this.sheet.lastCell\r\n    if (input.value) {\r\n        if(input.value[0] === '='){\r\n            var cc = formula.ParseFormulaIntoTokens(input.value.substring(1))\r\n            var dd = formula.evaluate_parsed_formula(cc)\r\n            this.sheet.setAttr('content', dd.value)\r\n        }\r\n        else this.sheet.setAttr('content', input.value)\r\n        this.sheet.render()\r\n        // var sp = document.getElementById('sp')\r\n        // sp.value = input.value\r\n        // sp.style.font = ele.firstChild.style.font\r\n        // sp.style.fontSize = ele.firstChild.style.fontSize\r\n        // this.sheet.cells[ele.id].viewWidth = sp.offsetWidth\r\n        // if(this.sheet.cells[ele.id].autoLF){\r\n        //     ele.width = this.sheet.cells[ele.id].width\r\n        // }else{\r\n        //     ele.width = this.sheet.cells[ele.id].viewWidth\r\n        // }\r\n    }\r\n    this.sheet.isEditing = false\r\n}\r\nSheetEventHandler.prototype.inputFocus = function () {\r\n    this.sheet.isEditing = true\r\n    var input = document.getElementById('input')\r\n    input.focus()\r\n}\r\n// //鼠标失去焦点事件\r\n// SheetEventHandler.prototype.mouseBlur=function(element){\r\n//     element.style.color='transparent'\r\n//     element.style.background='transparent'\r\n//     if(config.WSConfig.isKeyDown){\r\n//         var value=element.value\r\n//         if(element.nextSibling.innerHTML==''&&value!=''){\r\n//             var command = 'set '+ element.id + ' ' + value\r\n//             var type = 'set'\r\n//             this.sheet.UndoStack.pushCommand(command,type)\r\n//         }\r\n//         element.nextSibling.innerHTML=value\r\n//     }\r\n//     config.WSConfig.isKeyDown=true\r\n//     element.parentNode.style.backgroundColor = 'transparent'\r\n// }\r\n/**\r\n * 设置单元格背景颜色\r\n * @param backgroundColor\r\n */\r\nSheetEventHandler.prototype.setCellBackgroundColor = function (backgroundColor) {\r\n    var cells = this.sheet.editCells\r\n    if (cells != null) {\r\n        for (var i = cells.firstCellCol; i <= cells.lastCellCol; i++) {\r\n            for (var j = cells.firstCellRow; j <= cells.lastCellRow; j++) {\r\n                var ele = document.getElementById(String.fromCharCode(i) + '_' + j)\r\n                if (ele) {\r\n                    if (backgroundColor == '#fff'\r\n                        && this.sheet.cells[ele.id] != undefined\r\n                        && this.sheet.cells[ele.id].backgroundColor != undefined) {\r\n                        ele.style.backgroundColor = this.sheet.cells[ele.id].backgroundColor\r\n                    } else {\r\n                        ele.style.backgroundColor = backgroundColor\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 键盘按下事件\r\n * @param element\r\n * @param event\r\n */\r\nSheetEventHandler.prototype.keyDown = function (event) {\r\n    if (!this.sheet.isMultiLineEditing) {\r\n        var col = this.sheet.editCells.lastCellCol//element.id.split('_')[0].charCodeAt(0)\r\n        var row = this.sheet.editCells.lastCellRow//parseInt(element.id.split('_')[1])\r\n        console.log(event.which)\r\n        switch (event.which) {\r\n            case 17:\r\n                this.sheet.isCtrlDown = true\r\n                return\r\n            case 37://左键\r\n                do {\r\n                    col = col - 1\r\n                } while (this.sheet.cells[String.fromCharCode(col) + '_' + row] && !this.sheet.cells[String.fromCharCode(col) + '_' + row].show)\r\n                if (!this.sheet.isEditing && col > 64) {\r\n                    var cellid = String.fromCharCode(col) + '_' + row\r\n\r\n                    this.mouseDown(cellid)\r\n                    this.mouseUp(document.getElementById(cellid))\r\n\r\n                }\r\n                return false\r\n            case 38://上键\r\n                do {\r\n                    row = row - 1\r\n                } while (this.sheet.cells[String.fromCharCode(col) + '_' + row] && !this.sheet.cells[String.fromCharCode(col) + '_' + row].show)\r\n                var cellid = String.fromCharCode(col) + '_' + row\r\n\r\n                if (this.sheet.isEditing) {\r\n                    this.sheet.isEditing = false\r\n                    document.getElementById('input').blur()\r\n                }\r\n                if (row > 0) {\r\n                    this.mouseDown(cellid)\r\n                    this.mouseUp(document.getElementById(cellid))\r\n                }\r\n                return false\r\n            case 39://右键\r\n                do {\r\n                    col = col + 1\r\n                } while (this.sheet.cells[String.fromCharCode(col) + '_' + row] && !this.sheet.cells[String.fromCharCode(col) + '_' + row].show)\r\n                if (!this.sheet.isEditing) {\r\n                    var cellid = String.fromCharCode(col) + '_' + row\r\n                    if (document.getElementById(cellid)) {\r\n                        this.mouseDown(cellid)\r\n                        this.mouseUp(document.getElementById(cellid))\r\n                    }\r\n                }\r\n                return false\r\n            case 40://下键\r\n                do {\r\n                    row = row + 1\r\n                } while (this.sheet.cells[String.fromCharCode(col) + '_' + row] && !this.sheet.cells[String.fromCharCode(col) + '_' + row].show)\r\n                var cellid = String.fromCharCode(col) + '_' + row\r\n                if (document.getElementById(cellid)) {\r\n                    if (this.sheet.isEditing) {\r\n                        this.sheet.isEditing = false\r\n                        document.getElementById('input').blur()\r\n                    }\r\n                    this.mouseDown(cellid)\r\n                    this.mouseUp(document.getElementById(cellid))\r\n                }\r\n                return false\r\n            case 18://alt\r\n                break\r\n            case 67://ctrl+c\r\n                if(this.sheet.isCtrlDown){\r\n                    var ta = document.getElementById('ta')\r\n                    var text = ''\r\n                    //var firstCell=this.sheet.firstCell\r\n                    //var lastCell=this.sheet.lastCell\r\n                    var cells = this.sheet.getColAndRow()\r\n                    if (cells != null) {\r\n                        var rowCount = 0\r\n                        for (var i = cells.firstCellRow; i <= cells.lastCellRow; i++) {\r\n                            var colCount = 0\r\n                            for (var j = cells.firstCellCol; j <= cells.lastCellCol; j++) {\r\n                                var eleOld = document.getElementById(\r\n                                    String.fromCharCode(j)\r\n                                    + '_' + i)\r\n                                text += eleOld.firstChild.innerHTML + '\\t'\r\n                                colCount++\r\n                            }\r\n                            text = text.substr(0, text.length - 1)\r\n                            text += '\\n'\r\n                            rowCount++\r\n                        }\r\n                        text = text.substr(0, text.length - 1)\r\n                    }\r\n                    ta.value = text\r\n                    ta.style.display = 'block'\r\n                    ta.focus()\r\n                    ta.select()\r\n\r\n                    window.setTimeout(function () {\r\n                        ta.style.display = 'none'\r\n                        var cell = document.getElementById(col + '_' + row)\r\n                        //cell.focus()\r\n                    }, 200)\r\n                }\r\n                break\r\n            case 86://ctrl+v\r\n                if(this.sheet.isCtrlDown){\r\n                    var ta = document.getElementById('ta')\r\n                    ta.style.display = 'block'\r\n                    ta.focus()\r\n                    ta.select()\r\n                    var sheet = this.sheet\r\n                    window.setTimeout(function () {\r\n                        ta.blur()\r\n                        var v = ta.value\r\n                        ta.style.display = 'none'\r\n                        v = v.split('\\n')\r\n                        for (var i = 0; i < v.length; i++) {\r\n                            var vv = v[i].split('\\t')\r\n                            for (var j = 0; j < vv.length; j++) {\r\n                                var cvCol = col + j\r\n                                var cvRow = row + i\r\n                                var cells = {}\r\n                                cells.firstCellCol = cvCol\r\n                                cells.firstCellRow = cvRow\r\n                                cells.lastCellCol = cvCol\r\n                                cells.lastCellRow = cvRow\r\n                                sheet.setAttr('content', vv[j], cells)\r\n                            }\r\n                        }\r\n                        var cell = document.getElementById(String.fromCharCode(col) + '_' + row)\r\n                        cell.focus()\r\n                        sheet.render()\r\n                    }, 200)\r\n\r\n                }\r\n                this.sheet.isKeyDown = false\r\n                break\r\n            case 88://ctrl+x\r\n                if(this.sheet.isCtrlDown){\r\n                    var ta = document.getElementById('ta')\r\n                    var text = ''\r\n                    //var firstCell=this.sheet.firstCell\r\n                    //var lastCell=this.sheet.lastCell\r\n                    var cells = this.sheet.getColAndRow()\r\n                    if (cells != null) {\r\n                        var rowCount = 0\r\n                        for (var i = cells.firstCellRow; i <= cells.lastCellRow; i++) {\r\n                            var colCount = 0\r\n                            for (var j = cells.firstCellCol; j <= cells.lastCellCol; j++) {\r\n                                var eleOld = document.getElementById(\r\n                                    String.fromCharCode(j)\r\n                                    + '_' + i)\r\n                                text += eleOld.firstChild.innerHTML + '\\t'\r\n                                colCount++\r\n                            }\r\n                            text = text.substr(0, text.length - 1)\r\n                            text += '\\n'\r\n                            rowCount++\r\n                        }\r\n                        text = text.substr(0, text.length - 1)\r\n                    }\r\n                    ta.value = text\r\n                    ta.style.display = 'block'\r\n                    ta.focus()\r\n                    ta.select()\r\n\r\n                    window.setTimeout(function () {\r\n                        ta.style.display = 'none'\r\n                        var cell = document.getElementById(String.fromCharCode(col) + '_' + row)\r\n                        cell.focus()\r\n                    }, 200)\r\n\r\n                    this.sheet.setAttr('content', '')\r\n                    this.sheet.render()\r\n                }\r\n                break\r\n            case 8://backspace\r\n                this.sheet.setAttr('content', '')\r\n                this.sheet.render()\r\n                break\r\n            case 46://delete\r\n                var sheet = this.sheet\r\n                sheet.cellAttrs.forEach(function (attr) {\r\n                    sheet.setAttr(attr[0], attr[1])\r\n                })\r\n                sheet.render()\r\n                break\r\n            default:\r\n                if (!this.sheet.isEditing) {\r\n                    if (this.sheet.lastCellid) this.dblclick(document.getElementById(this.sheet.lastCellid))\r\n                }\r\n        }\r\n    }\r\n}\r\n\r\nSheetEventHandler.prototype.multiLineBlur = function (text) {\r\n    this.sheet.setAttr('content', text)\r\n    this.sheet.setAttr('wrapText', true)\r\n    this.sheet.render()\r\n    this.sheet.isMultiLineEditing = false\r\n}\r\n\r\nSheetEventHandler.prototype.formulaButonClick = function () {\r\n    var fname = document.getElementById('funcNameSelect').value\r\n    this.sheet.setAttr('content','='+fname+'(')\r\n    this.sheet.render()\r\n}\r\n\r\n//获取元素的纵坐标\r\n\r\nfunction getTop(e) {\r\n\r\n    var offset = e.offsetTop;\r\n\r\n    if (e.offsetParent != null) offset += getTop(e.offsetParent);\r\n\r\n    return offset;\r\n\r\n}\r\n\r\n\r\n//获取元素的横坐标\r\n\r\nfunction getLeft(e) {\r\n\r\n    var offset = e.offsetLeft\r\n\r\n    if (e.offsetParent != null) offset += getLeft(e.offsetParent)\r\n\r\n    return offset\r\n\r\n}\r\n\r\nmodule.exports.SheetEventHandler = SheetEventHandler\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/SheetEventHandler.js\n// module id = 3\n// module chunks = 0","/**\r\n * 渲染表格\r\n */\r\n\r\nvar config = require('config')\r\nvar style = require('style')\r\nvar SliderBarRender = require('SliderBarRender').SliderBarRender\r\nvar FuncListRender = require('FuncListRender').FuncListRender\r\nvar funcListRender = new FuncListRender()\r\n// config.CellConfig\r\nvar SheetRender = function (sheet) {\r\n\tthis.sheet=sheet\r\n}\r\n\r\nSheetRender.prototype.init = function (sheetDiv) {\r\n\r\n\tsheetDiv.style = style.SheetDivStyle\r\n\r\n\tvar sheetTableDiv = document.createElement('div')\r\n\tsheetTableDiv.style = style.SheetTableDivStyle\r\n\tsheetTableDiv.id = config.SheetTableDivConfig.id\r\n\r\n\tvar sheetTable = document.createElement('table')\r\n    sheetTable.style = style.SheetTableStyle\r\n\tsheetTable.cellSpacing = '10px'\r\n\r\n\tvar sliderBarDiv = document.createElement('div')\r\n\tsliderBarDiv.id = config.SlideBarConfig.id\r\n\tvar sliderBarRender = new SliderBarRender(this.sheet, sheetDiv)\r\n\tsliderBarRender.init(sliderBarDiv, sheetTableDiv)\r\n\r\n\t//sheetTable.cellSpacing = '10px'//\r\n\tsheetTable.id = 'sheetTable'\r\n    sheetDiv.appendChild(sheetTable)\r\n\r\n    sheetTableDiv.appendChild(sheetTable)\r\n\r\n\tsheetDiv.appendChild(sheetTableDiv)\r\n\tsheetDiv.appendChild(sliderBarDiv)\r\n\r\n    // var cellPropDiv = document.createElement(\"div\")\r\n    // cellPropDiv.id = config.CellPropConfig.id\r\n\t//\r\n\r\n    // cellPropDiv.style = style.CellPropDivStyle\r\n\r\n    // sheetDiv.appendChild(cellPropDiv)\r\n\r\n\t//表格的具体渲染\r\n\tthis.renderSheet(this.sheet, sheetTable)\r\n}\r\n\r\n/**\r\n * 构建表格的数据模型\r\n * 一个存放表头的二维数组\r\n * @param rowNum\r\n * @param colNum\r\n */\r\nfunction createHeader(rowNum, colNum) {\r\n\tvar gridHeader =  []\r\n\tfor(var a=0;a<rowNum+1;a++){\r\n        gridHeader[a] = []\r\n\r\n\t\tfor(var b=0;b<colNum+1;b++){\r\n            gridHeader[a][b] = null\r\n\t\t}\r\n\t}\r\n\tvar startString = \"A\"\r\n\r\n\tfor(var i=1; i<colNum+1; i++){\r\n        gridHeader[0][i] = String.fromCharCode(startString.charCodeAt(0) + i - 1)\r\n\t}\r\n\r\n\tfor(var j=1; j<rowNum+1; j++){\r\n        gridHeader[j][0] = j\r\n\t}\r\n\r\n\treturn gridHeader\r\n}\r\n/**\r\n * 表格渲染\r\n * @param sheet\r\n * @param sheetTable\r\n */\r\nSheetRender.prototype.renderSheet = function(sheet, sheetTable) {\r\n    for (var child = sheetTable.firstChild; child != null; child = sheetTable.firstChild) {\r\n        sheetTable.removeChild(child);\r\n    }\r\n    var gridHeader = createHeader(sheet.rowNum, sheet.colNum)\r\n\r\n    var rowNum = gridHeader.length\r\n    var colNum = gridHeader[0].length\r\n\r\n    var rowHead = document.createElement('tr')\r\n    sheetTable.appendChild(rowHead)\r\n    //渲染第一行表头\r\n    for (var i = 0; i < colNum; i++) {\r\n        var rowHeadTH = document.createElement('th')\r\n        // rowHeadTH.style.height = '20px'\r\n        rowHeadTH.id = gridHeader[0][i] + '_0'\r\n        rowHead.appendChild(rowHeadTH)\r\n\r\n        var rowHeadDiv = document.createElement('div')\r\n        rowHeadTH.appendChild(rowHeadDiv)\r\n        // 第一行第一列特殊处理\r\n        if (i === 0) {\r\n            //rowHeadTH.style.width = '29px'\r\n        } else {\r\n            rowHeadDiv.innerHTML = gridHeader[0][i]\r\n            rowHeadDiv.style.width = config.CellConfig.width + 'px'\r\n        }\r\n    }\r\n\r\n    var SheetEventBinderModule = require('SheetEventBinder')\r\n    var SheetEventBinder = SheetEventBinderModule.SheetEventBinder\r\n    var sheetEventBinder = new SheetEventBinder(sheet)\r\n\r\n    //渲染除第一行外单元格\r\n    for (var j = 1; j < rowNum; j++) {\r\n        var rowTR = document.createElement('tr')\r\n        sheetTable.appendChild(rowTR)\r\n\r\n        for (var k = 0; k < colNum; k++) {\r\n            //表格第一列特殊处理\r\n            if (k === 0) {\r\n                var rowTH = document.createElement('th')\r\n                rowTH.id = '@_' + gridHeader[j][0]\r\n                rowTR.appendChild(rowTH)\r\n                var rowDiv = document.createElement('div')\r\n                rowDiv.style.height = 25 + 'px'\r\n                rowTH.appendChild(rowDiv)\r\n                rowDiv.innerHTML = gridHeader[j][k]\r\n            } else {\r\n                var rowTD = document.createElement('td')\r\n                rowTD.id = gridHeader[0][k] + \"_\" + j\r\n                rowTR.appendChild(rowTD)\r\n                if (!sheet.isPreview) {\r\n                    sheetEventBinder.initRowTD(rowTD)\r\n                }\r\n                var rowDiv = document.createElement('div')\r\n                rowTD.className = \"noWrap\"\r\n                rowTD.appendChild(rowDiv)\r\n            }\r\n        }\r\n    }\r\n    if (!sheet.isPreview) {\r\n        sheetTable.style.borderCollapse = 'collapse'\r\n        sheetTable.style.border = '1px solid #ccc'\r\n        var input = document.createElement('input')\r\n        input.style = style.InputStyle\r\n        input.id = config.InputConfig.id\r\n\r\n        sheetEventBinder.initInput(input)\r\n\r\n\r\n        sheetTable.appendChild(input)\r\n\r\n        var clipBoard = document.createElement('textarea') // used for ctrl-c/ctrl-v where an invisible text area is needed\r\n        clipBoard.style = style.ClipBoardStyle\r\n        clipBoard.value = config.ClipBoardConfig.value;\r\n        clipBoard.id = config.ClipBoardConfig.id;\r\n        sheetTable.appendChild(clipBoard)\r\n\r\n        // var span = document.createElement('span') // 用于获得字符串的显示长度\r\n        // span.style = 'visibility: hidden;white-space: nowrap;filter:alpha(opacity=0);'\r\n        // span.value = '';\r\n        // span.id = 'sp'\r\n        // sheetTable.appendChild(span)\r\n\r\n        var multiLine = document.createElement('textarea')\r\n        multiLine.style = 'position: absolute;left: 30px;top: 20px;display:none;'\r\n        multiLine.style.left = screen.width / 2 - 150 + 'px'\r\n        multiLine.style.top = screen.height / 2 - 300 + 'px'\r\n        multiLine.style.width = 400 + 'px'\r\n        multiLine.style.height = 400 + 'px'\r\n        multiLine.value = '';\r\n        multiLine.id = 'multiLine1'\r\n        if (!config.WSConfig.isPreview) {\r\n            sheetEventBinder.initMultiLine(multiLine)\r\n        }\r\n        sheetTable.appendChild(multiLine)\r\n\r\n        var funcListDiv = document.createElement('div')\r\n        funcListRender.init( funcListDiv)\r\n        var formulaButton = document.createElement('input')\r\n        formulaButton.type = 'button'\r\n        formulaButton.value = 'Paste'\r\n        sheetEventBinder.initFormulaButton(formulaButton)\r\n        funcListDiv.appendChild(formulaButton)\r\n        sheetTable.appendChild(funcListDiv)\r\n        funcListDiv.id = 'funcListDiv'\r\n        funcListDiv.onblur = function () {\r\n            this.style.display = 'none'\r\n        }\r\n        funcListDiv.style = 'position: absolute;left: 30px;top: 20px;display:none'\r\n        funcListDiv.style.left = screen.width / 2 - 250 + 'px'\r\n        funcListDiv.style.top = screen.height / 2 - 380 + 'px'\r\n\r\n        var dragBar = document.createElement('div')\r\n        dragBar.style = 'position: absolute;'\r\n        dragBar.style.backgroundColor = 'yellow'\r\n        dragBar.style.width = 8 + 'px'\r\n        dragBar.style.height = 8 + 'px'\r\n        dragBar.style.display = 'none'\r\n        dragBar.id = 'dragBar'\r\n        dragBar.webkitUserDrag = 'true'\r\n        if (!config.WSConfig.isPreview) {\r\n            sheetEventBinder.initDragBar(dragBar)\r\n        }\r\n        sheetTable.appendChild(dragBar)\r\n    }\r\n\r\n}\r\n\r\nmodule.exports.SheetRender = SheetRender\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/SheetRender.js\n// module id = 4\n// module chunks = 0","/**\r\n * 单元格对象\r\n */\r\n\r\nvar configModule = require('config')\r\n\r\nvar cellConfig = configModule.CellConfig\r\n\r\nvar Cell = function (coord) {\r\n\r\n\t//成员属性\r\n\t//设置默认值\r\n\t//this.autoLF = false\r\n\r\n\t//this.viewWidth = 0\r\n\r\n\tthis.height = cellConfig.height\r\n\tthis.width = cellConfig.width\r\n\r\n\tthis.foregroundColor = ''\r\n\tthis.backgroundColor = ''\r\n\r\n\tthis.font = ''\r\n\tthis.fontSize = ''\r\n\t// // this.fontWeight = false\r\n\t// // this.fontStyle = false\r\n\r\n\tthis.topFrame = false\r\n\tthis.bottomFrame = false\r\n\tthis.leftFrame = false\r\n\tthis.rightFrame = false\r\n\r\n\tthis.alignment = 'left'\r\n\tthis.wrapText = false\r\n\r\n\tthis.coord = coord\r\n\r\n\tthis.content = ''\r\n\t// this.value = null\r\n\r\n\tthis.show = true\r\n\r\n\tthis.bold = false\r\n\tthis.italic = false\r\n\r\n\tthis.colSpan = 1\r\n\tthis.rowSpan = 1\r\n}\r\n\r\nmodule.exports.Cell = Cell\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/Cell.js\n// module id = 5\n// module chunks = 0","var Formula = function () {\r\n\r\n    //\r\n// Formula constants for parsing:\r\n//\r\n\r\n    this.ParseState = {\r\n        num: 1,\r\n        alpha: 2,\r\n        coord: 3,\r\n        string: 4,\r\n        stringquote: 5,\r\n        numexp1: 6,\r\n        numexp2: 7,\r\n        alphanumeric: 8,\r\n        specialvalue: 9\r\n    };\r\n\r\n    this.TokenType = {num: 1, coord: 2, op: 3, name: 4, error: 5, string: 6, space: 7};\r\n\r\n    this.CharClass = {\r\n        num: 1,\r\n        numstart: 2,\r\n        op: 3,\r\n        eof: 4,\r\n        alpha: 5,\r\n        incoord: 6,\r\n        error: 7,\r\n        quote: 8,\r\n        space: 9,\r\n        specialstart: 10\r\n    };\r\n\r\n    this.CharClassTable = {\r\n        \" \": 9,\r\n        \"!\": 3,\r\n        '\"': 8,\r\n        \"#\": 10,\r\n        \"$\": 6,\r\n        \"%\": 3,\r\n        \"&\": 3,\r\n        \"(\": 3,\r\n        \")\": 3,\r\n        \"*\": 3,\r\n        \"+\": 3,\r\n        \",\": 3,\r\n        \"-\": 3,\r\n        \".\": 2,\r\n        \"/\": 3,\r\n        \"0\": 1,\r\n        \"1\": 1,\r\n        \"2\": 1,\r\n        \"3\": 1,\r\n        \"4\": 1,\r\n        \"5\": 1,\r\n        \"6\": 1,\r\n        \"7\": 1,\r\n        \"8\": 1,\r\n        \"9\": 1,\r\n        \":\": 3,\r\n        \"<\": 3,\r\n        \"=\": 3,\r\n        \">\": 3,\r\n        \"A\": 5,\r\n        \"B\": 5,\r\n        \"C\": 5,\r\n        \"D\": 5,\r\n        \"E\": 5,\r\n        \"F\": 5,\r\n        \"G\": 5,\r\n        \"H\": 5,\r\n        \"I\": 5,\r\n        \"J\": 5,\r\n        \"K\": 5,\r\n        \"L\": 5,\r\n        \"M\": 5,\r\n        \"N\": 5,\r\n        \"O\": 5,\r\n        \"P\": 5,\r\n        \"Q\": 5,\r\n        \"R\": 5,\r\n        \"S\": 5,\r\n        \"T\": 5,\r\n        \"U\": 5,\r\n        \"V\": 5,\r\n        \"W\": 5,\r\n        \"X\": 5,\r\n        \"Y\": 5,\r\n        \"Z\": 5,\r\n        \"^\": 3,\r\n        \"_\": 5,\r\n        \"a\": 5,\r\n        \"b\": 5,\r\n        \"c\": 5,\r\n        \"d\": 5,\r\n        \"e\": 5,\r\n        \"f\": 5,\r\n        \"g\": 5,\r\n        \"h\": 5,\r\n        \"i\": 5,\r\n        \"j\": 5,\r\n        \"k\": 5,\r\n        \"l\": 5,\r\n        \"m\": 5,\r\n        \"n\": 5,\r\n        \"o\": 5,\r\n        \"p\": 5,\r\n        \"q\": 5,\r\n        \"r\": 5,\r\n        \"s\": 5,\r\n        \"t\": 5,\r\n        \"u\": 5,\r\n        \"v\": 5,\r\n        \"w\": 5,\r\n        \"x\": 5,\r\n        \"y\": 5,\r\n        \"z\": 5\r\n    };\r\n\r\n    this.UpperCaseTable = {\r\n        \"a\": \"A\",\r\n        \"b\": \"B\",\r\n        \"c\": \"C\",\r\n        \"d\": \"D\",\r\n        \"e\": \"E\",\r\n        \"f\": \"F\",\r\n        \"g\": \"G\",\r\n        \"h\": \"H\",\r\n        \"i\": \"I\",\r\n        \"j\": \"J\",\r\n        \"k\": \"K\",\r\n        \"l\": \"L\",\r\n        \"m\": \"M\",\r\n        \"n\": \"N\",\r\n        \"o\": \"O\",\r\n        \"p\": \"P\",\r\n        \"q\": \"Q\",\r\n        \"r\": \"R\",\r\n        \"s\": \"S\",\r\n        \"t\": \"T\",\r\n        \"u\": \"U\",\r\n        \"v\": \"V\",\r\n        \"w\": \"W\",\r\n        \"x\": \"X\",\r\n        \"y\": \"Y\",\r\n        \"z\": \"Z\"\r\n    }\r\n\r\n    this.SpecialConstants = { // names that turn into constants for name lookup\r\n        \"#NULL!\": \"0,e#NULL!\", \"#NUM!\": \"0,e#NUM!\", \"#DIV/0!\": \"0,e#DIV/0!\", \"#VALUE!\": \"0,e#VALUE!\",\r\n        \"#REF!\": \"0,e#REF!\", \"#NAME?\": \"0,e#NAME?\"\r\n    };\r\n\r\n\r\n    // Operator Precedence table\r\n    //\r\n    // 1- !, 2- : ,, 3- M P, 4- %, 5- ^, 6- * /, 7- + -, 8- &, 9- < > = G(>=) L(<=) N(<>),\r\n    // Negative value means Right Associative\r\n\r\n    this.TokenPrecedence = {\r\n        \"!\": 1,\r\n        \":\": 2, \",\": 2,\r\n        \"M\": -3, \"P\": -3,\r\n        \"%\": 4,\r\n        \"^\": 5,\r\n        \"*\": 6, \"/\": 6,\r\n        \"+\": 7, \"-\": 7,\r\n        \"&\": 8,\r\n        \"<\": 9, \">\": 9, \"G\": 9, \"L\": 9, \"N\": 9\r\n    };\r\n\r\n    // Convert one-char token text to input text:\r\n\r\n    this.TokenOpExpansion = {'G': '>=', 'L': '<=', 'M': '-', 'N': '<>', 'P': '+'};\r\n\r\n    //\r\n    // Information about the resulting value types when doing operations on values (used by LookupResultType)\r\n    //\r\n    // Each object entry is an object with specific types with result type info as follows:\r\n    //\r\n    //    'type1a': '|type2a:resulta|type2b:resultb|...\r\n    //    Type of t* or n* matches any of those types not listed\r\n    //    Results may be a type or the numbers 1 or 2 specifying to return type1 or type2\r\n\r\n\r\n    this.TypeLookupTable = {\r\n        unaryminus: {'n*': '|n*:1|', 'e*': '|e*:1|', 't*': '|t*:e#VALUE!|', 'b': '|b:n|'},\r\n        unaryplus: {'n*': '|n*:1|', 'e*': '|e*:1|', 't*': '|t*:e#VALUE!|', 'b': '|b:n|'},\r\n        unarypercent: {'n*': '|n:n%|n*:n|', 'e*': '|e*:1|', 't*': '|t*:e#VALUE!|', 'b': '|b:n|'},\r\n        plus: {\r\n            'n%': '|n%:n%|nd:n|nt:n|ndt:n|n$:n|n:n|n*:n|b:n|e*:2|t*:e#VALUE!|',\r\n            'nd': '|n%:n|nd:nd|nt:ndt|ndt:ndt|n$:n|n:nd|n*:n|b:n|e*:2|t*:e#VALUE!|',\r\n            'nt': '|n%:n|nd:ndt|nt:nt|ndt:ndt|n$:n|n:nt|n*:n|b:n|e*:2|t*:e#VALUE!|',\r\n            'ndt': '|n%:n|nd:ndt|nt:ndt|ndt:ndt|n$:n|n:ndt|n*:n|b:n|e*:2|t*:e#VALUE!|',\r\n            'n$': '|n%:n|nd:n|nt:n|ndt:n|n$:n$|n:n$|n*:n|b:n|e*:2|t*:e#VALUE!|',\r\n            'nl': '|n%:n|nd:n|nt:n|ndt:n|n$:n|n:n|n*:n|b:n|e*:2|t*:e#VALUE!|',\r\n            'n': '|n%:n|nd:nd|nt:nt|ndt:ndt|n$:n$|n:n|n*:n|b:n|e*:2|t*:e#VALUE!|',\r\n            'b': '|n%:n%|nd:nd|nt:nt|ndt:ndt|n$:n$|n:n|n*:n|b:n|e*:2|t*:e#VALUE!|',\r\n            't*': '|n*:e#VALUE!|t*:e#VALUE!|b:e#VALUE!|e*:2|',\r\n            'e*': '|e*:1|n*:1|t*:1|b:1|'\r\n        },\r\n        concat: {\r\n            't': '|t:t|th:th|tw:tw|tl:t|tr:tr|t*:2|e*:2|',\r\n            'th': '|t:th|th:th|tw:t|tl:th|tr:t|t*:t|e*:2|',\r\n            'tw': '|t:tw|th:t|tw:tw|tl:tw|tr:tw|t*:t|e*:2|',\r\n            'tl': '|t:tl|th:th|tw:tw|tl:tl|tr:tr|t*:t|e*:2|',\r\n            't*': '|t*:t|e*:2|',\r\n            'e*': '|e*:1|n*:1|t*:1|'\r\n        },\r\n        oneargnumeric: {'n*': '|n*:n|', 'e*': '|e*:1|', 't*': '|t*:e#VALUE!|', 'b': '|b:n|'},\r\n        twoargnumeric: {\r\n            'n*': '|n*:n|t*:e#VALUE!|e*:2|',\r\n            'e*': '|e*:1|n*:1|t*:1|',\r\n            't*': '|t*:e#VALUE!|n*:e#VALUE!|e*:2|'\r\n        },\r\n        propagateerror: {'n*': '|n*:2|e*:2|', 'e*': '|e*:2|', 't*': '|t*:2|e*:2|', 'b': '|b:2|e*:2|'}\r\n    };\r\n    this.scc = {\r\n        s_parseerrexponent: \"Improperly formed number exponent\",\r\n        s_parseerrchar: \"Unexpected character in formula\",\r\n        s_parseerrstring: \"Improperly formed string\",\r\n        s_parseerrspecialvalue: \"Improperly formed special value\",\r\n        s_parseerrtwoops: \"Error in formula (two operators inappropriately in a row)\",\r\n        s_parseerrmissingopenparen: \"Missing open parenthesis in list with comma(s). \",\r\n        s_parseerrcloseparennoopen: \"Closing parenthesis without open parenthesis. \",\r\n        s_parseerrmissingcloseparen: \"Missing close parenthesis. \",\r\n        s_parseerrmissingoperand: \"Missing operand. \",\r\n        s_parseerrerrorinformula: \"Error in formula.\",\r\n        s_calcerrerrorvalueinformula: \"Error value in formula\",\r\n        s_parseerrerrorinformulabadval: \"Error in formula resulting in bad value\",\r\n        s_formularangeresult: \"Formula results in range value:\",\r\n        s_calcerrnumericnan: \"Formula results in an bad numeric value\",\r\n        s_calcerrnumericoverflow: \"Numeric overflow\",\r\n        s_sheetunavailable: \"Sheet unavailable:\", // when FindSheetInCache returns null\r\n        s_calcerrcellrefmissing: \"Cell reference missing when expected.\",\r\n        s_calcerrsheetnamemissing: \"Sheet name missing when expected.\",\r\n        s_circularnameref: \"Circular name reference to name\",\r\n        s_calcerrunknownname: \"Unknown name\",\r\n        s_calcerrincorrectargstofunction: \"Incorrect arguments to function\",\r\n        s_sheetfuncunknownfunction: \"Unknown function\",\r\n        s_sheetfunclnarg: \"LN argument must be greater than 0\",\r\n        s_sheetfunclog10arg: \"LOG10 argument must be greater than 0\",\r\n        s_sheetfunclogsecondarg: \"LOG second argument must be numeric greater than 0\",\r\n        s_sheetfunclogfirstarg: \"LOG first argument must be greater than 0\",\r\n        s_sheetfuncroundsecondarg: \"ROUND second argument must be numeric\",\r\n        s_sheetfuncddblife: \"DDB life must be greater than 1\",\r\n        s_sheetfuncslnlife: \"SLN life must be greater than 1\",\r\n    }\r\n\r\n\r\n    this.FunctionClassList = {\r\n        //'statistics': [],\r\n        'lookup': [],\r\n        'datetime': [],\r\n        'financial': [],\r\n        'test': [],\r\n        'math': [],\r\n        'text': [],\r\n        'stat': []\r\n    }\r\n\r\n\r\n    this.funcParem = {\r\n        'CHOOSE': 'choose',\r\n        'COLUMNS': 'range',\r\n        'ROWS': 'range',\r\n        'INDEX': 'index',\r\n        'HLOOKUP': 'hlookup',\r\n        'MATCH': 'match',\r\n        'VLOOKUP': 'vlookup',\r\n        'TODAY': '',\r\n        'HOUR': 'v',\r\n        'MINUTE': 'v',\r\n        'SECOND': 'v',\r\n        'DAY': 'v',\r\n        'MONTH': 'v',\r\n        'YEAR': 'v',\r\n        'WEEKDAY': 'weekday',\r\n        'TIME': 'hms',\r\n        'DATE': 'date',\r\n        'DDB': 'ddb',\r\n        'SLN': 'csl',\r\n        'SYD': 'cslp',\r\n        'FV': 'fv',\r\n        'NPER': 'nper',\r\n        'PMT': 'pmt',\r\n        'PV': 'pv',\r\n        'RATE': 'rate',\r\n        'NPV': 'npv',\r\n        'IRR': 'irr',\r\n        'AND': 'vn',\r\n        'OR': 'vn',\r\n        'NOT': 'v',\r\n        'FALSE': '',\r\n        'NA': '',\r\n        'NOW': '',\r\n        'PI': '',\r\n        'TRUE': '',\r\n        'T': 'v',\r\n        'VALUE': 'v',\r\n        'ISBLANK': 'v',\r\n        'ISERR': 'v',\r\n        'ISERROR': 'v',\r\n        'ISLOGICAL': 'v',\r\n        'ISNA': 'v',\r\n        'ISNONTEXT': 'v',\r\n        'ISNUMBER': 'v',\r\n        'ISTEXT': 'v',\r\n        'IF': 'iffunc',\r\n        'ABS': 'v',\r\n        'ACOS': 'v',\r\n        'ASIN': 'v',\r\n        'ATAN': 'v',\r\n        'COS': 'v',\r\n        'DEGREES': 'v',\r\n        'EVEN': 'v',\r\n        'EXP': 'v',\r\n        'FACT': 'v',\r\n        'INT': 'v',\r\n        'LN': 'v',\r\n        'LOG10': 'v',\r\n        'ODD': 'v',\r\n        'RADIANS': 'v',\r\n        'SIN': 'v',\r\n        'SQRT': 'v',\r\n        'TAN': 'v',\r\n        'ATAN2': 'xy',\r\n        'MOD': '',\r\n        'POWER': '',\r\n        'TRUNC': 'valpre',\r\n        'LOG': 'log',\r\n        'ROUND': 'vp',\r\n        'N': 'v',\r\n        'FIND': 'find',\r\n        'LEFT': 'tc',\r\n        'LEN': 'txt',\r\n        'LOWER': 'txt',\r\n        'MID': 'mid',\r\n        'PROPER': 'v',\r\n        'REPLACE': 'replace',\r\n        'REPT': 'tc',\r\n        'RIGHT': 'tc',\r\n        'SUBSTITUTE': 'subs',\r\n        'TRIM': 'v',\r\n        'UPPER': 'v',\r\n        'EXACT': '',\r\n        'COUNTIF': 'rangec',\r\n        'SUMIF': 'sumif',\r\n        'DAVERAGE': 'dfunc',\r\n        'DCOUNT': 'dfunc',\r\n        'DCOUNTA': 'dfunc',\r\n        'DGET': 'dfunc',\r\n        'DMAX': 'dfunc',\r\n        'DMIN': 'dfunc',\r\n        'DPRODUCT': 'dfunc',\r\n        'DSTDEV': 'dfunc',\r\n        'DSTDEVP': 'dfunc',\r\n        'DSUM': 'dfunc',\r\n        'DVAR': 'dfunc',\r\n        'DVARP': 'dfunc',\r\n        'AVERAGE': 'vn',\r\n        'COUNT': 'vn',\r\n        'COUNTA': 'vn',\r\n        'COUNTBLANK': 'vn',\r\n        'MAX': 'vn',\r\n        'MIN': 'vn',\r\n        'PRODUCT': 'vn',\r\n        'STDEV': 'vn',\r\n        'STDEVP': 'vn',\r\n        'SUM': 'vn',\r\n        'VAR': 'vn',\r\n        'VARP': 'vn',\r\n\r\n\r\n    }\r\n\r\n    this.funcInfo = {\r\n        s_fdef_ABS: 'Absolute value function. ',\r\n        s_fdef_ACOS: 'Trigonometric arccosine function. ',\r\n        s_fdef_AND: 'True if all arguments are true. ',\r\n        s_fdef_ASIN: 'Trigonometric arcsine function. ',\r\n        s_fdef_ATAN: 'Trigonometric arctan function. ',\r\n        s_fdef_ATAN2: 'Trigonometric arc tangent function (result is in radians). ',\r\n        s_fdef_AVERAGE: 'Averages the values. ',\r\n        s_fdef_CHOOSE: 'Returns the value specified by the index. The values may be ranges of cells. ',\r\n        s_fdef_COLUMNS: 'Returns the number of columns in the range. ',\r\n        s_fdef_COS: 'Trigonometric cosine function (value is in radians). ',\r\n        s_fdef_COUNT: 'Counts the number of numeric values, not blank, text, or error. ',\r\n        s_fdef_COUNTA: 'Counts the number of non-blank values. ',\r\n        s_fdef_COUNTBLANK: 'Counts the number of blank values. (Note: \"\" is not blank.) ',\r\n        s_fdef_COUNTIF: 'Counts the number of number of cells in the range that meet the criteria. The criteria may be a value (\"x\", 15, 1+3) or a test (>25). ',\r\n        s_fdef_DATE: 'Returns the appropriate date value given numbers for year, month, and day. For example: DATE(2006,2,1) for February 1, 2006. Note: In this program, day \"1\" is December 31, 1899 and the year 1900 is not a leap year. Some programs use January 1, 1900, as day \"1\" and treat 1900 as a leap year. In both cases, though, dates on or after March 1, 1900, are the same. ',\r\n        s_fdef_DAVERAGE: 'Averages the values in the specified field in records that meet the criteria. ',\r\n        s_fdef_DAY: 'Returns the day of month for a date value. ',\r\n        s_fdef_DCOUNT: 'Counts the number of numeric values, not blank, text, or error, in the specified field in records that meet the criteria. ',\r\n        s_fdef_DCOUNTA: 'Counts the number of non-blank values in the specified field in records that meet the criteria. ',\r\n        s_fdef_DDB: 'Returns the amount of depreciation at the given period of time (the default factor is 2 for double-declining balance).   ',\r\n        s_fdef_DEGREES: 'Converts value in radians into degrees. ',\r\n        s_fdef_DGET: 'Returns the value of the specified field in the single record that meets the criteria. ',\r\n        s_fdef_DMAX: 'Returns the maximum of the numeric values in the specified field in records that meet the criteria. ',\r\n        s_fdef_DMIN: 'Returns the maximum of the numeric values in the specified field in records that meet the criteria. ',\r\n        s_fdef_DPRODUCT: 'Returns the result of multiplying the numeric values in the specified field in records that meet the criteria. ',\r\n        s_fdef_DSTDEV: 'Returns the sample standard deviation of the numeric values in the specified field in records that meet the criteria. ',\r\n        s_fdef_DSTDEVP: 'Returns the standard deviation of the numeric values in the specified field in records that meet the criteria. ',\r\n        s_fdef_DSUM: 'Returns the sum of the numeric values in the specified field in records that meet the criteria. ',\r\n        s_fdef_DVAR: 'Returns the sample variance of the numeric values in the specified field in records that meet the criteria. ',\r\n        s_fdef_DVARP: 'Returns the variance of the numeric values in the specified field in records that meet the criteria. ',\r\n        s_fdef_EVEN: 'Rounds the value up in magnitude to the nearest even integer. ',\r\n        s_fdef_EXACT: 'Returns \"true\" if the values are exactly the same, including case, type, etc. ',\r\n        s_fdef_EXP: 'Returns e raised to the value power. ',\r\n        s_fdef_FACT: 'Returns factorial of the value. ',\r\n        s_fdef_FALSE: 'Returns the logical value \"false\". ',\r\n        s_fdef_FIND: 'Returns the starting position within string2 of the first occurrence of string1 at or after \"start\". If start is omitted, 1 is assumed. ',\r\n        s_fdef_FV: 'Returns the future value of repeated payments of money invested at the given rate for the specified number of periods, with optional present value (default 0) and payment type (default 0 = at end of period, 1 = beginning of period). ',\r\n        s_fdef_HLOOKUP: 'Look for the matching value for the given value in the range and return the corresponding value in the cell specified by the row offset. If rangelookup is 1 (the default) and not 0, match if within numeric brackets (match<=value) instead of exact match. ',\r\n        s_fdef_HOUR: 'Returns the hour portion of a time or date/time value. ',\r\n        s_fdef_IF: 'Results in true-value if logical-expression is TRUE or non-zero, otherwise results in false-value. ',\r\n        s_fdef_INDEX: 'Returns a cell or range reference for the specified row and column in the range. If range is 1-dimensional, then only one of rownum or colnum are needed. If range is 2-dimensional and rownum or colnum are zero, a reference to the range of just the specified column or row is returned. You can use the returned reference value in a range, e.g., sum(A1:INDEX(A2:A10,4)). ',\r\n        s_fdef_INT: 'Returns the value rounded down to the nearest integer (towards -infinity). ',\r\n        s_fdef_IRR: 'Returns the interest rate at which the cash flows in the range have a net present value of zero. Uses an iterative process that will return #NUM! error if it does not converge. There may be more than one possible solution. Providing the optional guess value may help in certain situations where it does not converge or finds an inappropriate solution (the default guess is 10%). ',\r\n        s_fdef_ISBLANK: 'Returns \"true\" if the value is a reference to a blank cell. ',\r\n        s_fdef_ISERR: 'Returns \"true\" if the value is of type \"Error\" but not \"NA\". ',\r\n        s_fdef_ISERROR: 'Returns \"true\" if the value is of type \"Error\". ',\r\n        s_fdef_ISLOGICAL: 'Returns \"true\" if the value is of type \"Logical\" (true/false). ',\r\n        s_fdef_ISNA: 'Returns \"true\" if the value is the error type \"NA\". ',\r\n        s_fdef_ISNONTEXT: 'Returns \"true\" if the value is not of type \"Text\". ',\r\n        s_fdef_ISNUMBER: 'Returns \"true\" if the value is of type \"Number\" (including logical values). ',\r\n        s_fdef_ISTEXT: 'Returns \"true\" if the value is of type \"Text\". ',\r\n        s_fdef_LEFT: 'Returns the specified number of characters from the text value. If count is omitted, 1 is assumed. ',\r\n        s_fdef_LEN: 'Returns the number of characters in the text value. ',\r\n        s_fdef_LN: 'Returns the natural logarithm of the value. ',\r\n        s_fdef_LOG: 'Returns the logarithm of the value using the specified base. ',\r\n        s_fdef_LOG10: 'Returns the base 10 logarithm of the value. ',\r\n        s_fdef_LOWER: 'Returns the text value with all uppercase characters converted to lowercase. ',\r\n        s_fdef_MATCH: 'Look for the matching value for the given value in the range and return position (the first is 1) in that range. If rangelookup is 1 (the default) and not 0, match if within numeric brackets (match<=value) instead of exact match. If rangelookup is -1, act like 1 but the bracket is match>=value. ',\r\n        s_fdef_MAX: 'Returns the maximum of the numeric values. ',\r\n        s_fdef_MID: 'Returns the specified number of characters from the text value starting from the specified position. ',\r\n        s_fdef_MIN: 'Returns the minimum of the numeric values. ',\r\n        s_fdef_MINUTE: 'Returns the minute portion of a time or date/time value. ',\r\n        s_fdef_MOD: 'Returns the remainder of the first value divided by the second. ',\r\n        s_fdef_MONTH: 'Returns the month part of a date value. ',\r\n        s_fdef_N: 'Returns the value if it is a numeric value otherwise an error. ',\r\n        s_fdef_NA: 'Returns the #N/A error value which propagates through most operations. ',\r\n        s_fdef_NOT: 'Returns FALSE if value is true, and TRUE if it is false. ',\r\n        s_fdef_NOW: 'Returns the current date/time. ',\r\n        s_fdef_NPER: 'Returns the number of periods at which payments invested each period at the given rate with optional future value (default 0) and payment type (default 0 = at end of period, 1 = beginning of period) has the given present value. ',\r\n        s_fdef_NPV: 'Returns the net present value of cash flows (which may be individual values and/or ranges) at the given rate. The flows are positive if income, negative if paid out, and are assumed at the end of each period. ',\r\n        s_fdef_ODD: 'Rounds the value up in magnitude to the nearest odd integer. ',\r\n        s_fdef_OR: 'True if any argument is true ',\r\n        s_fdef_PI: 'The value 3.1415926... ',\r\n        s_fdef_PMT: 'Returns the amount of each payment that must be invested at the given rate for the specified number of periods to have the specified present value, with optional future value (default 0) and payment type (default 0 = at end of period, 1 = beginning of period). ',\r\n        s_fdef_POWER: 'Returns the first value raised to the second value power. ',\r\n        s_fdef_PRODUCT: 'Returns the result of multiplying the numeric values. ',\r\n        s_fdef_PROPER: 'Returns the text value with the first letter of each word converted to uppercase and the others to lowercase. ',\r\n        s_fdef_PV: 'Returns the present value of the given number of payments each invested at the given rate, with optional future value (default 0) and payment type (default 0 = at end of period, 1 = beginning of period). ',\r\n        s_fdef_RADIANS: 'Converts value in degrees into radians. ',\r\n        s_fdef_RATE: 'Returns the rate at which the given number of payments each invested at the given rate has the specified present value, with optional future value (default 0) and payment type (default 0 = at end of period, 1 = beginning of period). Uses an iterative process that will return #NUM! error if it does not converge. There may be more than one possible solution. Providing the optional guess value may help in certain situations where it does not converge or finds an inappropriate solution (the default guess is 10%). ',\r\n        s_fdef_REPLACE: 'Returns text1 with the specified number of characters starting from the specified position replaced by text2. ',\r\n        s_fdef_REPT: 'Returns the text repeated the specified number of times. ',\r\n        s_fdef_RIGHT: 'Returns the specified number of characters from the text value starting from the end. If count is omitted, 1 is assumed. ',\r\n        s_fdef_ROUND: 'Rounds the value to the specified number of decimal places. If precision is negative, then round to powers of 10. The default precision is 0 (round to integer). ',\r\n        s_fdef_ROWS: 'Returns the number of rows in the range. ',\r\n        s_fdef_SECOND: 'Returns the second portion of a time or date/time value (truncated to an integer). ',\r\n        s_fdef_SIN: 'Trigonometric sine function (value is in radians) ',\r\n        s_fdef_SLN: 'Returns the amount of depreciation at each period of time using the straight-line method. ',\r\n        s_fdef_SQRT: 'Square root of the value ',\r\n        s_fdef_STDEV: 'Returns the sample standard deviation of the numeric values. ',\r\n        s_fdef_STDEVP: 'Returns the standard deviation of the numeric values. ',\r\n        s_fdef_SUBSTITUTE: 'Returns text1 with the all occurrences of oldtext replaced by newtext. If \"occurrence\" is present, then only that occurrence is replaced. ',\r\n        s_fdef_SUM: 'Adds the numeric values. The values to the sum function may be ranges in the form similar to A1:B5. ',\r\n        s_fdef_SUMIF: 'Sums the numeric values of cells in the range that meet the criteria. The criteria may be a value (\"x\", 15, 1+3) or a test (>25). If range2 is present, then range1 is tested and the corresponding range2 value is summed. ',\r\n        s_fdef_SYD: 'Depreciation by Sum of Year\\'s Digits method. ',\r\n        s_fdef_T: 'Returns the text value or else a null string. ',\r\n        s_fdef_TAN: 'Trigonometric tangent function (value is in radians) ',\r\n        s_fdef_TIME: 'Returns the time value given the specified hour, minute, and second. ',\r\n        s_fdef_TODAY: 'Returns the current date (an integer). Note: In this program, day \"1\" is December 31, 1899 and the year 1900 is not a leap year. Some programs use January 1, 1900, as day \"1\" and treat 1900 as a leap year. In both cases, though, dates on or after March 1, 1900, are the same. ',\r\n        s_fdef_TRIM: 'Returns the text value with leading, trailing, and repeated spaces removed. ',\r\n        s_fdef_TRUE: 'Returns the logical value \"true\". ',\r\n        s_fdef_TRUNC: 'Truncates the value to the specified number of decimal places. If precision is negative, truncate to powers of 10. ',\r\n        s_fdef_UPPER: 'Returns the text value with all lowercase characters converted to uppercase. ',\r\n        s_fdef_VALUE: 'Converts the specified text value into a numeric value. Various forms that look like numbers (including digits followed by %, forms that look like dates, etc.) are handled. This may not handle all of the forms accepted by other spreadsheets and may be locale dependent. ',\r\n        s_fdef_VAR: 'Returns the sample variance of the numeric values. ',\r\n        s_fdef_VARP: 'Returns the variance of the numeric values. ',\r\n        s_fdef_VLOOKUP: 'Look for the matching value for the given value in the range and return the corresponding value in the cell specified by the column offset. If rangelookup is 1 (the default) and not 0, match if within numeric brackets (match>=value) instead of exact match. ',\r\n        s_fdef_WEEKDAY: 'Returns the day of week specified by the date value. If type is 1 (the default), Sunday is day and Saturday is day 7. If type is 2, Monday is day 1 and Sunday is day 7. If type is 3, Monday is day 0 and Sunday is day 6. ',\r\n        s_fdef_YEAR: 'Returns the year part of a date value. ',\r\n\r\n        s_farg_v: \"value\",\r\n        s_farg_vn: \"value1, value2, ...\",\r\n        s_farg_xy: \"valueX, valueY\",\r\n        s_farg_choose: \"index, value1, value2, ...\",\r\n        s_farg_range: \"range\",\r\n        s_farg_rangec: \"range, criteria\",\r\n        s_farg_date: \"year, month, day\",\r\n        s_farg_dfunc: \"databaserange, fieldname, criteriarange\",\r\n        s_farg_ddb: \"cost, salvage, lifetime, period [, factor]\",\r\n        s_farg_find: \"string1, string2 [, start]\",\r\n        s_farg_fv: \"rate, n, payment, [pv, [paytype]]\",\r\n        s_farg_hlookup: \"value, range, row, [rangelookup]\",\r\n        s_farg_iffunc: \"logical-expression, true-value, false-value\",\r\n        s_farg_index: \"range, rownum, colnum\",\r\n        s_farg_irr: \"range, [guess]\",\r\n        s_farg_tc: \"text, count\",\r\n        s_farg_log: \"value, base\",\r\n        s_farg_match: \"value, range, [rangelookup]\",\r\n        s_farg_mid: \"text, start, length\",\r\n        s_farg_nper: \"rate, payment, pv, [fv, [paytype]]\",\r\n        s_farg_npv: \"rate, value1, value2, ...\",\r\n        s_farg_pmt: \"rate, n, pv, [fv, [paytype]]\",\r\n        s_farg_pv: \"rate, n, payment, [fv, [paytype]]\",\r\n        s_farg_rate: \"n, payment, pv, [fv, [paytype, [guess]]]\",\r\n        s_farg_replace: \"text1, start, length, text2\",\r\n        s_farg_vp: \"value, [precision]\",\r\n        s_farg_valpre: \"value, precision\",\r\n        s_farg_csl: \"cost, salvage, lifetime\",\r\n        s_farg_cslp: \"cost, salvage, lifetime, period\",\r\n        s_farg_subs: \"text1, oldtext, newtext [, occurrence]\",\r\n        s_farg_sumif: \"range1, criteria [, range2]\",\r\n        s_farg_hms: \"hour, minute, second\",\r\n        s_farg_txt: \"text\",\r\n        s_farg_vlookup: \"value, range, col, [rangelookup]\",\r\n        s_farg_weekday: \"date, [type]\",\r\n        s_farg_dt: \"date\",\r\n        s_farg_: ''\r\n    }\r\n\r\n\r\n/////////////////////////\r\n//\r\n// FUNCTION DEFINITIONS\r\n//\r\n// The standard function definitions follow.\r\n//\r\n// Note that some need SocialCalc.DetermineValueType to be defined.\r\n//\r\n\r\n    /*\r\n    #\r\n    # AVERAGE(v1,c1:c2,...)\r\n    # COUNT(v1,c1:c2,...)\r\n    # COUNTA(v1,c1:c2,...)\r\n    # COUNTBLANK(v1,c1:c2,...)\r\n    # MAX(v1,c1:c2,...)\r\n    # MIN(v1,c1:c2,...)\r\n    # PRODUCT(v1,c1:c2,...)\r\n    # STDEV(v1,c1:c2,...)\r\n    # STDEVP(v1,c1:c2,...)\r\n    # SUM(v1,c1:c2,...)\r\n    # VAR(v1,c1:c2,...)\r\n    # VARP(v1,c1:c2,...)\r\n    #\r\n    # Calculate all of these and then return the desired one (overhead is in accessing not calculating)\r\n    # If this routine is changed, check the dseries_functions, too.\r\n    #\r\n    */\r\n\r\n    //var SocialCalc = {}\r\n    //this.SocialCalcFormula = {}\r\n    var SocialCalcFormula = this\r\n    SocialCalcFormula.PushOperand = function(operand, t, v) {\r\n\r\n        operand.push({type: t, value: v});\r\n\r\n    }\r\n    var FunctionClassList = this.FunctionClassList\r\n\r\n    SocialCalcFormula.SeriesFunctions = function (fname, operand, foperand) {\r\n\r\n        var value1, t, v1;\r\n\r\n        var scf = SocialCalcFormula;\r\n        var operand_value_and_type = scf.OperandValueAndType;\r\n        var lookup_result_type = scf.LookupResultType;\r\n        var typelookupplus = scf.TypeLookupTable.plus;\r\n\r\n        var PushOperand = function (t, v) {\r\n            operand.push({type: t, value: v});\r\n        };\r\n\r\n        var sum = 0;\r\n        var resulttypesum = \"\";\r\n        var count = 0;\r\n        var counta = 0;\r\n        var countblank = 0;\r\n        var product = 1;\r\n        var maxval;\r\n        var minval;\r\n        var mk, sk, mk1, sk1; // For variance, etc.: M sub k, k-1, and S sub k-1\r\n                              // as per Knuth \"The Art of Computer Programming\" Vol. 2 3rd edition, page 232\r\n\r\n        while (foperand.length > 0) {\r\n            value1 = operand_value_and_type(foperand);\r\n            t = value1.type.charAt(0);\r\n            if (t == \"n\") count += 1;\r\n            if (t != \"b\") counta += 1;\r\n            if (t == \"b\") countblank += 1;\r\n\r\n            if (t == \"n\") {\r\n                v1 = value1.value - 0; // get it as a number\r\n                sum += v1;\r\n                product *= v1;\r\n                maxval = (maxval != undefined) ? (v1 > maxval ? v1 : maxval) : v1;\r\n                minval = (minval != undefined) ? (v1 < minval ? v1 : minval) : v1;\r\n                if (count == 1) { // initialize with first values for variance used in STDEV, VAR, etc.\r\n                    mk1 = v1;\r\n                    sk1 = 0;\r\n                }\r\n                else { // Accumulate S sub 1 through n as per Knuth noted above\r\n                    mk = mk1 + (v1 - mk1) / count;\r\n                    sk = sk1 + (v1 - mk1) * (v1 - mk);\r\n                    sk1 = sk;\r\n                    mk1 = mk;\r\n                }\r\n                resulttypesum = lookup_result_type(value1.type, resulttypesum || value1.type, typelookupplus);\r\n            }\r\n            else if (t == \"e\" && resulttypesum.charAt(0) != \"e\") {\r\n                resulttypesum = value1.type;\r\n            }\r\n        }\r\n\r\n        resulttypesum = resulttypesum || \"n\";\r\n\r\n        switch (fname) {\r\n            case \"SUM\":\r\n                PushOperand(resulttypesum, sum);\r\n                break;\r\n\r\n            case \"PRODUCT\": // may handle cases with text differently than some other spreadsheets\r\n                PushOperand(resulttypesum, product);\r\n                break;\r\n\r\n            case \"MIN\":\r\n                PushOperand(resulttypesum, minval || 0);\r\n                break;\r\n\r\n            case \"MAX\":\r\n                PushOperand(resulttypesum, maxval || 0);\r\n                break;\r\n\r\n            case \"COUNT\":\r\n                PushOperand(\"n\", count);\r\n                break;\r\n\r\n            case \"COUNTA\":\r\n                PushOperand(\"n\", counta);\r\n                break;\r\n\r\n            case \"COUNTBLANK\":\r\n                PushOperand(\"n\", countblank);\r\n                break;\r\n\r\n            case \"AVERAGE\":\r\n                if (count > 0) {\r\n                    PushOperand(resulttypesum, sum / count);\r\n                }\r\n                else {\r\n                    PushOperand(\"e#DIV/0!\", 0);\r\n                }\r\n                break;\r\n\r\n            case \"STDEV\":\r\n                if (count > 1) {\r\n                    PushOperand(resulttypesum, Math.sqrt(sk / (count - 1))); // sk is never negative according to Knuth\r\n                }\r\n                else {\r\n                    PushOperand(\"e#DIV/0!\", 0);\r\n                }\r\n                break;\r\n\r\n            case \"STDEVP\":\r\n                if (count > 1) {\r\n                    PushOperand(resulttypesum, Math.sqrt(sk / count));\r\n                }\r\n                else {\r\n                    PushOperand(\"e#DIV/0!\", 0);\r\n                }\r\n                break;\r\n\r\n            case \"VAR\":\r\n                if (count > 1) {\r\n                    PushOperand(resulttypesum, sk / (count - 1));\r\n                }\r\n                else {\r\n                    PushOperand(\"e#DIV/0!\", 0);\r\n                }\r\n                break;\r\n\r\n            case \"VARP\":\r\n                if (count > 1) {\r\n                    PushOperand(resulttypesum, sk / count);\r\n                }\r\n                else {\r\n                    PushOperand(\"e#DIV/0!\", 0);\r\n                }\r\n                break;\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n// Add to function list\r\n    FunctionClassList['stat'][\"AVERAGE\"] = [SocialCalcFormula.SeriesFunctions, -1, \"vn\", null, \"stat\"];\r\n    FunctionClassList['stat'][\"COUNT\"] = [SocialCalcFormula.SeriesFunctions, -1, \"vn\", null, \"stat\"];\r\n    FunctionClassList['stat'][\"COUNTA\"] = [SocialCalcFormula.SeriesFunctions, -1, \"vn\", null, \"stat\"];\r\n    FunctionClassList['stat'][\"COUNTBLANK\"] = [SocialCalcFormula.SeriesFunctions, -1, \"vn\", null, \"stat\"];\r\n    FunctionClassList['stat'][\"MAX\"] = [SocialCalcFormula.SeriesFunctions, -1, \"vn\", null, \"stat\"];\r\n    FunctionClassList['stat'][\"MIN\"] = [SocialCalcFormula.SeriesFunctions, -1, \"vn\", null, \"stat\"];\r\n    FunctionClassList['stat'][\"PRODUCT\"] = [SocialCalcFormula.SeriesFunctions, -1, \"vn\", null, \"stat\"];\r\n    FunctionClassList['stat'][\"STDEV\"] = [SocialCalcFormula.SeriesFunctions, -1, \"vn\", null, \"stat\"];\r\n    FunctionClassList['stat'][\"STDEVP\"] = [SocialCalcFormula.SeriesFunctions, -1, \"vn\", null, \"stat\"];\r\n    FunctionClassList['stat'][\"SUM\"] = [SocialCalcFormula.SeriesFunctions, -1, \"vn\", null, \"stat\"];\r\n    FunctionClassList['stat'][\"VAR\"] = [SocialCalcFormula.SeriesFunctions, -1, \"vn\", null, \"stat\"];\r\n    FunctionClassList['stat'][\"VARP\"] = [SocialCalcFormula.SeriesFunctions, -1, \"vn\", null, \"stat\"];\r\n\r\n    /*\r\n    #\r\n    # DAVERAGE(databaserange, fieldname, criteriarange)\r\n    # DCOUNT(databaserange, fieldname, criteriarange)\r\n    # DCOUNTA(databaserange, fieldname, criteriarange)\r\n    # DGET(databaserange, fieldname, criteriarange)\r\n    # DMAX(databaserange, fieldname, criteriarange)\r\n    # DMIN(databaserange, fieldname, criteriarange)\r\n    # DPRODUCT(databaserange, fieldname, criteriarange)\r\n    # DSTDEV(databaserange, fieldname, criteriarange)\r\n    # DSTDEVP(databaserange, fieldname, criteriarange)\r\n    # DSUM(databaserange, fieldname, criteriarange)\r\n    # DVAR(databaserange, fieldname, criteriarange)\r\n    # DVARP(databaserange, fieldname, criteriarange)\r\n    #\r\n    # Calculate all of these and then return the desired one (overhead is in accessing not calculating)\r\n    # If this routine is changed, check the series_functions, too.\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.DSeriesFunctions = function (fname, operand, foperand) {\r\n\r\n        var value1, tostype, cr, dbrange, fieldname, criteriarange, dbinfo, criteriainfo;\r\n        var fieldasnum, targetcol, i, j, k, cell, criteriafieldnums;\r\n        var testok, criteriacr, criteria, testcol, testcr;\r\n        var t;\r\n\r\n        var scf = SocialCalcFormula;\r\n        var operand_value_and_type = scf.OperandValueAndType;\r\n        var lookup_result_type = scf.LookupResultType;\r\n        var typelookupplus = scf.TypeLookupTable.plus;\r\n\r\n        var PushOperand = function (t, v) {\r\n            operand.push({type: t, value: v});\r\n        };\r\n\r\n        var value1 = {};\r\n\r\n        var sum = 0;\r\n        var resulttypesum = \"\";\r\n        var count = 0;\r\n        var counta = 0;\r\n        var countblank = 0;\r\n        var product = 1;\r\n        var maxval;\r\n        var minval;\r\n        var mk, sk, mk1, sk1; // For variance, etc.: M sub k, k-1, and S sub k-1\r\n                              // as per Knuth \"The Art of Computer Programming\" Vol. 2 3rd edition, page 232\r\n\r\n        dbrange = scf.TopOfStackValueAndType( foperand); // get a range\r\n        fieldname = scf.OperandValueAndType( foperand); // get a value\r\n        criteriarange = scf.TopOfStackValueAndType( foperand); // get a range\r\n\r\n        if (dbrange.type != \"range\" || criteriarange.type != \"range\") {\r\n            return scf.FunctionArgsError(fname, operand);\r\n        }\r\n\r\n        dbinfo = scf.DecodeRangeParts(dbrange.value);\r\n        criteriainfo = scf.DecodeRangeParts(criteriarange.value);\r\n\r\n        fieldasnum = scf.FieldToColnum(dbinfo.sheetdata, dbinfo.col1num, dbinfo.ncols, dbinfo.row1num, fieldname.value, fieldname.type);\r\n        if (fieldasnum <= 0) {\r\n            PushOperand(\"e#VALUE!\", 0);\r\n            return;\r\n        }\r\n\r\n        targetcol = dbinfo.col1num + fieldasnum - 1;\r\n        criteriafieldnums = [];\r\n\r\n        for (i = 0; i < criteriainfo.ncols; i++) { // get criteria field colnums\r\n            cell = criteriainfo.sheetdata.GetAssuredCell(SocialCalc.crToCoord(criteriainfo.col1num + i, criteriainfo.row1num));\r\n            criterianum = scf.FieldToColnum(dbinfo.sheetdata, dbinfo.col1num, dbinfo.ncols, dbinfo.row1num, cell.datavalue, cell.valuetype);\r\n            if (criterianum <= 0) {\r\n                PushOperand(\"e#VALUE!\", 0);\r\n                return;\r\n            }\r\n            criteriafieldnums.push(dbinfo.col1num + criterianum - 1);\r\n        }\r\n\r\n        for (i = 1; i < dbinfo.nrows; i++) { // go through each row of the database\r\n            testok = false;\r\n            CRITERIAROW:\r\n                for (j = 1; j < criteriainfo.nrows; j++) { // go through each criteria row\r\n                    for (k = 0; k < criteriainfo.ncols; k++) { // look at each column\r\n                        criteriacr = SocialCalc.crToCoord(criteriainfo.col1num + k, criteriainfo.row1num + j); // where criteria is\r\n                        cell = criteriainfo.sheetdata.GetAssuredCell(criteriacr);\r\n                        criteria = cell.datavalue;\r\n                        if (typeof criteria == \"string\" && criteria.length == 0) continue; // blank items are OK\r\n                        testcol = criteriafieldnums[k];\r\n                        testcr = SocialCalc.crToCoord(testcol, dbinfo.row1num + i); // cell to check\r\n                        cell = criteriainfo.sheetdata.GetAssuredCell(testcr);\r\n                        if (!scf.TestCriteria(cell.datavalue, cell.valuetype || \"b\", criteria)) {\r\n                            continue CRITERIAROW; // does not meet criteria - check next row\r\n                        }\r\n                    }\r\n                    testok = true; // met all the criteria\r\n                    break CRITERIAROW;\r\n                }\r\n            if (!testok) {\r\n                continue;\r\n            }\r\n\r\n            cr = SocialCalc.crToCoord(targetcol, dbinfo.row1num + i); // get cell of this row to do the function on\r\n            cell = dbinfo.sheetdata.GetAssuredCell(cr);\r\n\r\n            value1.value = cell.datavalue;\r\n            value1.type = cell.valuetype;\r\n            t = value1.type.charAt(0);\r\n            if (t == \"n\") count += 1;\r\n            if (t != \"b\") counta += 1;\r\n            if (t == \"b\") countblank += 1;\r\n\r\n            if (t == \"n\") {\r\n                v1 = value1.value - 0; // get it as a number\r\n                sum += v1;\r\n                product *= v1;\r\n                maxval = (maxval != undefined) ? (v1 > maxval ? v1 : maxval) : v1;\r\n                minval = (minval != undefined) ? (v1 < minval ? v1 : minval) : v1;\r\n                if (count == 1) { // initialize with first values for variance used in STDEV, VAR, etc.\r\n                    mk1 = v1;\r\n                    sk1 = 0;\r\n                }\r\n                else { // Accumulate S sub 1 through n as per Knuth noted above\r\n                    mk = mk1 + (v1 - mk1) / count;\r\n                    sk = sk1 + (v1 - mk1) * (v1 - mk);\r\n                    sk1 = sk;\r\n                    mk1 = mk;\r\n                }\r\n                resulttypesum = lookup_result_type(value1.type, resulttypesum || value1.type, typelookupplus);\r\n            }\r\n            else if (t == \"e\" && resulttypesum.charAt(0) != \"e\") {\r\n                resulttypesum = value1.type;\r\n            }\r\n        }\r\n\r\n        resulttypesum = resulttypesum || \"n\";\r\n\r\n        switch (fname) {\r\n            case \"DSUM\":\r\n                PushOperand(resulttypesum, sum);\r\n                break;\r\n\r\n            case \"DPRODUCT\": // may handle cases with text differently than some other spreadsheets\r\n                PushOperand(resulttypesum, product);\r\n                break;\r\n\r\n            case \"DMIN\":\r\n                PushOperand(resulttypesum, minval || 0);\r\n                break;\r\n\r\n            case \"DMAX\":\r\n                PushOperand(resulttypesum, maxval || 0);\r\n                break;\r\n\r\n            case \"DCOUNT\":\r\n                PushOperand(\"n\", count);\r\n                break;\r\n\r\n            case \"DCOUNTA\":\r\n                PushOperand(\"n\", counta);\r\n                break;\r\n\r\n            case \"DAVERAGE\":\r\n                if (count > 0) {\r\n                    PushOperand(resulttypesum, sum / count);\r\n                }\r\n                else {\r\n                    PushOperand(\"e#DIV/0!\", 0);\r\n                }\r\n                break;\r\n\r\n            case \"DSTDEV\":\r\n                if (count > 1) {\r\n                    PushOperand(resulttypesum, Math.sqrt(sk / (count - 1))); // sk is never negative according to Knuth\r\n                }\r\n                else {\r\n                    PushOperand(\"e#DIV/0!\", 0);\r\n                }\r\n                break;\r\n\r\n            case \"DSTDEVP\":\r\n                if (count > 1) {\r\n                    PushOperand(resulttypesum, Math.sqrt(sk / count));\r\n                }\r\n                else {\r\n                    PushOperand(\"e#DIV/0!\", 0);\r\n                }\r\n                break;\r\n\r\n            case \"DVAR\":\r\n                if (count > 1) {\r\n                    PushOperand(resulttypesum, sk / (count - 1));\r\n                }\r\n                else {\r\n                    PushOperand(\"e#DIV/0!\", 0);\r\n                }\r\n                break;\r\n\r\n            case \"DVARP\":\r\n                if (count > 1) {\r\n                    PushOperand(resulttypesum, sk / count);\r\n                }\r\n                else {\r\n                    PushOperand(\"e#DIV/0!\", 0);\r\n                }\r\n                break;\r\n\r\n            case \"DGET\":\r\n                if (count == 1) {\r\n                    PushOperand(resulttypesum, sum);\r\n                }\r\n                else if (count == 0) {\r\n                    PushOperand(\"e#VALUE!\", 0);\r\n                }\r\n                else {\r\n                    PushOperand(\"e#NUM!\", 0);\r\n                }\r\n                break;\r\n\r\n        }\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['stat'][\"DAVERAGE\"] = [SocialCalcFormula.DSeriesFunctions, 3, \"dfunc\", \"\", \"stat\"];\r\n    FunctionClassList['stat'][\"DCOUNT\"] = [SocialCalcFormula.DSeriesFunctions, 3, \"dfunc\", \"\", \"stat\"];\r\n    FunctionClassList['stat'][\"DCOUNTA\"] = [SocialCalcFormula.DSeriesFunctions, 3, \"dfunc\", \"\", \"stat\"];\r\n    FunctionClassList['stat'][\"DGET\"] = [SocialCalcFormula.DSeriesFunctions, 3, \"dfunc\", \"\", \"stat\"];\r\n    FunctionClassList['stat'][\"DMAX\"] = [SocialCalcFormula.DSeriesFunctions, 3, \"dfunc\", \"\", \"stat\"];\r\n    FunctionClassList['stat'][\"DMIN\"] = [SocialCalcFormula.DSeriesFunctions, 3, \"dfunc\", \"\", \"stat\"];\r\n    FunctionClassList['stat'][\"DPRODUCT\"] = [SocialCalcFormula.DSeriesFunctions, 3, \"dfunc\", \"\", \"stat\"];\r\n    FunctionClassList['stat'][\"DSTDEV\"] = [SocialCalcFormula.DSeriesFunctions, 3, \"dfunc\", \"\", \"stat\"];\r\n    FunctionClassList['stat'][\"DSTDEVP\"] = [SocialCalcFormula.DSeriesFunctions, 3, \"dfunc\", \"\", \"stat\"];\r\n    FunctionClassList['stat'][\"DSUM\"] = [SocialCalcFormula.DSeriesFunctions, 3, \"dfunc\", \"\", \"stat\"];\r\n    FunctionClassList['stat'][\"DVAR\"] = [SocialCalcFormula.DSeriesFunctions, 3, \"dfunc\", \"\", \"stat\"];\r\n    FunctionClassList['stat'][\"DVARP\"] = [SocialCalcFormula.DSeriesFunctions, 3, \"dfunc\", \"\", \"stat\"];\r\n\r\n    /*\r\n    #\r\n    # colnum = SocialCalcFormula.FieldToColnum(sheet, col1num, ncols, row1num, fieldname, fieldtype)\r\n    #\r\n    # If fieldname is a number, uses it, otherwise looks up string in cells in row to find field number\r\n    #\r\n    # If not found, returns 0.\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.FieldToColnum = function (col1num, ncols, row1num, fieldname, fieldtype) {\r\n\r\n        var colnum, cell, value;\r\n\r\n        if (fieldtype.charAt(0) == \"n\") { // number - return it if legal\r\n            colnum = fieldname - 0; // make sure a number\r\n            if (colnum <= 0 || colnum > ncols) {\r\n                return 0;\r\n            }\r\n            return Math.floor(colnum);\r\n        }\r\n\r\n        if (fieldtype.charAt(0) != \"t\") { // must be text otherwise\r\n            return 0;\r\n        }\r\n\r\n        fieldname = fieldname ? fieldname.toLowerCase() : \"\";\r\n\r\n        for (colnum = 0; colnum < ncols; colnum++) { // look through column headers for a match\r\n            cell = sheet.GetAssuredCell(SocialCalc.crToCoord(col1num + colnum, row1num));\r\n            value = cell.datavalue;\r\n            value = (value + \"\").toLowerCase(); // ignore case\r\n            if (value == fieldname) { // match\r\n                return colnum + 1;\r\n            }\r\n        }\r\n        return 0; // looked at all and no match\r\n\r\n    }\r\n\r\n\r\n    /*\r\n    #\r\n    # HLOOKUP(value, range, row, [rangelookup])\r\n    # VLOOKUP(value, range, col, [rangelookup])\r\n    # MATCH(value, range, [rangelookup])\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.LookupFunctions = function (fname, operand, foperand) {\r\n\r\n        var lookupvalue, range, offset, rangelookup, offsetvalue, rangeinfo;\r\n        var c, r, cincr, rincr, previousOK, csave, rsave, cell, value, valuetype, cr, lookupvalue;\r\n\r\n        var scf = SocialCalcFormula;\r\n        var operand_value_and_type = scf.OperandValueAndType;\r\n        var lookup_result_type = scf.LookupResultType;\r\n        var typelookupplus = scf.TypeLookupTable.plus;\r\n\r\n        var PushOperand = function (t, v) {\r\n            operand.push({type: t, value: v});\r\n        };\r\n\r\n        lookupvalue = operand_value_and_type( foperand);\r\n        if (typeof lookupvalue.value == \"string\") {\r\n            lookupvalue.value = lookupvalue.value.toLowerCase();\r\n        }\r\n\r\n        range = scf.TopOfStackValueAndType(foperand);\r\n\r\n        rangelookup = 1; // default to true or 1\r\n        if (fname == \"MATCH\") {\r\n            if (foperand.length) {\r\n                rangelookup = scf.OperandAsNumber(foperand);\r\n                if (rangelookup.type.charAt(0) != \"n\") {\r\n                    PushOperand(\"e#VALUE!\", 0);\r\n                    return;\r\n                }\r\n                if (foperand.length) {\r\n                    scf.FunctionArgsError(fname, operand);\r\n                    return 0;\r\n                }\r\n                rangelookup = rangelookup.value - 0;\r\n            }\r\n        }\r\n        else {\r\n            offsetvalue = scf.OperandAsNumber( foperand);\r\n            if (offsetvalue.type.charAt(0) != \"n\") {\r\n                PushOperand(\"e#VALUE!\", 0);\r\n                return;\r\n            }\r\n            offsetvalue = Math.floor(offsetvalue.value);\r\n            if (foperand.length) {\r\n                rangelookup = scf.OperandAsNumber( foperand);\r\n                if (rangelookup.type.charAt(0) != \"n\") {\r\n                    PushOperand(\"e#VALUE!\", 0);\r\n                    return;\r\n                }\r\n                if (foperand.length) {\r\n                    scf.FunctionArgsError(fname, operand);\r\n                    return 0;\r\n                }\r\n                rangelookup = rangelookup.value ? 1 : 0; // convert to 1 or 0\r\n            }\r\n        }\r\n        lookupvalue.type = lookupvalue.type.charAt(0); // only deal with general type\r\n        if (lookupvalue.type == \"n\") { // if number, make sure a number\r\n            lookupvalue.value = lookupvalue.value - 0;\r\n        }\r\n\r\n        if (range.type != \"range\") {\r\n            scf.FunctionArgsError(fname, operand);\r\n            return 0;\r\n        }\r\n\r\n        rangeinfo = scf.DecodeRangeParts(range.value, range.type);\r\n        if (!rangeinfo) {\r\n            PushOperand(\"e#REF!\", 0);\r\n            return;\r\n        }\r\n\r\n        c = 0;\r\n        r = 0;\r\n        cincr = 0;\r\n        rincr = 0;\r\n        if (fname == \"HLOOKUP\") {\r\n            cincr = 1;\r\n            if (offsetvalue > rangeinfo.nrows) {\r\n                PushOperand(\"e#REF!\", 0);\r\n                return;\r\n            }\r\n        }\r\n        else if (fname == \"VLOOKUP\") {\r\n            rincr = 1;\r\n            if (offsetvalue > rangeinfo.ncols) {\r\n                PushOperand(\"e#REF!\", 0);\r\n                return;\r\n            }\r\n        }\r\n        else if (fname == \"MATCH\") {\r\n            if (rangeinfo.ncols > 1) {\r\n                if (rangeinfo.nrows > 1) {\r\n                    PushOperand(\"e#N/A\", 0);\r\n                    return;\r\n                }\r\n                cincr = 1;\r\n            }\r\n            else {\r\n                rincr = 1;\r\n            }\r\n        }\r\n        else {\r\n            scf.FunctionArgsError(fname, operand);\r\n            return 0;\r\n        }\r\n        if (offsetvalue < 1 && fname != \"MATCH\") {\r\n            PushOperand(\"e#VALUE!\", 0);\r\n            return 0;\r\n        }\r\n\r\n        previousOK; // if 1, previous test was <. If 2, also this one wasn't\r\n\r\n        while (1) {\r\n            cr = SocialCalc.crToCoord(rangeinfo.col1num + c, rangeinfo.row1num + r);\r\n            cell = rangeinfo.sheetdata.GetAssuredCell(cr);\r\n            value = cell.datavalue;\r\n            valuetype = cell.valuetype ? cell.valuetype.charAt(0) : \"b\"; // only deal with general types\r\n            if (valuetype == \"n\") {\r\n                value = value - 0; // make sure number\r\n            }\r\n            if (rangelookup) { // rangelookup type 1 or -1: look for within brackets for matches\r\n                if (lookupvalue.type == \"n\" && valuetype == \"n\") {\r\n                    if (lookupvalue.value == value) { // match\r\n                        break;\r\n                    }\r\n                    if ((rangelookup > 0 && lookupvalue.value > value)\r\n                        || (rangelookup < 0 && lookupvalue.value < value)) { // possible match: wait and see\r\n                        previousOK = 1;\r\n                        csave = c; // remember col and row of last OK\r\n                        rsave = r;\r\n                    }\r\n                    else if (previousOK) { // last one was OK, this one isn't\r\n                        previousOK = 2;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                else if (lookupvalue.type == \"t\" && valuetype == \"t\") {\r\n                    value = typeof value == \"string\" ? value.toLowerCase() : \"\";\r\n                    if (lookupvalue.value == value) { // match\r\n                        break;\r\n                    }\r\n                    if ((rangelookup > 0 && lookupvalue.value > value)\r\n                        || (rangelookup < 0 && lookupvalue.value < value)) { // possible match: wait and see\r\n                        previousOK = 1;\r\n                        csave = c;\r\n                        rsave = r;\r\n                    }\r\n                    else if (previousOK) { // last one was OK, this one isn't\r\n                        previousOK = 2;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else { // exact value matches\r\n                if (lookupvalue.type == \"n\" && valuetype == \"n\") {\r\n                    if (lookupvalue.value == value) { // match\r\n                        break;\r\n                    }\r\n                }\r\n                else if (lookupvalue.type == \"t\" && valuetype == \"t\") {\r\n                    value = typeof value == \"string\" ? value.toLowerCase() : \"\";\r\n                    if (lookupvalue.value == value) { // match\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            r += rincr;\r\n            c += cincr;\r\n            if (r >= rangeinfo.nrows || c >= rangeinfo.ncols) { // end of range to check, no exact match\r\n                if (previousOK) { // at least one could have been OK\r\n                    previousOK = 2;\r\n                    break;\r\n                }\r\n                PushOperand(\"e#N/A\", 0);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (previousOK == 2) { // back to last OK\r\n            r = rsave;\r\n            c = csave;\r\n        }\r\n\r\n        if (fname == \"MATCH\") {\r\n            value = c + r + 1; // only one may be <> 0\r\n            valuetype = \"n\";\r\n        }\r\n        else {\r\n            cr = SocialCalc.crToCoord(rangeinfo.col1num + c + (fname == \"VLOOKUP\" ? offsetvalue - 1 : 0), rangeinfo.row1num + r + (fname == \"HLOOKUP\" ? offsetvalue - 1 : 0));\r\n            cell = rangeinfo.sheetdata.GetAssuredCell(cr);\r\n            value = cell.datavalue;\r\n            valuetype = cell.valuetype;\r\n        }\r\n        PushOperand(valuetype, value);\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['lookup'][\"HLOOKUP\"] = [SocialCalcFormula.LookupFunctions, -3, \"hlookup\", \"\", \"lookup\"];\r\n    FunctionClassList['lookup'][\"MATCH\"] = [SocialCalcFormula.LookupFunctions, -2, \"match\", \"\", \"lookup\"];\r\n    FunctionClassList['lookup'][\"VLOOKUP\"] = [SocialCalcFormula.LookupFunctions, -3, \"vlookup\", \"\", \"lookup\"];\r\n\r\n    /*\r\n    #\r\n    # INDEX(range, rownum, colnum)\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.IndexFunction = function (fname, operand, foperand) {\r\n\r\n        var range, sheetname, indexinfo, rowindex, colindex, result, resulttype;\r\n\r\n        var scf = SocialCalcFormula;\r\n\r\n        var PushOperand = function (t, v) {\r\n            operand.push({type: t, value: v});\r\n        };\r\n\r\n        range = scf.TopOfStackValueAndType(sheet, foperand); // get range\r\n        if (range.type != \"range\") {\r\n            scf.FunctionArgsError(fname, operand);\r\n            return 0;\r\n        }\r\n        indexinfo = scf.DecodeRangeParts(sheet, range.value, range.type);\r\n        if (indexinfo.sheetname) {\r\n            sheetname = \"!\" + indexinfo.sheetname;\r\n        }\r\n        else {\r\n            sheetname = \"\";\r\n        }\r\n\r\n        rowindex = {value: 0};\r\n        colindex = {value: 0};\r\n\r\n        if (foperand.length) { // look for row number\r\n            rowindex = scf.OperandAsNumber(sheet, foperand);\r\n            if (rowindex.type.charAt(0) != \"n\" || rowindex.value < 0) {\r\n                PushOperand(\"e#VALUE!\", 0);\r\n                return;\r\n            }\r\n            if (foperand.length) { // look for col number\r\n                colindex = scf.OperandAsNumber(sheet, foperand);\r\n                if (colindex.type.charAt(0) != \"n\" || colindex.value < 0) {\r\n                    PushOperand(\"e#VALUE!\", 0);\r\n                    return;\r\n                }\r\n                if (foperand.length) {\r\n                    scf.FunctionArgsError(fname, operand);\r\n                    return 0;\r\n                }\r\n            }\r\n            else { // col number missing\r\n                if (indexinfo.nrows == 1) { // if only one row, then rowindex is really colindex\r\n                    colindex.value = rowindex.value;\r\n                    rowindex.value = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (rowindex.value > indexinfo.nrows || colindex.value > indexinfo.ncols) {\r\n            PushOperand(\"e#REF!\", 0);\r\n            return;\r\n        }\r\n\r\n        if (rowindex.value == 0) {\r\n            if (colindex.value == 0) {\r\n                if (indexinfo.nrows == 1 && indexinfo.ncols == 1) {\r\n                    result = SocialCalc.crToCoord(indexinfo.col1num, indexinfo.row1num) + sheetname;\r\n                    resulttype = \"coord\";\r\n                }\r\n                else {\r\n                    result = SocialCalc.crToCoord(indexinfo.col1num, indexinfo.row1num) + sheetname + \"|\" +\r\n                        SocialCalc.crToCoord(indexinfo.col1num + indexinfo.ncols - 1, indexinfo.row1num + indexinfo.nrows - 1) +\r\n                        \"|\";\r\n                    resulttype = \"range\";\r\n                }\r\n            }\r\n            else {\r\n                if (indexinfo.nrows == 1) {\r\n                    result = SocialCalc.crToCoord(indexinfo.col1num + colindex.value - 1, indexinfo.row1num) + sheetname;\r\n                    resulttype = \"coord\";\r\n                }\r\n                else {\r\n                    result = SocialCalc.crToCoord(indexinfo.col1num + colindex.value - 1, indexinfo.row1num) + sheetname + \"|\" +\r\n                        SocialCalc.crToCoord(indexinfo.col1num + colindex.value - 1, indexinfo.row1num + indexinfo.nrows - 1) +\r\n                        \"|\";\r\n                    resulttype = \"range\";\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (colindex.value == 0) {\r\n                if (indexinfo.ncols == 1) {\r\n                    result = SocialCalc.crToCoord(indexinfo.col1num, indexinfo.row1num + rowindex.value - 1) + sheetname;\r\n                    resulttype = \"coord\";\r\n                }\r\n                else {\r\n                    result = SocialCalc.crToCoord(indexinfo.col1num, indexinfo.row1num + rowindex.value - 1) + sheetname + \"|\" +\r\n                        SocialCalc.crToCoord(indexinfo.col1num + indexinfo.ncols - 1, indexinfo.row1num + rowindex.value - 1) +\r\n                        \"|\";\r\n                    resulttype = \"range\";\r\n                }\r\n            }\r\n            else {\r\n                result = SocialCalc.crToCoord(indexinfo.col1num + colindex.value - 1, indexinfo.row1num + rowindex.value - 1) + sheetname;\r\n                resulttype = \"coord\";\r\n            }\r\n        }\r\n\r\n        PushOperand(resulttype, result);\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['lookup'][\"INDEX\"] = [SocialCalcFormula.IndexFunction, -1, \"index\", \"\", \"lookup\"];\r\n\r\n    /*\r\n    #\r\n    # COUNTIF(c1:c2,\"criteria\")\r\n    # SUMIF(c1:c2,\"criteria\",[range2])\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.CountifSumifFunctions = function (fname, operand, foperand) {\r\n\r\n        var range, criteria, sumrange, f2operand, result, resulttype, value1, value2;\r\n        var sum = 0;\r\n        var resulttypesum = \"\";\r\n        var count = 0;\r\n\r\n        var scf = SocialCalcFormula;\r\n        var operand_value_and_type = scf.OperandValueAndType;\r\n        var lookup_result_type = scf.LookupResultType;\r\n        var typelookupplus = scf.TypeLookupTable.plus;\r\n\r\n        var PushOperand = function (t, v) {\r\n            operand.push({type: t, value: v});\r\n        };\r\n\r\n        range = scf.TopOfStackValueAndType(sheet, foperand); // get range or coord\r\n        criteria = scf.OperandAsText(sheet, foperand); // get criteria\r\n        if (fname == \"SUMIF\") {\r\n            if (foperand.length == 1) { // three arg form of SUMIF\r\n                sumrange = scf.TopOfStackValueAndType(sheet, foperand);\r\n            }\r\n            else if (foperand.length == 0) { // two arg form\r\n                sumrange = {value: range.value, type: range.type};\r\n            }\r\n            else {\r\n                scf.FunctionArgsError(fname, operand);\r\n                return 0;\r\n            }\r\n        }\r\n        else {\r\n            sumrange = {value: range.value, type: range.type};\r\n        }\r\n\r\n        if (criteria.type.charAt(0) == \"n\") {\r\n            criteria.value = criteria.value + \"\"; // make text\r\n        }\r\n        else if (criteria.type.charAt(0) == \"e\") { // error\r\n            criteria.value = null;\r\n        }\r\n        else if (criteria.type.charAt(0) == \"b\") { // blank here is undefined\r\n            criteria.value = null;\r\n        }\r\n\r\n        if (range.type != \"coord\" && range.type != \"range\") {\r\n            scf.FunctionArgsError(fname, operand);\r\n            return 0;\r\n        }\r\n\r\n        if (fname == \"SUMIF\" && sumrange.type != \"coord\" && sumrange.type != \"range\") {\r\n            scf.FunctionArgsError(fname, operand);\r\n            return 0;\r\n        }\r\n\r\n        foperand.push(range);\r\n        f2operand = []; // to allow for 3 arg form\r\n        f2operand.push(sumrange);\r\n\r\n        while (foperand.length) {\r\n            value1 = operand_value_and_type(sheet, foperand);\r\n            value2 = operand_value_and_type(sheet, f2operand);\r\n\r\n            if (!scf.TestCriteria(value1.value, value1.type, criteria.value)) {\r\n                continue;\r\n            }\r\n\r\n            count += 1;\r\n\r\n            if (value2.type.charAt(0) == \"n\") {\r\n                sum += value2.value - 0;\r\n                resulttypesum = lookup_result_type(value2.type, resulttypesum || value2.type, typelookupplus);\r\n            }\r\n            else if (value2.type.charAt(0) == \"e\" && resulttypesum.charAt(0) != \"e\") {\r\n                resulttypesum = value2.type;\r\n            }\r\n        }\r\n\r\n        resulttypesum = resulttypesum || \"n\";\r\n\r\n        if (fname == \"SUMIF\") {\r\n            PushOperand(resulttypesum, sum);\r\n        }\r\n        else if (fname == \"COUNTIF\") {\r\n            PushOperand(\"n\", count);\r\n        }\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['stat'][\"COUNTIF\"] = [SocialCalcFormula.CountifSumifFunctions, 2, \"rangec\", \"\", \"stat\"];\r\n    FunctionClassList['stat'][\"SUMIF\"] = [SocialCalcFormula.CountifSumifFunctions, -2, \"sumif\", \"\", \"stat\"];\r\n\r\n    /*\r\n    #\r\n    # IF(cond,truevalue,falsevalue)\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.IfFunction = function (fname, operand, foperand) {\r\n\r\n        var cond, t;\r\n\r\n        cond = SocialCalcFormula.OperandValueAndType(foperand);\r\n        t = cond.type.charAt(0);\r\n        if (t != \"n\" && t != \"b\") {\r\n            operand.push({type: \"e#VALUE!\", value: 0});\r\n            return;\r\n        }\r\n\r\n        if (!cond.value) foperand.pop();\r\n        operand.push(foperand.pop());\r\n        if (cond.value) foperand.pop();\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n// Add to function list\r\n    FunctionClassList['test'][\"IF\"] = [SocialCalcFormula.IfFunction, 3, \"iffunc\", \"\", \"test\"];\r\n\r\n    /*\r\n    #\r\n    # DATE(year,month,day)\r\n    #\r\n    */\r\n\r\n    // SocialCalcFormula.DateFunction = function (fname, operand, foperand) {\r\n    //\r\n    //     var scf = SocialCalcFormula;\r\n    //     var result = 0;\r\n    //     var year = scf.OperandAsNumber(foperand);\r\n    //     var month = scf.OperandAsNumber(foperand);\r\n    //     var day = scf.OperandAsNumber(foperand);\r\n    //     var resulttype = scf.LookupResultType(year.type, month.type, scf.TypeLookupTable.twoargnumeric);\r\n    //     resulttype = scf.LookupResultType(resulttype, day.type, scf.TypeLookupTable.twoargnumeric);\r\n    //     if (resulttype.charAt(0) == \"n\") {\r\n    //         result = SocialCalc.FormatNumber.convert_date_gregorian_to_julian(\r\n    //             Math.floor(year.value), Math.floor(month.value), Math.floor(day.value)\r\n    //         ) - SocialCalc.FormatNumber.datevalues.julian_offset;\r\n    //         resulttype = \"nd\";\r\n    //     }\r\n    //     scf.PushOperand(operand, resulttype, result);\r\n    //     return;\r\n    //\r\n    // }\r\n\r\n    FunctionClassList['datetime'][\"DATE\"] = [SocialCalcFormula.DateFunction, 3, \"date\", \"\", \"datetime\"];\r\n\r\n    /*\r\n    #\r\n    # TIME(hour,minute,second)\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.TimeFunction = function (fname, operand, foperand) {\r\n\r\n        var scf = SocialCalcFormula;\r\n        var result = 0;\r\n        var hours = scf.OperandAsNumber(foperand);\r\n        var minutes = scf.OperandAsNumber(foperand);\r\n        var seconds = scf.OperandAsNumber(foperand);\r\n        var resulttype = scf.LookupResultType(hours.type, minutes.type, scf.TypeLookupTable.twoargnumeric);\r\n        resulttype = scf.LookupResultType(resulttype, seconds.type, scf.TypeLookupTable.twoargnumeric);\r\n        if (resulttype.charAt(0) == \"n\") {\r\n            result = ((hours.value * 60 * 60) + (minutes.value * 60) + seconds.value) / (24 * 60 * 60);\r\n            resulttype = \"nt\";\r\n        }\r\n        scf.PushOperand(operand, resulttype, result);\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['datetime'][\"TIME\"] = [SocialCalcFormula.TimeFunction, 3, \"hms\", \"\", \"datetime\"];\r\n\r\n    /*\r\n    #\r\n    # DAY(date)\r\n    # MONTH(date)\r\n    # YEAR(date)\r\n    # WEEKDAY(date, [type])\r\n    #\r\n    */\r\n\r\n    // SocialCalcFormula.DMYFunctions = function (fname, operand, foperand) {\r\n    //\r\n    //     var ymd, dtype, doffset;\r\n    //     var scf = SocialCalcFormula;\r\n    //     var result = 0;\r\n    //\r\n    //     var datevalue = scf.OperandAsNumber(foperand);\r\n    //     var resulttype = scf.LookupResultType(datevalue.type, datevalue.type, scf.TypeLookupTable.oneargnumeric);\r\n    //\r\n    //     if (resulttype.charAt(0) == \"n\") {\r\n    //         ymd = SocialCalc.FormatNumber.convert_date_julian_to_gregorian(\r\n    //             Math.floor(datevalue.value + SocialCalc.FormatNumber.datevalues.julian_offset));\r\n    //         switch (fname) {\r\n    //             case \"DAY\":\r\n    //                 result = ymd.day;\r\n    //                 break;\r\n    //\r\n    //             case \"MONTH\":\r\n    //                 result = ymd.month;\r\n    //                 break;\r\n    //\r\n    //             case \"YEAR\":\r\n    //                 result = ymd.year;\r\n    //                 break;\r\n    //\r\n    //             case \"WEEKDAY\":\r\n    //                 dtype = {value: 1};\r\n    //                 if (foperand.length) { // get type if present\r\n    //                     dtype = scf.OperandAsNumber(foperand);\r\n    //                     if (dtype.type.charAt(0) != \"n\" || dtype.value < 1 || dtype.value > 3) {\r\n    //                         scf.PushOperand(operand, \"e#VALUE!\", 0);\r\n    //                         return;\r\n    //                     }\r\n    //                     if (foperand.length) { // extra args\r\n    //                         scf.FunctionArgsError(fname, operand);\r\n    //                         return;\r\n    //                     }\r\n    //                 }\r\n    //                 doffset = 6;\r\n    //                 if (dtype.value > 1) {\r\n    //                     doffset -= 1;\r\n    //                 }\r\n    //                 result = Math.floor(datevalue.value + doffset) % 7 + (dtype.value < 3 ? 1 : 0);\r\n    //                 break;\r\n    //         }\r\n    //     }\r\n    //\r\n    //     scf.PushOperand(operand, resulttype, result);\r\n    //     return;\r\n    //\r\n    // }\r\n\r\n    FunctionClassList['datetime'][\"DAY\"] = [SocialCalcFormula.DMYFunctions, 1, \"v\", \"\", \"datetime\"];\r\n    FunctionClassList['datetime'][\"MONTH\"] = [SocialCalcFormula.DMYFunctions, 1, \"v\", \"\", \"datetime\"];\r\n    FunctionClassList['datetime'][\"YEAR\"] = [SocialCalcFormula.DMYFunctions, 1, \"v\", \"\", \"datetime\"];\r\n    FunctionClassList['datetime'][\"WEEKDAY\"] = [SocialCalcFormula.DMYFunctions, -1, \"weekday\", \"\", \"datetime\"];\r\n\r\n    /*\r\n    #\r\n    # HOUR(datetime)\r\n    # MINUTE(datetime)\r\n    # SECOND(datetime)\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.HMSFunctions = function (fname, operand, foperand) {\r\n\r\n        var hours, minutes, seconds, fraction;\r\n        var scf = SocialCalcFormula;\r\n        var result = 0;\r\n\r\n        var datetime = scf.OperandAsNumber(foperand);\r\n        var resulttype = scf.LookupResultType(datetime.type, datetime.type, scf.TypeLookupTable.oneargnumeric);\r\n\r\n        if (resulttype.charAt(0) == \"n\") {\r\n            if (datetime.value < 0) {\r\n                scf.PushOperand(operand, \"e#NUM!\", 0); // must be non-negative\r\n                return;\r\n            }\r\n            fraction = datetime.value - Math.floor(datetime.value); // fraction of a day\r\n            fraction *= 24;\r\n            hours = Math.floor(fraction);\r\n            fraction -= Math.floor(fraction);\r\n            fraction *= 60;\r\n            minutes = Math.floor(fraction);\r\n            fraction -= Math.floor(fraction);\r\n            fraction *= 60;\r\n            seconds = Math.floor(fraction + (datetime.value >= 0 ? 0.5 : -0.5));\r\n            if (fname == \"HOUR\") {\r\n                result = hours;\r\n            }\r\n            else if (fname == \"MINUTE\") {\r\n                result = minutes;\r\n            }\r\n            else if (fname == \"SECOND\") {\r\n                result = seconds;\r\n            }\r\n        }\r\n\r\n        scf.PushOperand(operand, resulttype, result);\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['datetime'][\"HOUR\"] = [SocialCalcFormula.HMSFunctions, 1, \"v\", \"\", \"datetime\"];\r\n    FunctionClassList['datetime'][\"MINUTE\"] = [SocialCalcFormula.HMSFunctions, 1, \"v\", \"\", \"datetime\"];\r\n    FunctionClassList['datetime'][\"SECOND\"] = [SocialCalcFormula.HMSFunctions, 1, \"v\", \"\", \"datetime\"];\r\n\r\n    /*\r\n    #\r\n    # EXACT(v1,v2)\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.ExactFunction = function (fname, operand, foperand) {\r\n\r\n        var scf = SocialCalcFormula;\r\n        var result = 0;\r\n        var resulttype = \"nl\";\r\n\r\n        var value1 = scf.OperandValueAndType(foperand);\r\n        var v1type = value1.type.charAt(0);\r\n        var value2 = scf.OperandValueAndType(foperand);\r\n        var v2type = value2.type.charAt(0);\r\n\r\n        if (v1type == \"t\") {\r\n            if (v2type == \"t\") {\r\n                result = value1.value == value2.value ? 1 : 0;\r\n            }\r\n            else if (v2type == \"b\") {\r\n                result = value1.value.length ? 0 : 1;\r\n            }\r\n            else if (v2type == \"n\") {\r\n                result = value1.value == value2.value + \"\" ? 1 : 0;\r\n            }\r\n            else if (v2type == \"e\") {\r\n                result = value2.value;\r\n                resulttype = value2.type;\r\n            }\r\n            else {\r\n                result = 0;\r\n            }\r\n        }\r\n        else if (v1type == \"n\") {\r\n            if (v2type == \"n\") {\r\n                result = value1.value - 0 == value2.value - 0 ? 1 : 0;\r\n            }\r\n            else if (v2type == \"b\") {\r\n                result = 0;\r\n            }\r\n            else if (v2type == \"t\") {\r\n                result = value1.value + \"\" == value2.value ? 1 : 0;\r\n            }\r\n            else if (v2type == \"e\") {\r\n                result = value2.value;\r\n                resulttype = value2.type;\r\n            }\r\n            else {\r\n                result = 0;\r\n            }\r\n        }\r\n        else if (v1type == \"b\") {\r\n            if (v2type == \"t\") {\r\n                result = value2.value.length ? 0 : 1;\r\n            }\r\n            else if (v2type == \"b\") {\r\n                result = 1;\r\n            }\r\n            else if (v2type == \"n\") {\r\n                result = 0;\r\n            }\r\n            else if (v2type == \"e\") {\r\n                result = value2.value;\r\n                resulttype = value2.type;\r\n            }\r\n            else {\r\n                result = 0;\r\n            }\r\n        }\r\n        else if (v1type == \"e\") {\r\n            result = value1.value;\r\n            resulttype = value1.type;\r\n        }\r\n\r\n        scf.PushOperand(operand, resulttype, result);\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['text'][\"EXACT\"] = [SocialCalcFormula.ExactFunction, 2, \"\", \"\", \"text\"];\r\n\r\n    /*\r\n    #\r\n    # FIND(key,string,[start])\r\n    # LEFT(string,[length])\r\n    # LEN(string)\r\n    # LOWER(string)\r\n    # MID(string,start,length)\r\n    # PROPER(string)\r\n    # REPLACE(string,start,length,new)\r\n    # REPT(string,count)\r\n    # RIGHT(string,[length])\r\n    # SUBSTITUTE(string,old,new,[which])\r\n    # TRIM(string)\r\n    # UPPER(string)\r\n    #\r\n    */\r\n\r\n// SocialCalcFormula.ArgList has an array for each function, one entry for each possible arg (up to max).\r\n// Min args are specified in SocialCalcFormula.FunctionList.\r\n// If array element is 1 then it's a text argument, if it's 0 then it's numeric, if -1 then just get whatever's there\r\n// Text values are manipulated as UTF-8, converting from and back to byte strings\r\n\r\n    SocialCalcFormula.ArgList = {\r\n        FIND: [1, 1, 0],\r\n        LEFT: [1, 0],\r\n        LEN: [1],\r\n        LOWER: [1],\r\n        MID: [1, 0, 0],\r\n        PROPER: [1],\r\n        REPLACE: [1, 0, 0, 1],\r\n        REPT: [1, 0],\r\n        RIGHT: [1, 0],\r\n        SUBSTITUTE: [1, 1, 1, 0],\r\n        TRIM: [1],\r\n        UPPER: [1]\r\n    };\r\n\r\n    SocialCalcFormula.StringFunctions = function (fname, operand, foperand) {\r\n\r\n        var i, value, offset, len, start, count;\r\n        var scf = SocialCalcFormula;\r\n        var result = 0;\r\n        var resulttype = \"e#VALUE!\";\r\n\r\n        var numargs = foperand.length;\r\n        var argdef = scf.ArgList[fname];\r\n        var operand_value = [];\r\n        var operand_type = [];\r\n\r\n        for (i = 1; i <= numargs; i++) { // go through each arg, get value and type, and check for errors\r\n            if (i > argdef.length) { // too many args\r\n                scf.FunctionArgsError(fname, operand);\r\n                return;\r\n            }\r\n            if (argdef[i - 1] == 0) {\r\n                value = scf.OperandAsNumber(foperand);\r\n            }\r\n            else if (argdef[i - 1] == 1) {\r\n                value = scf.OperandAsText(foperand);\r\n            }\r\n            else if (argdef[i - 1] == -1) {\r\n                value = scf.OperandValueAndType(foperand);\r\n            }\r\n            operand_value[i] = value.value;\r\n            operand_type[i] = value.type;\r\n            if (value.type.charAt(0) == \"e\") {\r\n                scf.PushOperand(operand, value.type, result);\r\n                return;\r\n            }\r\n        }\r\n\r\n        switch (fname) {\r\n            case \"FIND\":\r\n                offset = operand_type[3] ? operand_value[3] - 1 : 0;\r\n                if (offset < 0) {\r\n                    result = \"Start is before string\"; // !! not displayed, no need to translate\r\n                }\r\n                else {\r\n                    result = operand_value[2].indexOf(operand_value[1], offset); // (null string matches first char)\r\n                    if (result >= 0) {\r\n                        result += 1;\r\n                        resulttype = \"n\";\r\n                    }\r\n                    else {\r\n                        result = \"Not found\"; // !! not displayed, error is e#VALUE!\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case \"LEFT\":\r\n                len = operand_type[2] ? operand_value[2] - 0 : 1;\r\n                if (len < 0) {\r\n                    result = \"Negative length\";\r\n                }\r\n                else {\r\n                    result = operand_value[1].substring(0, len);\r\n                    resulttype = \"t\";\r\n                }\r\n                break;\r\n\r\n            case \"LEN\":\r\n                result = operand_value[1].length;\r\n                resulttype = \"n\";\r\n                break;\r\n\r\n            case \"LOWER\":\r\n                result = operand_value[1].toLowerCase();\r\n                resulttype = \"t\";\r\n                break;\r\n\r\n            case \"MID\":\r\n                start = operand_value[2] - 0;\r\n                len = operand_value[3] - 0;\r\n                if (len < 1 || start < 1) {\r\n                    result = \"Bad arguments\";\r\n                }\r\n                else {\r\n                    result = operand_value[1].substring(start - 1, start + len - 1);\r\n                    resulttype = \"t\";\r\n                }\r\n                break;\r\n\r\n            case \"PROPER\":\r\n                result = operand_value[1].replace(/\\b\\w+\\b/g, function (word) {\r\n                    return word.substring(0, 1).toUpperCase() +\r\n                        word.substring(1);\r\n                }); // uppercase first character of words (see JavaScript, Flanagan, 5th edition, page 704)\r\n                resulttype = \"t\";\r\n                break;\r\n\r\n            case \"REPLACE\":\r\n                start = operand_value[2] - 0;\r\n                len = operand_value[3] - 0;\r\n                if (len < 0 || start < 1) {\r\n                    result = \"Bad arguments\";\r\n                }\r\n                else {\r\n                    result = operand_value[1].substring(0, start - 1) + operand_value[4] +\r\n                        operand_value[1].substring(start - 1 + len);\r\n                    resulttype = \"t\";\r\n                }\r\n                break;\r\n\r\n            case \"REPT\":\r\n                count = operand_value[2] - 0;\r\n                if (count < 0) {\r\n                    result = \"Negative count\";\r\n                }\r\n                else {\r\n                    result = \"\";\r\n                    for (; count > 0; count--) {\r\n                        result += operand_value[1];\r\n                    }\r\n                    resulttype = \"t\";\r\n                }\r\n                break;\r\n\r\n            case \"RIGHT\":\r\n                len = operand_type[2] ? operand_value[2] - 0 : 1;\r\n                if (len < 0) {\r\n                    result = \"Negative length\";\r\n                }\r\n                else {\r\n                    result = operand_value[1].slice(-len);\r\n                    resulttype = \"t\";\r\n                }\r\n                break;\r\n\r\n            case \"SUBSTITUTE\":\r\n                fulltext = operand_value[1];\r\n                oldtext = operand_value[2];\r\n                newtext = operand_value[3];\r\n                if (operand_value[4] != null) {\r\n                    which = operand_value[4] - 0;\r\n                    if (which <= 0) {\r\n                        result = \"Non-positive instance number\";\r\n                        break;\r\n                    }\r\n                }\r\n                else {\r\n                    which = 0;\r\n                }\r\n                count = 0;\r\n                oldpos = 0;\r\n                result = \"\";\r\n                while (true) {\r\n                    pos = fulltext.indexOf(oldtext, oldpos);\r\n                    if (pos >= 0) {\r\n                        count++; //!!!!!! old test just in case: if (count>1000) {alert(pos); break;}\r\n                        result += fulltext.substring(oldpos, pos);\r\n                        if (which == 0) {\r\n                            result += newtext; // substitute\r\n                        }\r\n                        else if (which == count) {\r\n                            result += newtext + fulltext.substring(pos + oldtext.length);\r\n                            break;\r\n                        }\r\n                        else {\r\n                            result += oldtext; // leave as was\r\n                        }\r\n                        oldpos = pos + oldtext.length;\r\n                    }\r\n                    else { // no more\r\n                        result += fulltext.substring(oldpos);\r\n                        break;\r\n                    }\r\n                }\r\n                resulttype = \"t\";\r\n                break;\r\n\r\n            case \"TRIM\":\r\n                result = operand_value[1];\r\n                result = result.replace(/^ */, \"\");\r\n                result = result.replace(/ *$/, \"\");\r\n                result = result.replace(/ +/g, \" \");\r\n                resulttype = \"t\";\r\n                break;\r\n\r\n            case \"UPPER\":\r\n                result = operand_value[1].toUpperCase();\r\n                resulttype = \"t\";\r\n                break;\r\n\r\n        }\r\n\r\n        scf.PushOperand(operand, resulttype, result);\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['text'][\"FIND\"] = [SocialCalcFormula.StringFunctions, -2, \"find\", \"\", \"text\"];\r\n    FunctionClassList['text'][\"LEFT\"] = [SocialCalcFormula.StringFunctions, -2, \"tc\", \"\", \"text\"];\r\n    FunctionClassList['text'][\"LEN\"] = [SocialCalcFormula.StringFunctions, 1, \"txt\", \"\", \"text\"];\r\n    FunctionClassList['text'][\"LOWER\"] = [SocialCalcFormula.StringFunctions, 1, \"txt\", \"\", \"text\"];\r\n    FunctionClassList['text'][\"MID\"] = [SocialCalcFormula.StringFunctions, 3, \"mid\", \"\", \"text\"];\r\n    FunctionClassList['text'][\"PROPER\"] = [SocialCalcFormula.StringFunctions, 1, \"v\", \"\", \"text\"];\r\n    FunctionClassList['text'][\"REPLACE\"] = [SocialCalcFormula.StringFunctions, 4, \"replace\", \"\", \"text\"];\r\n    FunctionClassList['text'][\"REPT\"] = [SocialCalcFormula.StringFunctions, 2, \"tc\", \"\", \"text\"];\r\n    FunctionClassList['text'][\"RIGHT\"] = [SocialCalcFormula.StringFunctions, -1, \"tc\", \"\", \"text\"];\r\n    FunctionClassList['text'][\"SUBSTITUTE\"] = [SocialCalcFormula.StringFunctions, -3, \"subs\", \"\", \"text\"];\r\n    FunctionClassList['text'][\"TRIM\"] = [SocialCalcFormula.StringFunctions, 1, \"v\", \"\", \"text\"];\r\n    FunctionClassList['text'][\"UPPER\"] = [SocialCalcFormula.StringFunctions, 1, \"v\", \"\", \"text\"];\r\n\r\n    /*\r\n    #\r\n    # is_functions:\r\n    #\r\n    # ISBLANK(value)\r\n    # ISERR(value)\r\n    # ISERROR(value)\r\n    # ISLOGICAL(value)\r\n    # ISNA(value)\r\n    # ISNONTEXT(value)\r\n    # ISNUMBER(value)\r\n    # ISTEXT(value)\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.IsFunctions = function (fname, operand, foperand) {\r\n\r\n        var scf = SocialCalcFormula;\r\n        var result = 0;\r\n        var resulttype = \"nl\";\r\n\r\n        var value = scf.OperandValueAndType(foperand);\r\n        var t = value.type.charAt(0);\r\n\r\n        switch (fname) {\r\n\r\n            case \"ISBLANK\":\r\n                result = value.type == \"b\" ? 1 : 0;\r\n                break;\r\n\r\n            case \"ISERR\":\r\n                result = t == \"e\" ? (value.type == \"e#N/A\" ? 0 : 1) : 0;\r\n                break;\r\n\r\n            case \"ISERROR\":\r\n                result = t == \"e\" ? 1 : 0;\r\n                break;\r\n\r\n            case \"ISLOGICAL\":\r\n                result = value.type == \"nl\" ? 1 : 0;\r\n                break;\r\n\r\n            case \"ISNA\":\r\n                result = value.type == \"e#N/A\" ? 1 : 0;\r\n                break;\r\n\r\n            case \"ISNONTEXT\":\r\n                result = t == \"t\" ? 0 : 1;\r\n                break;\r\n\r\n            case \"ISNUMBER\":\r\n                result = t == \"n\" ? 1 : 0;\r\n                break;\r\n\r\n            case \"ISTEXT\":\r\n                result = t == \"t\" ? 1 : 0;\r\n                break;\r\n        }\r\n\r\n        scf.PushOperand(operand, resulttype, result);\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['test'][\"ISBLANK\"] = [SocialCalcFormula.IsFunctions, 1, \"v\", \"\", \"test\"];\r\n    FunctionClassList['test'][\"ISERR\"] = [SocialCalcFormula.IsFunctions, 1, \"v\", \"\", \"test\"];\r\n    FunctionClassList['test'][\"ISERROR\"] = [SocialCalcFormula.IsFunctions, 1, \"v\", \"\", \"test\"];\r\n    FunctionClassList['test'][\"ISLOGICAL\"] = [SocialCalcFormula.IsFunctions, 1, \"v\", \"\", \"test\"];\r\n    FunctionClassList['test'][\"ISNA\"] = [SocialCalcFormula.IsFunctions, 1, \"v\", \"\", \"test\"];\r\n    FunctionClassList['test'][\"ISNONTEXT\"] = [SocialCalcFormula.IsFunctions, 1, \"v\", \"\", \"test\"];\r\n    FunctionClassList['test'][\"ISNUMBER\"] = [SocialCalcFormula.IsFunctions, 1, \"v\", \"\", \"test\"];\r\n    FunctionClassList['test'][\"ISTEXT\"] = [SocialCalcFormula.IsFunctions, 1, \"v\", \"\", \"test\"];\r\n\r\n    /*\r\n    #\r\n    # ntv_functions:\r\n    #\r\n    # N(value)\r\n    # T(value)\r\n    # VALUE(value)\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.NTVFunctions = function (fname, operand, foperand) {\r\n\r\n        var scf = SocialCalcFormula;\r\n        var result = 0;\r\n        var resulttype = \"e#VALUE!\";\r\n\r\n        var value = scf.OperandValueAndType(foperand);\r\n        var t = value.type.charAt(0);\r\n\r\n        switch (fname) {\r\n\r\n            case \"N\":\r\n                result = t == \"n\" ? value.value - 0 : 0;\r\n                resulttype = \"n\";\r\n                break;\r\n\r\n            case \"T\":\r\n                result = t == \"t\" ? value.value + \"\" : \"\";\r\n                resulttype = \"t\";\r\n                break;\r\n\r\n            case \"VALUE\":\r\n                if (t == \"n\" || t == \"b\") {\r\n                    result = value.value || 0;\r\n                    resulttype = \"n\";\r\n                }\r\n                else if (t == \"t\") {\r\n                    value = SocialCalc.DetermineValueType(value.value);\r\n                    if (value.type.charAt(0) != \"n\") {\r\n                        result = 0;\r\n                        resulttype = \"e#VALUE!\";\r\n                    }\r\n                    else {\r\n                        result = value.value - 0;\r\n                        resulttype = \"n\";\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n\r\n        if (t == \"e\") { // error trumps\r\n            resulttype = value.type;\r\n        }\r\n\r\n        scf.PushOperand(operand, resulttype, result);\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['math'][\"N\"] = [SocialCalcFormula.NTVFunctions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['text'][\"T\"] = [SocialCalcFormula.NTVFunctions, 1, \"v\", \"\", \"text\"];\r\n    FunctionClassList['text'][\"VALUE\"] = [SocialCalcFormula.NTVFunctions, 1, \"v\", \"\", \"text\"];\r\n\r\n    /*\r\n    #\r\n    # ABS(value)\r\n    # ACOS(value)\r\n    # ASIN(value)\r\n    # ATAN(value)\r\n    # COS(value)\r\n    # DEGREES(value)\r\n    # EVEN(value)\r\n    # EXP(value)\r\n    # FACT(value)\r\n    # INT(value)\r\n    # LN(value)\r\n    # LOG10(value)\r\n    # ODD(value)\r\n    # RADIANS(value)\r\n    # SIN(value)\r\n    # SQRT(value)\r\n    # TAN(value)\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.Math1Functions = function (fname, operand, foperand) {\r\n\r\n        var v1, value, f;\r\n        var result = {};\r\n\r\n        var scf = SocialCalcFormula;\r\n\r\n        v1 = scf.OperandAsNumber(foperand);\r\n        value = v1.value;\r\n        result.type = scf.LookupResultType(v1.type, v1.type, scf.TypeLookupTable.oneargnumeric);\r\n\r\n        if (result.type == \"n\") {\r\n            switch (fname) {\r\n                case \"ABS\":\r\n                    value = Math.abs(value);\r\n                    break;\r\n\r\n                case \"ACOS\":\r\n                    if (value >= -1 && value <= 1) {\r\n                        value = Math.acos(value);\r\n                    }\r\n                    else {\r\n                        result.type = \"e#NUM!\";\r\n                    }\r\n                    break;\r\n\r\n                case \"ASIN\":\r\n                    if (value >= -1 && value <= 1) {\r\n                        value = Math.asin(value);\r\n                    }\r\n                    else {\r\n                        result.type = \"e#NUM!\";\r\n                    }\r\n                    break;\r\n\r\n                case \"ATAN\":\r\n                    value = Math.atan(value);\r\n                    break;\r\n\r\n                case \"COS\":\r\n                    value = Math.cos(value);\r\n                    break;\r\n\r\n                case \"DEGREES\":\r\n                    value = value * 180 / Math.PI;\r\n                    break;\r\n\r\n                case \"EVEN\":\r\n                    value = value < 0 ? -value : value;\r\n                    if (value != Math.floor(value)) {\r\n                        value = Math.floor(value + 1) + (Math.floor(value + 1) % 2);\r\n                    }\r\n                    else { // integer\r\n                        value = value + (value % 2);\r\n                    }\r\n                    if (v1.value < 0) value = -value;\r\n                    break;\r\n\r\n                case \"EXP\":\r\n                    value = Math.exp(value);\r\n                    break;\r\n\r\n                case \"FACT\":\r\n                    f = 1;\r\n                    value = Math.floor(value);\r\n                    for (; value > 0; value--) {\r\n                        f *= value;\r\n                    }\r\n                    value = f;\r\n                    break;\r\n\r\n                case \"INT\":\r\n                    value = Math.floor(value); // spreadsheet INT is floor(), not int()\r\n                    break;\r\n\r\n                case \"LN\":\r\n                    if (value <= 0) {\r\n                        result.type = \"e#NUM!\";\r\n                        result.error = SocialCalc.Constants.s_sheetfunclnarg;\r\n                    }\r\n                    value = Math.log(value);\r\n                    break;\r\n\r\n                case \"LOG10\":\r\n                    if (value <= 0) {\r\n                        result.type = \"e#NUM!\";\r\n                        result.error = SocialCalc.Constants.s_sheetfunclog10arg;\r\n                    }\r\n                    value = Math.log(value) / Math.log(10);\r\n                    break;\r\n\r\n                case \"ODD\":\r\n                    value = value < 0 ? -value : value;\r\n                    if (value != Math.floor(value)) {\r\n                        value = Math.floor(value + 1) + (1 - (Math.floor(value + 1) % 2));\r\n                    }\r\n                    else { // integer\r\n                        value = value + (1 - (value % 2));\r\n                    }\r\n                    if (v1.value < 0) value = -value;\r\n                    break;\r\n\r\n                case \"RADIANS\":\r\n                    value = value * Math.PI / 180;\r\n                    break;\r\n\r\n                case \"SIN\":\r\n                    value = Math.sin(value);\r\n                    break;\r\n\r\n                case \"SQRT\":\r\n                    if (value >= 0) {\r\n                        value = Math.sqrt(value);\r\n                    }\r\n                    else {\r\n                        result.type = \"e#NUM!\";\r\n                    }\r\n                    break;\r\n\r\n                case \"TAN\":\r\n                    if (Math.cos(value) != 0) {\r\n                        value = Math.tan(value);\r\n                    }\r\n                    else {\r\n                        result.type = \"e#NUM!\";\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        result.value = value;\r\n        operand.push(result);\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n// Add to function list\r\n    FunctionClassList['math'][\"ABS\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"ACOS\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"ASIN\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"ATAN\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"COS\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"DEGREES\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"EVEN\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"EXP\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"FACT\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"INT\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"LN\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"LOG10\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"ODD\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"RADIANS\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"SIN\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"SQRT\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"TAN\"] = [SocialCalcFormula.Math1Functions, 1, \"v\", \"\", \"math\"];\r\n\r\n\r\n    /*\r\n    #\r\n    # ATAN2(x, y)\r\n    # MOD(a, b)\r\n    # POWER(a, b)\r\n    # TRUNC(value, precision)\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.Math2Functions = function (fname, operand, foperand) {\r\n\r\n        var xval, yval, value, quotient, decimalscale, i;\r\n        var result = {};\r\n\r\n        var scf = SocialCalcFormula;\r\n\r\n        xval = scf.OperandAsNumber( foperand);\r\n        yval = scf.OperandAsNumber( foperand);\r\n        value = 0;\r\n        result.type = scf.LookupResultType(xval.type, yval.type, scf.TypeLookupTable.twoargnumeric);\r\n\r\n        if (result.type == \"n\") {\r\n            switch (fname) {\r\n                case \"ATAN2\":\r\n                    if (xval.value == 0 && yval.value == 0) {\r\n                        result.type = \"e#DIV/0!\";\r\n                    }\r\n                    else {\r\n                        result.value = Math.atan2(yval.value, xval.value);\r\n                    }\r\n                    break;\r\n\r\n                case \"POWER\":\r\n                    result.value = Math.pow(xval.value, yval.value);\r\n                    if (isNaN(result.value)) {\r\n                        result.value = 0;\r\n                        result.type = \"e#NUM!\";\r\n                    }\r\n                    break;\r\n\r\n                case \"MOD\": // en.wikipedia.org/wiki/Modulo_operation, etc.\r\n                    if (yval.value == 0) {\r\n                        result.type = \"e#DIV/0!\";\r\n                    }\r\n                    else {\r\n                        quotient = xval.value / yval.value;\r\n                        quotient = Math.floor(quotient);\r\n                        result.value = xval.value - (quotient * yval.value);\r\n                    }\r\n                    break;\r\n\r\n                case \"TRUNC\":\r\n                    decimalscale = 1; // cut down to required number of decimal digits\r\n                    if (yval.value >= 0) {\r\n                        yval.value = Math.floor(yval.value);\r\n                        for (i = 0; i < yval.value; i++) {\r\n                            decimalscale *= 10;\r\n                        }\r\n                        result.value = Math.floor(Math.abs(xval.value) * decimalscale) / decimalscale;\r\n                    }\r\n                    else if (yval.value < 0) {\r\n                        yval.value = Math.floor(-yval.value);\r\n                        for (i = 0; i < yval.value; i++) {\r\n                            decimalscale *= 10;\r\n                        }\r\n                        result.value = Math.floor(Math.abs(xval.value) / decimalscale) * decimalscale;\r\n                    }\r\n                    if (xval.value < 0) {\r\n                        result.value = -result.value;\r\n                    }\r\n            }\r\n        }\r\n\r\n        operand.push(result);\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n// Add to function list\r\n    FunctionClassList['math'][\"ATAN2\"] = [SocialCalcFormula.Math2Functions, 2, \"xy\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"MOD\"] = [SocialCalcFormula.Math2Functions, 2, \"\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"POWER\"] = [SocialCalcFormula.Math2Functions, 2, \"\", \"\", \"math\"];\r\n    FunctionClassList['math'][\"TRUNC\"] = [SocialCalcFormula.Math2Functions, 2, \"valpre\", \"\", \"math\"];\r\n\r\n    /*\r\n    #\r\n    # LOG(value,[base])\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.LogFunction = function (fname, operand, foperand) {\r\n\r\n        var value, value2;\r\n        var result = {};\r\n\r\n        var scf = SocialCalcFormula;\r\n\r\n        result.value = 0;\r\n\r\n        value = scf.OperandAsNumber(foperand);\r\n        result.type = scf.LookupResultType(value.type, value.type, scf.TypeLookupTable.oneargnumeric);\r\n        if (foperand.length == 1) {\r\n            value2 = scf.OperandAsNumber(foperand);\r\n            if (value2.type.charAt(0) != \"n\" || value2.value <= 0) {\r\n                scf.FunctionSpecificError(fname, operand, \"e#NUM!\", SocialCalc.Constants.s_sheetfunclogsecondarg);\r\n                return 0;\r\n            }\r\n        }\r\n        else if (foperand.length != 0) {\r\n            scf.FunctionArgsError(fname, operand);\r\n            return 0;\r\n        }\r\n        else {\r\n            value2 = {value: Math.E, type: \"n\"};\r\n        }\r\n\r\n        if (result.type == \"n\") {\r\n            if (value.value <= 0) {\r\n                scf.FunctionSpecificError(fname, operand, \"e#NUM!\", SocialCalc.Constants.s_sheetfunclogfirstarg);\r\n                return 0;\r\n            }\r\n            result.value = Math.log(value.value) / Math.log(value2.value);\r\n        }\r\n\r\n        operand.push(result);\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['math'][\"LOG\"] = [SocialCalcFormula.LogFunction, -1, \"log\", \"\", \"math\"];\r\n\r\n\r\n    /*\r\n    #\r\n    # ROUND(value,[precision])\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.RoundFunction = function (fname, operand, foperand) {\r\n\r\n        var value2, decimalscale, scaledvalue, i;\r\n\r\n        var scf = SocialCalcFormula;\r\n        var result = 0;\r\n        var resulttype = \"e#VALUE!\";\r\n\r\n        var value = scf.OperandValueAndType(foperand);\r\n        var resulttype = scf.LookupResultType(value.type, value.type, scf.TypeLookupTable.oneargnumeric);\r\n\r\n        if (foperand.length == 1) {\r\n            value2 = scf.OperandValueAndType(foperand);\r\n            if (value2.type.charAt(0) != \"n\") {\r\n                scf.FunctionSpecificError(fname, operand, \"e#NUM!\", SocialCalc.Constants.s_sheetfuncroundsecondarg);\r\n                return 0;\r\n            }\r\n        }\r\n        else if (foperand.length != 0) {\r\n            scf.FunctionArgsError(fname, operand);\r\n            return 0;\r\n        }\r\n        else {\r\n            value2 = {value: 0, type: \"n\"}; // if no second arg, assume 0 for simple round\r\n        }\r\n\r\n        if (resulttype == \"n\") {\r\n            value2.value = value2.value - 0;\r\n            if (value2.value == 0) {\r\n                result = Math.round(value.value);\r\n            }\r\n            else if (value2.value > 0) {\r\n                decimalscale = 1; // cut down to required number of decimal digits\r\n                value2.value = Math.floor(value2.value);\r\n                for (i = 0; i < value2.value; i++) {\r\n                    decimalscale *= 10;\r\n                }\r\n                scaledvalue = Math.round(value.value * decimalscale);\r\n                result = scaledvalue / decimalscale;\r\n            }\r\n            else if (value2.value < 0) {\r\n                decimalscale = 1; // cut down to required number of decimal digits\r\n                value2.value = Math.floor(-value2.value);\r\n                for (i = 0; i < value2.value; i++) {\r\n                    decimalscale *= 10;\r\n                }\r\n                scaledvalue = Math.round(value.value / decimalscale);\r\n                result = scaledvalue * decimalscale;\r\n            }\r\n        }\r\n\r\n        scf.PushOperand(operand, resulttype, result);\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['math'][\"ROUND\"] = [SocialCalcFormula.RoundFunction, -1, \"vp\", \"\", \"math\"];\r\n\r\n    /*\r\n    #\r\n    # AND(v1,c1:c2,...)\r\n    # OR(v1,c1:c2,...)\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.AndOrFunctions = function (fname, operand, foperand) {\r\n\r\n        var value1, result;\r\n\r\n        var scf = SocialCalcFormula;\r\n        var resulttype = \"\";\r\n\r\n        if (fname == \"AND\") {\r\n            result = 1;\r\n        }\r\n        else if (fname == \"OR\") {\r\n            result = 0;\r\n        }\r\n\r\n        while (foperand.length) {\r\n            value1 = scf.OperandValueAndType(foperand);\r\n            if (value1.type.charAt(0) == \"n\") {\r\n                value1.value = value1.value - 0;\r\n                if (fname == \"AND\") {\r\n                    result = value1.value != 0 ? result : 0;\r\n                }\r\n                else if (fname == \"OR\") {\r\n                    result = value1.value != 0 ? 1 : result;\r\n                }\r\n                resulttype = scf.LookupResultType(value1.type, resulttype || \"nl\", scf.TypeLookupTable.propagateerror);\r\n            }\r\n            else if (value1.type.charAt(0) == \"e\" && resulttype.charAt(0) != \"e\") {\r\n                resulttype = value1.type;\r\n            }\r\n        }\r\n        if (resulttype.length < 1) {\r\n            resulttype = \"e#VALUE!\";\r\n            result = 0;\r\n        }\r\n        console.log(scf)\r\n        scf.PushOperand(operand, resulttype, result);\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['test'][\"AND\"] = [SocialCalcFormula.AndOrFunctions, -1, \"vn\", \"\", \"test\"];\r\n    FunctionClassList['test'][\"OR\"] = [SocialCalcFormula.AndOrFunctions, -1, \"vn\", \"\", \"test\"];\r\n\r\n    /*\r\n    #\r\n    # NOT(value)\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.NotFunction = function (fname, operand, foperand) {\r\n\r\n        var result = 0;\r\n        var scf = SocialCalcFormula;\r\n        var value = scf.OperandValueAndType(foperand);\r\n        var resulttype = scf.LookupResultType(value.type, value.type, scf.TypeLookupTable.propagateerror);\r\n\r\n        if (value.type.charAt(0) == \"n\" || value.type == \"b\") {\r\n            result = value.value - 0 != 0 ? 0 : 1; // do the \"not\" operation\r\n            resulttype = \"nl\";\r\n        }\r\n        else if (value.type.charAt(0) == \"t\") {\r\n            resulttype = \"e#VALUE!\";\r\n        }\r\n\r\n        scf.PushOperand(operand, resulttype, result);\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['test'][\"NOT\"] = [SocialCalcFormula.NotFunction, 1, \"v\", \"\", \"test\"];\r\n\r\n    /*\r\n    #\r\n    # CHOOSE(index,value1,value2,...)\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.ChooseFunction = function (fname, operand, foperand) {\r\n\r\n        var resulttype, count, value1;\r\n        var result = 0;\r\n        var scf = SocialCalcFormula;\r\n\r\n        var cindex = scf.OperandAsNumber(foperand);\r\n\r\n        if (cindex.type.charAt(0) != \"n\") {\r\n            cindex.value = 0;\r\n        }\r\n        cindex.value = Math.floor(cindex.value);\r\n\r\n        count = 0;\r\n        while (foperand.length) {\r\n            value1 = scf.TopOfStackValueAndType(foperand);\r\n            count += 1;\r\n            if (cindex.value == count) {\r\n                result = value1.value;\r\n                resulttype = value1.type;\r\n                break;\r\n            }\r\n        }\r\n        if (resulttype) { // found something\r\n            scf.PushOperand(operand, resulttype, result);\r\n        }\r\n        else {\r\n            scf.PushOperand(operand, \"e#VALUE!\", 0);\r\n        }\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['lookup'][\"CHOOSE\"] = [SocialCalcFormula.ChooseFunction, -2, \"choose\", \"\", \"lookup\"];\r\n\r\n    /*\r\n    #\r\n    # COLUMNS(c1:c2)\r\n    # ROWS(c1:c2)\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.ColumnsRowsFunctions = function (fname, operand, foperand) {\r\n\r\n        var resulttype, rangeinfo;\r\n        var result = 0;\r\n        var scf = SocialCalcFormula;\r\n\r\n        var value1 = scf.TopOfStackValueAndType(foperand);\r\n\r\n        if (value1.type == \"coord\") {\r\n            result = 1;\r\n            resulttype = \"n\";\r\n        }\r\n\r\n        else if (value1.type == \"range\") {\r\n            rangeinfo = scf.DecodeRangeParts(value1.value);\r\n            if (fname == \"COLUMNS\") {\r\n                result = rangeinfo.ncols;\r\n            }\r\n            else if (fname == \"ROWS\") {\r\n                result = rangeinfo.nrows;\r\n            }\r\n            resulttype = \"n\";\r\n        }\r\n        else {\r\n            result = 0;\r\n            resulttype = \"e#VALUE!\";\r\n        }\r\n\r\n        scf.PushOperand(operand, resulttype, result);\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['lookup'][\"COLUMNS\"] = [SocialCalcFormula.ColumnsRowsFunctions, 1, \"range\", \"\", \"lookup\"];\r\n    FunctionClassList['lookup'][\"ROWS\"] = [SocialCalcFormula.ColumnsRowsFunctions, 1, \"range\", \"\", \"lookup\"];\r\n\r\n\r\n    /*\r\n    #\r\n    # FALSE()\r\n    # NA()\r\n    # NOW()\r\n    # PI()\r\n    # TODAY()\r\n    # TRUE()\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.ZeroArgFunctions = function (fname, operand, foperand) {\r\n\r\n        var startval, tzoffset, start_1_1_1970, seconds_in_a_day, nowdays;\r\n        var result = {value: 0};\r\n\r\n        switch (fname) {\r\n            case \"FALSE\":\r\n                result.type = \"nl\";\r\n                result.value = 0;\r\n                break;\r\n\r\n            case \"NA\":\r\n                result.type = \"e#N/A\";\r\n                break;\r\n\r\n            case \"NOW\":\r\n                startval = new Date();\r\n                tzoffset = startval.getTimezoneOffset();\r\n                startval = startval.getTime() / 1000; // convert to seconds\r\n                start_1_1_1970 = 25569; // Day number of 1/1/1970 starting with 1/1/1900 as 1\r\n                seconds_in_a_day = 24 * 60 * 60;\r\n                nowdays = start_1_1_1970 + startval / seconds_in_a_day - tzoffset / (24 * 60);\r\n                result.value = nowdays;\r\n                result.type = \"ndt\";\r\n                //SocialCalcFormula.FreshnessInfo.volatile.NOW = true; // remember\r\n                break;\r\n\r\n            case \"PI\":\r\n                result.type = \"n\";\r\n                result.value = Math.PI;\r\n                break;\r\n\r\n            case \"TODAY\":\r\n                startval = new Date();\r\n                tzoffset = startval.getTimezoneOffset();\r\n                startval = startval.getTime() / 1000; // convert to seconds\r\n                start_1_1_1970 = 25569; // Day number of 1/1/1970 starting with 1/1/1900 as 1\r\n                seconds_in_a_day = 24 * 60 * 60;\r\n                nowdays = start_1_1_1970 + startval / seconds_in_a_day - tzoffset / (24 * 60);\r\n                result.value = Math.floor(nowdays);\r\n                result.type = \"nd\";\r\n                //SocialCalcFormula.FreshnessInfo.volatile.TODAY = true; // remember\r\n                break;\r\n\r\n            case \"TRUE\":\r\n                result.type = \"nl\";\r\n                result.value = 1;\r\n                break;\r\n\r\n        }\r\n\r\n        operand.push(result);\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n// Add to function list\r\n    FunctionClassList['test'][\"FALSE\"] = [SocialCalcFormula.ZeroArgFunctions, 0, \"\", \"\", \"test\"];\r\n    FunctionClassList['test'][\"NA\"] = [SocialCalcFormula.ZeroArgFunctions, 0, \"\", \"\", \"test\"];\r\n    FunctionClassList['datetime'][\"NOW\"] = [SocialCalcFormula.ZeroArgFunctions, 0, \"\", \"\", \"datetime\"];\r\n    FunctionClassList['math'][\"PI\"] = [SocialCalcFormula.ZeroArgFunctions, 0, \"\", \"\", \"math\"];\r\n    FunctionClassList['datetime'][\"TODAY\"] = [SocialCalcFormula.ZeroArgFunctions, 0, \"\", \"\", \"datetime\"];\r\n    FunctionClassList['test'][\"TRUE\"] = [SocialCalcFormula.ZeroArgFunctions, 0, \"\", \"\", \"test\"];\r\n\r\n//\r\n// * * * * * FINANCIAL FUNCTIONS * * * * *\r\n//\r\n\r\n    /*\r\n    #\r\n    # DDB(cost,salvage,lifetime,period,[method])\r\n    #\r\n    # Depreciation, method defaults to 2 for double-declining balance\r\n    # See: http://en.wikipedia.org/wiki/Depreciation\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.DDBFunction = function (fname, operand, foperand) {\r\n\r\n        var method, depreciation, accumulateddepreciation, i;\r\n        var scf = SocialCalcFormula;\r\n\r\n        var cost = scf.OperandAsNumber(foperand);\r\n        var salvage = scf.OperandAsNumber(foperand);\r\n        var lifetime = scf.OperandAsNumber(foperand);\r\n        var period = scf.OperandAsNumber(foperand);\r\n\r\n        if (scf.CheckForErrorValue(operand, cost)) return;\r\n        if (scf.CheckForErrorValue(operand, salvage)) return;\r\n        if (scf.CheckForErrorValue(operand, lifetime)) return;\r\n        if (scf.CheckForErrorValue(operand, period)) return;\r\n\r\n        if (lifetime.value < 1) {\r\n            scf.FunctionSpecificError(fname, operand, \"e#NUM!\", SocialCalc.Constants.s_sheetfuncddblife);\r\n            return 0;\r\n        }\r\n\r\n        method = {value: 2, type: \"n\"};\r\n        if (foperand.length > 0) {\r\n            method = scf.OperandAsNumber(foperand);\r\n        }\r\n        if (foperand.length != 0) {\r\n            scf.FunctionArgsError(fname, operand);\r\n            return 0;\r\n        }\r\n        if (scf.CheckForErrorValue(operand, method)) return;\r\n\r\n        depreciation = 0; // calculated for each period\r\n        accumulateddepreciation = 0; // accumulated by adding each period's\r\n\r\n        for (i = 1; i <= period.value - 0 && i <= lifetime.value; i++) { // calculate for each period based on net from previous\r\n            depreciation = (cost.value - accumulateddepreciation) * (method.value / lifetime.value);\r\n            if (cost.value - accumulateddepreciation - depreciation < salvage.value) { // don't go lower than salvage value\r\n                depreciation = cost.value - accumulateddepreciation - salvage.value;\r\n            }\r\n            accumulateddepreciation += depreciation;\r\n        }\r\n\r\n        scf.PushOperand(operand, 'n$', depreciation);\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['financial'][\"DDB\"] = [SocialCalcFormula.DDBFunction, -4, \"ddb\", \"\", \"financial\"];\r\n\r\n    /*\r\n    #\r\n    # SLN(cost,salvage,lifetime)\r\n    #\r\n    # Depreciation for each period by straight-line method\r\n    # See: http://en.wikipedia.org/wiki/Depreciation\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.SLNFunction = function (fname, operand, foperand) {\r\n\r\n        var depreciation;\r\n        var scf = SocialCalcFormula;\r\n\r\n        var cost = scf.OperandAsNumber(foperand);\r\n        var salvage = scf.OperandAsNumber(foperand);\r\n        var lifetime = scf.OperandAsNumber(foperand);\r\n\r\n        if (scf.CheckForErrorValue(operand, cost)) return;\r\n        if (scf.CheckForErrorValue(operand, salvage)) return;\r\n        if (scf.CheckForErrorValue(operand, lifetime)) return;\r\n\r\n        if (lifetime.value < 1) {\r\n            scf.FunctionSpecificError(fname, operand, \"e#NUM!\", SocialCalc.Constants.s_sheetfuncslnlife);\r\n            return 0;\r\n        }\r\n\r\n        depreciation = (cost.value - salvage.value) / lifetime.value;\r\n\r\n        scf.PushOperand(operand, 'n$', depreciation);\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['financial'][\"SLN\"] = [SocialCalcFormula.SLNFunction, 3, \"csl\", \"\", \"financial\"];\r\n\r\n    /*\r\n    #\r\n    # SYD(cost,salvage,lifetime,period)\r\n    #\r\n    # Depreciation by Sum of Year's Digits method\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.SYDFunction = function (fname, operand, foperand) {\r\n\r\n        var depreciation, sumperiods;\r\n        var scf = SocialCalcFormula;\r\n\r\n        var cost = scf.OperandAsNumber(foperand);\r\n        var salvage = scf.OperandAsNumber(foperand);\r\n        var lifetime = scf.OperandAsNumber(foperand);\r\n        var period = scf.OperandAsNumber(foperand);\r\n\r\n        if (scf.CheckForErrorValue(operand, cost)) return;\r\n        if (scf.CheckForErrorValue(operand, salvage)) return;\r\n        if (scf.CheckForErrorValue(operand, lifetime)) return;\r\n        if (scf.CheckForErrorValue(operand, period)) return;\r\n\r\n        if (lifetime.value < 1 || period.value <= 0) {\r\n            scf.PushOperand(operand, \"e#NUM!\", 0);\r\n            return 0;\r\n        }\r\n\r\n        sumperiods = ((lifetime.value + 1) * lifetime.value) / 2; // add up 1 through lifetime\r\n        depreciation = (cost.value - salvage.value) * (lifetime.value - period.value + 1) / sumperiods; // calc depreciation\r\n\r\n        scf.PushOperand(operand, 'n$', depreciation);\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['financial'][\"SYD\"] = [SocialCalcFormula.SYDFunction, 4, \"cslp\", \"\", \"financial\"];\r\n\r\n    /*\r\n    #\r\n    # FV(rate, n, payment, [pv, [paytype]])\r\n    # NPER(rate, payment, pv, [fv, [paytype]])\r\n    # PMT(rate, n, pv, [fv, [paytype]])\r\n    # PV(rate, n, payment, [fv, [paytype]])\r\n    # RATE(n, payment, pv, [fv, [paytype, [guess]]])\r\n    #\r\n    # Following the Open Document Format formula specification:\r\n    #\r\n    #    PV = - Fv - (Payment * Nper) [if rate equals 0]\r\n    #    Pv*(1+Rate)^Nper + Payment * (1 + Rate*PaymentType) * ( (1+Rate)^nper -1)/Rate + Fv = 0\r\n    #\r\n    # For each function, the formulas are solved for the appropriate value (transformed using\r\n    # basic algebra).\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.InterestFunctions = function (fname, operand, foperand) {\r\n\r\n        var resulttype, result, dval, eval, fval;\r\n        var pv, fv, rate, n, payment, paytype, guess, part1, part2, part3, part4, part5;\r\n        var olddelta, maxloop, tries, deltaepsilon, rate, oldrate, m;\r\n\r\n        var scf = SocialCalcFormula;\r\n\r\n        var aval = scf.OperandAsNumber(foperand);\r\n        var bval = scf.OperandAsNumber(foperand);\r\n        var cval = scf.OperandAsNumber(foperand);\r\n\r\n        resulttype = scf.LookupResultType(aval.type, bval.type, scf.TypeLookupTable.twoargnumeric);\r\n        resulttype = scf.LookupResultType(resulttype, cval.type, scf.TypeLookupTable.twoargnumeric);\r\n        if (foperand.length) { // optional arguments\r\n            dval = scf.OperandAsNumber(foperand);\r\n            resulttype = scf.LookupResultType(resulttype, dval.type, scf.TypeLookupTable.twoargnumeric);\r\n            if (foperand.length) { // optional arguments\r\n                eval = scf.OperandAsNumber(foperand);\r\n                resulttype = scf.LookupResultType(resulttype, eval.type, scf.TypeLookupTable.twoargnumeric);\r\n                if (foperand.length) { // optional arguments\r\n                    if (fname != \"RATE\") { // only rate has 6 possible args\r\n                        scf.FunctionArgsError(fname, operand);\r\n                        return 0;\r\n                    }\r\n                    fval = scf.OperandAsNumber(shfoperand);\r\n                    resulttype = scf.LookupResultType(resulttype, fval.type, scf.TypeLookupTable.twoargnumeric);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (resulttype == \"n\") {\r\n            switch (fname) {\r\n                case \"FV\": // FV(rate, n, payment, [pv, [paytype]])\r\n                    rate = aval.value;\r\n                    n = bval.value;\r\n                    payment = cval.value;\r\n                    pv = dval != null ? dval.value : 0; // get value if present, or use default\r\n                    paytype = eval != null ? (eval.value ? 1 : 0) : 0;\r\n                    if (rate == 0) { // simple calculation if no interest\r\n                        fv = -pv - (payment * n);\r\n                    }\r\n                    else {\r\n                        fv = -(pv * Math.pow(1 + rate, n) + payment * (1 + rate * paytype) * ( Math.pow(1 + rate, n) - 1) / rate);\r\n                    }\r\n                    result = fv;\r\n                    resulttype = 'n$';\r\n                    break;\r\n\r\n                case \"NPER\": // NPER(rate, payment, pv, [fv, [paytype]])\r\n                    rate = aval.value;\r\n                    payment = bval.value;\r\n                    pv = cval.value;\r\n                    fv = dval != null ? dval.value : 0;\r\n                    paytype = eval != null ? (eval.value ? 1 : 0) : 0;\r\n                    if (rate == 0) { // simple calculation if no interest\r\n                        if (payment == 0) {\r\n                            scf.PushOperand(operand, \"e#NUM!\", 0);\r\n                            return;\r\n                        }\r\n                        n = (pv + fv) / (-payment);\r\n                    }\r\n                    else {\r\n                        part1 = payment * (1 + rate * paytype) / rate;\r\n                        part2 = pv + part1;\r\n                        if (part2 == 0 || rate <= -1) {\r\n                            scf.PushOperand(operand, \"e#NUM!\", 0);\r\n                            return;\r\n                        }\r\n                        part3 = (part1 - fv) / part2;\r\n                        if (part3 <= 0) {\r\n                            scf.PushOperand(operand, \"e#NUM!\", 0);\r\n                            return;\r\n                        }\r\n                        part4 = Math.log(part3);\r\n                        part5 = Math.log(1 + rate); // rate > -1\r\n                        n = part4 / part5;\r\n                    }\r\n                    result = n;\r\n                    resulttype = 'n';\r\n                    break;\r\n\r\n                case \"PMT\": // PMT(rate, n, pv, [fv, [paytype]])\r\n                    rate = aval.value;\r\n                    n = bval.value;\r\n                    pv = cval.value;\r\n                    fv = dval != null ? dval.value : 0;\r\n                    paytype = eval != null ? (eval.value ? 1 : 0) : 0;\r\n                    if (n == 0) {\r\n                        scf.PushOperand(operand, \"e#NUM!\", 0);\r\n                        return;\r\n                    }\r\n                    else if (rate == 0) { // simple calculation if no interest\r\n                        payment = (fv - pv) / n;\r\n                    }\r\n                    else {\r\n                        payment = (0 - fv - pv * Math.pow(1 + rate, n)) / ((1 + rate * paytype) * ( Math.pow(1 + rate, n) - 1) / rate);\r\n                    }\r\n                    result = payment;\r\n                    resulttype = 'n$';\r\n                    break;\r\n\r\n                case \"PV\": // PV(rate, n, payment, [fv, [paytype]])\r\n                    rate = aval.value;\r\n                    n = bval.value;\r\n                    payment = cval.value;\r\n                    fv = dval != null ? dval.value : 0;\r\n                    paytype = eval != null ? (eval.value ? 1 : 0) : 0;\r\n                    if (rate == -1) {\r\n                        scf.PushOperand(operand, \"e#DIV/0!\", 0);\r\n                        return;\r\n                    }\r\n                    else if (rate == 0) { // simple calculation if no interest\r\n                        pv = -fv - (payment * n);\r\n                    }\r\n                    else {\r\n                        pv = (-fv - payment * (1 + rate * paytype) * ( Math.pow(1 + rate, n) - 1) / rate) / (Math.pow(1 + rate, n));\r\n                    }\r\n                    result = pv;\r\n                    resulttype = 'n$';\r\n                    break;\r\n\r\n                case \"RATE\": // RATE(n, payment, pv, [fv, [paytype, [guess]]])\r\n                    n = aval.value;\r\n                    payment = bval.value;\r\n                    pv = cval.value;\r\n                    fv = dval != null ? dval.value : 0;\r\n                    paytype = eval != null ? (eval.value ? 1 : 0) : 0;\r\n                    guess = fval != null ? fval.value : 0.1;\r\n\r\n                    // rate is calculated by repeated approximations\r\n                    // The deltas are used to calculate new guesses\r\n\r\n                    maxloop = 100;\r\n                    tries = 0;\r\n                    delta = 1;\r\n                    epsilon = 0.0000001; // this is close enough\r\n                    rate = guess || 0.00000001; // zero is not allowed\r\n                    while ((delta >= 0 ? delta : -delta) > epsilon && (rate != oldrate)) {\r\n                        delta = fv + pv * Math.pow(1 + rate, n) + payment * (1 + rate * paytype) * ( Math.pow(1 + rate, n) - 1) / rate;\r\n                        if (olddelta != null) {\r\n                            m = (delta - olddelta) / (rate - oldrate) || .001; // get slope (not zero)\r\n                            oldrate = rate;\r\n                            rate = rate - delta / m; // look for zero crossing\r\n                            olddelta = delta;\r\n                        }\r\n                        else { // first time - no old values\r\n                            oldrate = rate;\r\n                            rate = 1.1 * rate;\r\n                            olddelta = delta;\r\n                        }\r\n                        tries++;\r\n                        if (tries >= maxloop) { // didn't converge yet\r\n                            scf.PushOperand(operand, \"e#NUM!\", 0);\r\n                            return;\r\n                        }\r\n                    }\r\n                    result = rate;\r\n                    resulttype = 'n%';\r\n                    break;\r\n            }\r\n        }\r\n\r\n        scf.PushOperand(operand, resulttype, result);\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['financial'][\"FV\"] = [SocialCalcFormula.InterestFunctions, -3, \"fv\", \"\", \"financial\"];\r\n    FunctionClassList['financial'][\"NPER\"] = [SocialCalcFormula.InterestFunctions, -3, \"nper\", \"\", \"financial\"];\r\n    FunctionClassList['financial'][\"PMT\"] = [SocialCalcFormula.InterestFunctions, -3, \"pmt\", \"\", \"financial\"];\r\n    FunctionClassList['financial'][\"PV\"] = [SocialCalcFormula.InterestFunctions, -3, \"pv\", \"\", \"financial\"];\r\n    FunctionClassList['financial'][\"RATE\"] = [SocialCalcFormula.InterestFunctions, -3, \"rate\", \"\", \"financial\"];\r\n\r\n    /*\r\n    #\r\n    # NPV(rate,v1,v2,c1:c2,...)\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.NPVFunction = function (fname, operand, foperand) {\r\n\r\n        var resulttypenpv, rate, sum, factor, value1;\r\n\r\n        var scf = SocialCalcFormula;\r\n\r\n        var rate = scf.OperandAsNumber(foperand);\r\n        if (scf.CheckForErrorValue(operand, rate)) return;\r\n\r\n        sum = 0;\r\n        resulttypenpv = \"n\";\r\n        factor = 1;\r\n\r\n        while (foperand.length) {\r\n            value1 = scf.OperandValueAndType(foperand);\r\n            if (value1.type.charAt(0) == \"n\") {\r\n                factor *= (1 + rate.value);\r\n                if (factor == 0) {\r\n                    scf.PushOperand(operand, \"e#DIV/0!\", 0);\r\n                    return;\r\n                }\r\n                sum += value1.value / factor;\r\n                resulttypenpv = scf.LookupResultType(value1.type, resulttypenpv || value1.type, scf.TypeLookupTable.plus);\r\n            }\r\n            else if (value1.type.charAt(0) == \"e\" && resulttypenpv.charAt(0) != \"e\") {\r\n                resulttypenpv = value1.type;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (resulttypenpv.charAt(0) == \"n\") {\r\n            resulttypenpv = 'n$';\r\n        }\r\n\r\n        scf.PushOperand(operand, resulttypenpv, sum);\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['financial'][\"NPV\"] = [SocialCalcFormula.NPVFunction, -2, \"npv\", \"\", \"financial\"];\r\n\r\n    /*\r\n    #\r\n    # IRR(c1:c2,[guess])\r\n    #\r\n    */\r\n\r\n    SocialCalcFormula.IRRFunction = function (fname, operand, foperand) {\r\n\r\n        var value1, guess, oldsum, maxloop, tries, epsilon, rate, oldrate, m, sum, factor, i;\r\n        var rangeoperand = [];\r\n        var cashflows = [];\r\n\r\n        var scf = SocialCalcFormula;\r\n\r\n        rangeoperand.push(foperand.pop()); // first operand is a range\r\n\r\n        while (rangeoperand.length) { // get values from range so we can do iterative approximations\r\n            value1 = scf.OperandValueAndType(rangeoperand);\r\n            if (value1.type.charAt(0) == \"n\") {\r\n                cashflows.push(value1.value);\r\n            }\r\n            else if (value1.type.charAt(0) == \"e\") {\r\n                scf.PushOperand(operand, \"e#VALUE!\", 0);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!cashflows.length) {\r\n            scf.PushOperand(operand, \"e#NUM!\", 0);\r\n            return;\r\n        }\r\n\r\n        guess = {value: 0};\r\n\r\n        if (foperand.length) { // guess is provided\r\n            guess = scf.OperandAsNumber(foperand);\r\n            if (guess.type.charAt(0) != \"n\" && guess.type.charAt(0) != \"b\") {\r\n                scf.PushOperand(operand, \"e#VALUE!\", 0);\r\n                return;\r\n            }\r\n            if (foperand.length) { // should be no more args\r\n                scf.FunctionArgsError(fname, operand);\r\n                return;\r\n            }\r\n        }\r\n\r\n        guess.value = guess.value || 0.1;\r\n\r\n        // rate is calculated by repeated approximations\r\n        // The deltas are used to calculate new guesses\r\n\r\n        maxloop = 20;\r\n        tries = 0;\r\n        epsilon = 0.0000001; // this is close enough\r\n        rate = guess.value;\r\n        sum = 1;\r\n\r\n        while ((sum >= 0 ? sum : -sum) > epsilon && (rate != oldrate)) {\r\n            sum = 0;\r\n            factor = 1;\r\n            for (i = 0; i < cashflows.length; i++) {\r\n                factor *= (1 + rate);\r\n                if (factor == 0) {\r\n                    scf.PushOperand(operand, \"e#DIV/0!\", 0);\r\n                    return;\r\n                }\r\n                sum += cashflows[i] / factor;\r\n            }\r\n\r\n            if (oldsum != null) {\r\n                m = (sum - oldsum) / (rate - oldrate); // get slope\r\n                oldrate = rate;\r\n                rate = rate - sum / m; // look for zero crossing\r\n                oldsum = sum;\r\n            }\r\n            else { // first time - no old values\r\n                oldrate = rate;\r\n                rate = 1.1 * rate;\r\n                oldsum = sum;\r\n            }\r\n            tries++;\r\n            if (tries >= maxloop) { // didn't converge yet\r\n                scf.PushOperand(operand, \"e#NUM!\", 0);\r\n                return;\r\n            }\r\n        }\r\n\r\n        scf.PushOperand(operand, 'n%', rate);\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    FunctionClassList['financial'][\"IRR\"] = [SocialCalcFormula.IRRFunction, -1, \"irr\", \"\", \"financial\"];\r\n    this.FunctionList = {}\r\n    for (fclass in FunctionClassList){\r\n        for (fname in FunctionClassList[fclass]){\r\n            this.FunctionList[fname]=FunctionClassList[fclass][fname]\r\n        }\r\n    }\r\n\r\n//\r\n// SHEET CACHE\r\n//\r\n\r\n    // SocialCalcFormula.SheetCache = {\r\n    //\r\n    //     // Sheet data: Attributes are each sheet in the cache with values of an object with:\r\n    //     //\r\n    //     //    sheet: sheet-obj (or null, meaning not found)\r\n    //     //    recalcstate: constants.asloaded = as loaded\r\n    //     //                 constants.recalcing = being recalced now\r\n    //     //                 constants.recalcdone = recalc done\r\n    //     //    name: name of sheet (in case just have object and don't know name)\r\n    //     //\r\n    //\r\n    //     sheets: {},\r\n    //\r\n    //     // Waiting for loading:\r\n    //     // If sheet is not in cache, this is set to the sheetname being loaded\r\n    //     // so it can be tested in the recalc loop to start load and then wait until restarted.\r\n    //     // Reset to null before restarting.\r\n    //\r\n    //     waitingForLoading: null,\r\n    //\r\n    //     // Constants to use for setting sheets[*].recalcstate:\r\n    //\r\n    //     constants: {asloaded: 0, recalcing: 1, recalcdone: 2},\r\n    //\r\n    //     loadsheet: null // (deprecated - use SocialCalc.RecalcInfo.LoadSheet)\r\n    //\r\n    // };\r\n\r\n//\r\n// othersheet = SocialCalcFormula.FindInSheetCache(sheetname)\r\n//\r\n// Returns a SocialCalc.Sheet object corresponding to string sheetname\r\n// or null if the sheet is not available or in error.\r\n//\r\n// Each sheet is loaded only once and then stored in a cache.\r\n// Loading is handled elsewhere, e.g., in the recalc loop.\r\n//\r\n\r\n    // SocialCalcFormula.FindInSheetCache = function (sheetname) {\r\n    //\r\n    //     var str;\r\n    //     var sfsc = SocialCalcFormula.SheetCache;\r\n    //\r\n    //     var nsheetname = SocialCalcFormula.NormalizeSheetName(sheetname); // normalize different versions\r\n    //\r\n    //     if (sfsc.sheets[nsheetname]) { // a sheet by that name is in the cache already\r\n    //         return sfsc.sheets[nsheetname].sheet; // return it\r\n    //     }\r\n    //\r\n    //     if (sfsc.waitingForLoading) { // waiting already - only queue up one\r\n    //         return null; // return not found\r\n    //     }\r\n    //\r\n    //     if (sfsc.loadsheet) { // Deprecated old format synchronous callback\r\n    //         alert(\"Using SocialCalcFormula.SheetCache.loadsheet - deprecated\");\r\n    //         return SocialCalcFormula.AddSheetToCache(nsheetname, sfsc.loadsheet(nsheetname));\r\n    //     }\r\n    //\r\n    //     sfsc.waitingForLoading = nsheetname; // let recalc loop know that we have a sheet to load\r\n    //\r\n    //     return null; // return not found\r\n    //\r\n    // }\r\n\r\n//\r\n// newsheet = SocialCalcFormula.AddSheetToCache(sheetname, str)\r\n//\r\n// Adds a new sheet to the sheet cache.\r\n// Returns the sheet object filled out with the str (a saved sheet).\r\n//\r\n\r\n    // SocialCalcFormula.AddSheetToCache = function (sheetname, str) {\r\n    //\r\n    //     var newsheet = null;\r\n    //     var sfsc = SocialCalcFormula.SheetCache;\r\n    //     var sfscc = sfsc.constants;\r\n    //     var newsheetname = SocialCalcFormula.NormalizeSheetName(sheetname);\r\n    //\r\n    //     if (str) {\r\n    //         newsheet = new SocialCalc.Sheet();\r\n    //         newsheet.ParseSheetSave(str);\r\n    //     }\r\n    //\r\n    //     sfsc.sheets[newsheetname] = {sheet: newsheet, recalcstate: sfscc.asloaded, name: newsheetname};\r\n    //\r\n    //     SocialCalcFormula.FreshnessInfo.sheets[newsheetname] = true;\r\n    //\r\n    //     return newsheet;\r\n    //\r\n    // }\r\n\r\n//\r\n// nsheet = SocialCalcFormula.NormalizeSheetName(sheetname)\r\n//\r\n\r\n    // SocialCalcFormula.NormalizeSheetName = function (sheetname) {\r\n    //\r\n    //     if (SocialCalc.Callbacks.NormalizeSheetName) {\r\n    //         return SocialCalc.Callbacks.NormalizeSheetName(sheetname);\r\n    //     }\r\n    //     else {\r\n    //         return sheetname.toLowerCase();\r\n    //     }\r\n    // }\r\n\r\n//\r\n// REMOTE FUNCTION INFO\r\n//\r\n\r\n    // SocialCalcFormula.RemoteFunctionInfo = {\r\n    //\r\n    //     // Waiting for server:\r\n    //     // If waiting for an XHR response from the server, this is set to some non-blank status text\r\n    //     // so it can be tested in the recalc loop to start load and then wait until restarted.\r\n    //     // Reset to null before restarting.\r\n    //\r\n    //     waitingForServer: null\r\n    //\r\n    // };\r\n\r\n//\r\n// FRESHNESS INFO\r\n//\r\n// This information is generated during recalc.\r\n// It may be used to help determine when the recalc data in a spreadsheet\r\n// may be out of date.\r\n// For example, it may be used to display a message like:\r\n// \"Dependent on sheet 'FOO' which was updated more recently than this printout\"\r\n\r\n    // SocialCalcFormula.FreshnessInfo = {\r\n    //\r\n    //     // For each external sheet referenced successfully an attribute of that name with value true.\r\n    //\r\n    //     sheets: {},\r\n    //\r\n    //     // For each volatile function that is called an attribute of that name with value true.\r\n    //\r\n    //     volatile: {},\r\n    //\r\n    //     // Set to false when started and true when recalc completes\r\n    //\r\n    //     recalc_completed: false\r\n    //\r\n    // };\r\n    //\r\n    // SocialCalcFormula.FreshnessInfoReset = function () {\r\n    //\r\n    //     var scffi = SocialCalcFormula.FreshnessInfo;\r\n    //\r\n    //     scffi.sheets = {};\r\n    //     scffi.volatile = {};\r\n    //     scffi.recalc_completed = false;\r\n    //\r\n    // }\r\n\r\n//\r\n// MISC ROUTINES\r\n//\r\n\r\n//\r\n// result = SocialCalcFormula.PlainCoord(coord)\r\n//\r\n// Returns: coord without any $'s\r\n//\r\n\r\n    // SocialCalcFormula.PlainCoord = function (coord) {\r\n    //\r\n    //     if (coord.indexOf(\"$\") == -1) return coord;\r\n    //\r\n    //     return coord.replace(/\\$/g, \"\"); // remove any $'s\r\n    //\r\n    // }\r\n\r\n//\r\n// result = SocialCalcFormula.OrderRangeParts(coord1, coord2)\r\n//\r\n// Returns: {c1: col, r1: row, c2: col, r2 = row} with c1/r1 upper left\r\n//\r\n\r\n    // SocialCalcFormula.OrderRangeParts = function (coord1, coord2) {\r\n    //\r\n    //     var cr1, cr2;\r\n    //     var result = {};\r\n    //\r\n    //     cr1 = SocialCalc.coordToCr(coord1);\r\n    //     cr2 = SocialCalc.coordToCr(coord2);\r\n    //     if (cr1.col > cr2.col) {\r\n    //         result.c1 = cr2.col;\r\n    //         result.c2 = cr1.col;\r\n    //     }\r\n    //     else {\r\n    //         result.c1 = cr1.col;\r\n    //         result.c2 = cr2.col;\r\n    //     }\r\n    //     if (cr1.row > cr2.row) {\r\n    //         result.r1 = cr2.row;\r\n    //         result.r2 = cr1.row;\r\n    //     }\r\n    //     else {\r\n    //         result.r1 = cr1.row;\r\n    //         result.r2 = cr2.row;\r\n    //     }\r\n    //\r\n    //     return result;\r\n    //\r\n    // }\r\n\r\n//\r\n// cond = SocialCalcFormula.TestCriteria(value, type, criteria)\r\n//\r\n// Determines whether a value/type meets the criteria.\r\n// A criteria can be a numeric value, text beginning with <, <=, =, >=, >, <>, text by itself is start of text to match.\r\n// Used by a variety of functions, including the \"D\" functions (DSUM, etc.).\r\n//\r\n// Returns true or false\r\n//\r\n\r\n    // SocialCalcFormula.TestCriteria = function (value, type, criteria) {\r\n    //\r\n    //     var comparitor, basestring, basevalue, cond, testvalue;\r\n    //\r\n    //     if (criteria == null) { // undefined (e.g., error value) is always false\r\n    //         return false;\r\n    //     }\r\n    //\r\n    //     criteria = criteria + \"\";\r\n    //     comparitor = criteria.charAt(0); // look for comparitor\r\n    //     if (comparitor == \"=\" || comparitor == \"<\" || comparitor == \">\") {\r\n    //         basestring = criteria.substring(1);\r\n    //     }\r\n    //     else {\r\n    //         comparitor = criteria.substring(0, 2);\r\n    //         if (comparitor == \"<=\" || comparitor == \"<>\" || comparitor == \">=\") {\r\n    //             basestring = criteria.substring(2);\r\n    //         }\r\n    //         else {\r\n    //             comparitor = \"none\";\r\n    //             basestring = criteria;\r\n    //         }\r\n    //     }\r\n    //\r\n    //     basevalue = SocialCalc.DetermineValueType(basestring); // get type of value being compared\r\n    //     if (!basevalue.type) { // no criteria base value given\r\n    //         if (comparitor == \"none\") { // blank criteria matches nothing\r\n    //             return false;\r\n    //         }\r\n    //         if (type.charAt(0) == \"b\") { // comparing to empty cell\r\n    //             if (comparitor == \"=\") { // empty equals empty\r\n    //                 return true;\r\n    //             }\r\n    //         }\r\n    //         else {\r\n    //             if (comparitor == \"<>\") { // \"something\" does not equal empty\r\n    //                 return true;\r\n    //             }\r\n    //         }\r\n    //         return false; // otherwise false\r\n    //     }\r\n    //\r\n    //     cond = false;\r\n    //\r\n    //     if (basevalue.type.charAt(0) == \"n\" && type.charAt(0) == \"t\") { // criteria is number, but value is text\r\n    //         testvalue = SocialCalc.DetermineValueType(value);\r\n    //         if (testvalue.type.charAt(0) == \"n\") { // could be number - make it one\r\n    //             value = testvalue.value;\r\n    //             type = testvalue.type;\r\n    //         }\r\n    //     }\r\n    //\r\n    //     if (type.charAt(0) == \"n\" && basevalue.type.charAt(0) == \"n\") { // compare two numbers\r\n    //         value = value - 0; // make sure numbers\r\n    //         basevalue.value = basevalue.value - 0;\r\n    //         switch (comparitor) {\r\n    //             case \"<\":\r\n    //                 cond = value < basevalue.value;\r\n    //                 break;\r\n    //\r\n    //             case \"<=\":\r\n    //                 cond = value <= basevalue.value;\r\n    //                 break;\r\n    //\r\n    //             case \"=\":\r\n    //             case \"none\":\r\n    //                 cond = value == basevalue.value;\r\n    //                 break;\r\n    //\r\n    //             case \">=\":\r\n    //                 cond = value >= basevalue.value;\r\n    //                 break;\r\n    //\r\n    //             case \">\":\r\n    //                 cond = value > basevalue.value;\r\n    //                 break;\r\n    //\r\n    //             case \"<>\":\r\n    //                 cond = value != basevalue.value;\r\n    //                 break;\r\n    //         }\r\n    //     }\r\n    //\r\n    //     else if (type.charAt(0) == \"e\") { // error on left\r\n    //         cond = false;\r\n    //     }\r\n    //\r\n    //     else if (basevalue.type.charAt(0) == \"e\") { // error on right\r\n    //         cond = false;\r\n    //     }\r\n    //\r\n    //     else { // text, maybe mixed with number or blank\r\n    //         if (type.charAt(0) == \"n\") {\r\n    //             value = SocialCalc.format_number_for_display(value, \"n\", \"\");\r\n    //         }\r\n    //         if (basevalue.type.charAt(0) == \"n\") {\r\n    //             return false; // if number and didn't match already, isn't a match\r\n    //         }\r\n    //\r\n    //         value = value ? value.toLowerCase() : \"\";\r\n    //         basevalue.value = basevalue.value ? basevalue.value.toLowerCase() : \"\";\r\n    //\r\n    //         switch (comparitor) {\r\n    //             case \"<\":\r\n    //                 cond = value < basevalue.value;\r\n    //                 break;\r\n    //\r\n    //             case \"<=\":\r\n    //                 cond = value <= basevalue.value;\r\n    //                 break;\r\n    //\r\n    //             case \"=\":\r\n    //                 cond = value == basevalue.value;\r\n    //                 break;\r\n    //\r\n    //             case \"none\":\r\n    //                 cond = value.substring(0, basevalue.value.length) == basevalue.value;\r\n    //                 break;\r\n    //\r\n    //             case \">=\":\r\n    //                 cond = value >= basevalue.value;\r\n    //                 break;\r\n    //\r\n    //             case \">\":\r\n    //                 cond = value > basevalue.value;\r\n    //                 break;\r\n    //\r\n    //             case \"<>\":\r\n    //                 cond = value != basevalue.value;\r\n    //                 break;\r\n    //         }\r\n    //     }\r\n    //\r\n    //     return cond;\r\n    //\r\n    // }\r\n}\r\n\r\nFormula.prototype.ParseFormulaIntoTokens = function (line) {\r\n    console.log(line)\r\n    var i, ch, chclass, haddecimal, last_token, last_token_type, last_token_text, t;\r\n\r\n    //var scf = SocialCalcFormula;\r\n    var scc = this.scc\r\n    var parsestate = this.ParseState;\r\n    var tokentype = this.TokenType;\r\n    var charclass = this.CharClass;\r\n    var charclasstable = this.CharClassTable;\r\n    var uppercasetable = this.UpperCaseTable; // much faster than toUpperCase function\r\n    var pushtoken = this.ParsePushToken;\r\n    var coordregex = /^\\$?[A-Z]{1,2}\\$?[1-9]\\d*$/i;\r\n\r\n    var parseinfo = [];\r\n    var str = \"\";\r\n    var state = 0;\r\n    var haddecimal = false;\r\n\r\n    for (i = 0; i <= line.length; i++) {\r\n        if (i < line.length) {\r\n            ch = line.charAt(i);\r\n            cclass = charclasstable[ch];\r\n        }\r\n        else {\r\n            ch = \"\";\r\n            cclass = charclass.eof;\r\n        }\r\n\r\n        if (state == parsestate.num) {\r\n            if (cclass == charclass.num) {\r\n                str += ch;\r\n            }\r\n            else if (cclass == charclass.numstart && !haddecimal) {\r\n                haddecimal = true;\r\n                str += ch;\r\n            }\r\n            else if (ch == \"E\" || ch == \"e\") {\r\n                str += ch;\r\n                haddecimal = false;\r\n                state = parsestate.numexp1;\r\n            }\r\n            else { // end of number - save it\r\n                pushtoken(parseinfo, str, tokentype.num, 0);\r\n                haddecimal = false;\r\n                state = 0;\r\n            }\r\n        }\r\n\r\n        if (state == parsestate.numexp1) {\r\n            if (cclass == parsestate.num) {\r\n                state = parsestate.numexp2;\r\n            }\r\n            else if ((ch == '+' || ch == '-') && (uppercasetable[str.charAt(str.length - 1)] == 'E')) {\r\n                str += ch;\r\n            }\r\n            else if (ch == 'E' || ch == 'e') {\r\n                ;\r\n            }\r\n            else {\r\n                pushtoken(parseinfo, this.s_parseerrexponent, tokentype.error, 0);\r\n                state = 0;\r\n            }\r\n        }\r\n\r\n        if (state == parsestate.numexp2) {\r\n            if (cclass == charclass.num) {\r\n                str += ch;\r\n            }\r\n            else { // end of number - save it\r\n                pushtoken(parseinfo, str, tokentype.num, 0);\r\n                state = 0;\r\n            }\r\n        }\r\n\r\n        if (state == parsestate.alpha) {\r\n            if (cclass == charclass.num) {\r\n                state = parsestate.coord;\r\n            }\r\n            else if (cclass == charclass.alpha || ch == \".\") { // alpha may be letters, numbers, \"_\", or \".\"\r\n                str += ch;\r\n            }\r\n            else if (cclass == charclass.incoord) {\r\n                state = parsestate.coord;\r\n            }\r\n            else if (cclass == charclass.op || cclass == charclass.numstart\r\n                || cclass == charclass.space || cclass == charclass.eof) {\r\n                pushtoken(parseinfo, str.toUpperCase(), tokentype.name, 0);\r\n                state = 0;\r\n            }\r\n            else {\r\n                pushtoken(parseinfo, scc.s_parseerrchar, tokentype.error, 0);\r\n                state = 0;\r\n            }\r\n        }\r\n\r\n        if (state == parsestate.coord) {\r\n            if (cclass == charclass.num) {\r\n                str += ch;\r\n            }\r\n            else if (cclass == charclass.incoord) {\r\n                str += ch;\r\n            }\r\n            else if (cclass == charclass.alpha) {\r\n                state = parsestate.alphanumeric;\r\n            }\r\n            else if (cclass == charclass.op || cclass == charclass.numstart ||\r\n                cclass == charclass.eof || cclass == charclass.space) {\r\n                if (coordregex.test(str)) {\r\n                    t = tokentype.coord;\r\n                }\r\n                else {\r\n                    t = tokentype.name;\r\n                }\r\n                pushtoken(parseinfo, str.toUpperCase(), t, 0);\r\n                state = 0;\r\n            }\r\n            else {\r\n                pushtoken(parseinfo, scc.s_parseerrchar, tokentype.error, 0);\r\n                state = 0;\r\n            }\r\n        }\r\n\r\n\r\n        if (state == parsestate.alphanumeric) {\r\n            if (cclass == charclass.num || cclass == charclass.alpha) {\r\n                str += ch;\r\n            }\r\n            else if (cclass == charclass.op || cclass == charclass.numstart\r\n                || cclass == charclass.space || cclass == charclass.eof) {\r\n                pushtoken(parseinfo, str.toUpperCase(), tokentype.name, 0);\r\n                state = 0;\r\n            }\r\n            else {\r\n                pushtoken(parseinfo, scc.s_parseerrchar, tokentype.error, 0);\r\n                state = 0;\r\n            }\r\n        }\r\n\r\n        if (state == parsestate.string) {\r\n            if (cclass == charclass.quote) {\r\n                state = parsestate.stringquote; // got quote in string: is it doubled (quote in string) or by itself (end of string)?\r\n            }\r\n            else if (cclass == charclass.eof) {\r\n                pushtoken(parseinfo, scc.s_parseerrstring, tokentype.error, 0);\r\n                state = 0;\r\n            }\r\n            else {\r\n                str += ch;\r\n            }\r\n        }\r\n        else if (state == parsestate.stringquote) { // note else if here\r\n            if (cclass == charclass.quote) {\r\n                str += '\"';\r\n                state = parsestate.string; // double quote: add one then continue getting string\r\n            }\r\n            else { // something else -- end of string\r\n                pushtoken(parseinfo, str, tokentype.string, 0);\r\n                state = 0; // drop through to process\r\n            }\r\n        }\r\n\r\n        else if (state == parsestate.specialvalue) { // special values like #REF!\r\n            if (str.charAt(str.length - 1) == \"!\") { // done - save value as a name\r\n                pushtoken(parseinfo, str, tokentype.name, 0);\r\n                state = 0; // drop through to process\r\n            }\r\n            else if (cclass == charclass.eof) {\r\n                pushtoken(parseinfo, scc.s_parseerrspecialvalue, tokentype.error, 0);\r\n                state = 0;\r\n            }\r\n            else {\r\n                str += ch;\r\n            }\r\n        }\r\n\r\n        if (state == 0) {\r\n            if (cclass == charclass.num) {\r\n                str = ch;\r\n                state = parsestate.num;\r\n            }\r\n            else if (cclass == charclass.numstart) {\r\n                str = ch;\r\n                haddecimal = true;\r\n                state = parsestate.num;\r\n            }\r\n            else if (cclass == charclass.alpha || cclass == charclass.incoord) {\r\n                str = ch;\r\n                state = parsestate.alpha;\r\n            }\r\n            else if (cclass == charclass.specialstart) {\r\n                str = ch;\r\n                state = parsestate.specialvalue;\r\n            }\r\n            else if (cclass == charclass.op) {\r\n                str = ch;\r\n                if (parseinfo.length > 0) {\r\n                    last_token = parseinfo[parseinfo.length - 1];\r\n                    last_token_type = last_token.type;\r\n                    last_token_text = last_token.text;\r\n                    if (last_token_type == charclass.op) {\r\n                        if (last_token_text == '<' || last_token_text == \">\") {\r\n                            str = last_token_text + str;\r\n                            parseinfo.pop();\r\n                            if (parseinfo.length > 0) {\r\n                                last_token = parseinfo[parseinfo.length - 1];\r\n                                last_token_type = last_token.type;\r\n                                last_token_text = last_token.text;\r\n                            }\r\n                            else {\r\n                                last_token_type = charclass.eof;\r\n                                last_token_text = \"EOF\";\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    last_token_type = charclass.eof;\r\n                    last_token_text = \"EOF\";\r\n                }\r\n                t = tokentype.op;\r\n                if ((parseinfo.length == 0)\r\n                    || (last_token_type == charclass.op && last_token_text != ')' && last_token_text != '%')) { // Unary operator\r\n                    if (str == '-') { // M is unary minus\r\n                        str = \"M\";\r\n                        ch = \"M\";\r\n                    }\r\n                    else if (str == '+') { // P is unary plus\r\n                        str = \"P\";\r\n                        ch = \"P\";\r\n                    }\r\n                    else if (str == ')' && last_token_text == '(') { // null arg list OK\r\n                        ;\r\n                    }\r\n                    else if (str != '(') { // binary-op open-paren OK, others no\r\n                        t = tokentype.error;\r\n                        str = this.s_parseerrtwoops;\r\n                    }\r\n                }\r\n                else if (str.length > 1) {\r\n                    if (str == '>=') { // G is >=\r\n                        str = \"G\";\r\n                        ch = \"G\";\r\n                    }\r\n                    else if (str == '<=') { // L is <=\r\n                        str = \"L\";\r\n                        ch = \"L\";\r\n                    }\r\n                    else if (str == '<>') { // N is <>\r\n                        str = \"N\";\r\n                        ch = \"N\";\r\n                    }\r\n                    else {\r\n                        t = tokentype.error;\r\n                        str = scc.s_parseerrtwoops;\r\n                    }\r\n                }\r\n                pushtoken(parseinfo, str, t, ch);\r\n                state = 0;\r\n            }\r\n            else if (cclass == charclass.quote) { // starting a string\r\n                str = \"\";\r\n                state = parsestate.string;\r\n            }\r\n            else if (cclass == charclass.space) { // store so can reconstruct spacing\r\n                pushtoken(parseinfo, \" \", tokentype.space, 0);\r\n            }\r\n            else if (cclass == charclass.eof) { // ignore -- needed to have extra loop to close out other things\r\n            }\r\n            else { // unknown class - such as unknown char\r\n                pushtoken(parseinfo, scc.s_parseerrchar, tokentype.error, 0);\r\n            }\r\n        }\r\n    }\r\n    return parseinfo;\r\n\r\n}\r\nFormula.prototype.ParsePushToken = function (parseinfo, ttext, ttype, topcode) {\r\n\r\n    parseinfo.push({text: ttext, type: ttype, opcode: topcode});\r\n\r\n}\r\n\r\nFormula.prototype.evaluate_parsed_formula = function(parseinfo,allowrangereturn) {\r\n\r\n    var result;\r\n\r\n    var scf = this\r\n    var tokentype = scf.TokenType;\r\n\r\n    var revpolish;\r\n    var parsestack = [];\r\n\r\n    var errortext = \"\";\r\n    console.log(parseinfo)\r\n    revpolish = this.ConvertInfixToPolish(parseinfo); // result is either an array or a string with error text\r\n    console.log(revpolish)\r\n    result = this.EvaluatePolish(parseinfo, revpolish, allowrangereturn);\r\n    console.log(result)\r\n    return result;\r\n\r\n}\r\nFormula.prototype.ConvertInfixToPolish = function(parseinfo) {\r\n\r\n    var scf = this\r\n    var scc = this.Constants;\r\n    var tokentype = scf.TokenType;\r\n    var token_precedence = scf.TokenPrecedence;\r\n\r\n    var revpolish = [];\r\n    var parsestack = [];\r\n\r\n    var errortext = \"\";\r\n\r\n    var function_start = -1;\r\n\r\n    var i, pii, ttype, ttext, tprecedence, tstackprecedence;\r\n\r\n    for (i=0; i<parseinfo.length; i++) {\r\n        pii = parseinfo[i];\r\n        ttype = pii.type;\r\n        ttext = pii.text;\r\n        if (ttype == tokentype.num || ttype == tokentype.coord || ttype == tokentype.string) {\r\n            revpolish.push(i);\r\n        }\r\n        else if (ttype == tokentype.name) {\r\n            parsestack.push(i);\r\n            revpolish.push(function_start);\r\n        }\r\n        else if (ttype == tokentype.space) { // ignore\r\n            continue;\r\n        }\r\n        else if (ttext == ',') {\r\n            while (parsestack.length && parseinfo[parsestack[parsestack.length-1]].text != \"(\") {\r\n                revpolish.push(parsestack.pop());\r\n            }\r\n            if (parsestack.length == 0) { // no ( -- error\r\n                errortext = scc.s_parseerrmissingopenparen;\r\n                break;\r\n            }\r\n        }\r\n        else if (ttext == '(') {\r\n            parsestack.push(i);\r\n        }\r\n        else if (ttext == ')') {\r\n            while (parsestack.length && parseinfo[parsestack[parsestack.length-1]].text != \"(\") {\r\n                revpolish.push(parsestack.pop());\r\n            }\r\n            if (parsestack.length == 0) { // no ( -- error\r\n                errortext = scc.s_parseerrcloseparennoopen;\r\n                break;\r\n            }\r\n            parsestack.pop();\r\n            if (parsestack.length && parseinfo[parsestack[parsestack.length-1]].type == tokentype.name) {\r\n                revpolish.push(parsestack.pop());\r\n            }\r\n        }\r\n        else if (ttype == tokentype.op) {\r\n            if (parsestack.length && parseinfo[parsestack[parsestack.length-1]].type == tokentype.name) {\r\n                revpolish.push(parsestack.pop());\r\n            }\r\n            while (parsestack.length && parseinfo[parsestack[parsestack.length-1]].type == tokentype.op\r\n            && parseinfo[parsestack[parsestack.length-1]].text != '(') {\r\n                tprecedence = token_precedence[pii.opcode];\r\n                tstackprecedence = token_precedence[parseinfo[parsestack[parsestack.length-1]].opcode];\r\n                if (tprecedence >= 0 && tprecedence < tstackprecedence) {\r\n                    break;\r\n                }\r\n                else if (tprecedence < 0) {\r\n                    tprecedence = -tprecedence;\r\n                    if (tstackprecedence < 0) tstackprecedence = -tstackprecedence;\r\n                    if (tprecedence <= tstackprecedence) {\r\n                        break;\r\n                    }\r\n                }\r\n                revpolish.push(parsestack.pop());\r\n            }\r\n            parsestack.push(i);\r\n        }\r\n        else if (ttype == tokentype.error) {\r\n            errortext = ttext;\r\n            break;\r\n        }\r\n        else {\r\n            errortext = \"Internal error while processing parsed formula. \";\r\n            break;\r\n        }\r\n    }\r\n    while (parsestack.length>0) {\r\n        if (parseinfo[parsestack[parsestack.length-1]].text == '(') {\r\n            errortext = scc.s_parseerrmissingcloseparen;\r\n            break;\r\n        }\r\n        revpolish.push(parsestack.pop());\r\n    }\r\n\r\n    if (errortext) {\r\n        return errortext;\r\n    }\r\n\r\n    return revpolish;\r\n\r\n}\r\nFormula.prototype.EvaluatePolish = function(parseinfo, revpolish, allowrangereturn) {\r\n\r\n    var scf = this\r\n    var scc = this.scc\r\n    var tokentype = this.TokenType\r\n    var lookup_result_type = this.LookupResultType\r\n    var typelookup = this.TypeLookupTable\r\n\r\n    var operand_as_text = this.OperandAsText\r\n    var operand_value_and_type = this.OperandValueAndType\r\n    var operands_as_coord_on_sheet = this.OperandsAsCoordOnSheet\r\n    //var format_number_for_display = SocialCalc.format_number_for_display || function(v, t, f) {return v+\"\";};\r\n\r\n    var errortext = \"\";\r\n    var function_start = -1;\r\n    var missingOperandError = {value: \"\", type: \"e#VALUE!\"}//error: scc.s_parseerrmissingoperand};\r\n\r\n    var operand = [];\r\n    var PushOperand = function(t, v) {operand.push({type: t, value: v});};\r\n\r\n    var i, rii, prii, ttype, ttext, value1, value2, tostype, tostype2, resulttype, valuetype, cond, vmatch, smatch;\r\n\r\n    if (!parseinfo.length || (! (revpolish instanceof Array))) {\r\n        return ({value: \"\", type: \"e#VALUE!\", error: (typeof revpolish == \"string\" ? revpolish : \"\")});\r\n    }\r\n\r\n    for (i=0; i<revpolish.length; i++) {\r\n        rii = revpolish[i];\r\n        if (rii == function_start) { // Remember the start of a function argument list\r\n            PushOperand(\"start\", 0);\r\n            continue;\r\n        }\r\n\r\n        prii = parseinfo[rii];\r\n        ttype = prii.type;\r\n        ttext = prii.text;\r\n\r\n        if (ttype == tokentype.num) {\r\n            PushOperand(\"n\", ttext-0);\r\n        }\r\n\r\n        // else if (ttype == tokentype.coord) {\r\n        //     PushOperand(\"coord\", ttext);\r\n        // }\r\n\r\n        // else if (ttype == tokentype.string) {\r\n        //     PushOperand(\"t\", ttext);\r\n        // }\r\n\r\n        else if (ttype == tokentype.op) {\r\n            if (operand.length <= 0) { // Nothing on the stack...\r\n                return missingOperandError;\r\n                break; // done\r\n            }\r\n\r\n            // Unary minus\r\n\r\n            if (ttext == 'M') {\r\n                value1 = this.OperandAsNumber( operand);\r\n                resulttype = this.LookupResultType(value1.type, value1.type, typelookup.unaryminus);\r\n                PushOperand(resulttype, -value1.value);\r\n            }\r\n\r\n            // Unary plus\r\n\r\n            else if (ttext == 'P') {\r\n                value1 = this.OperandAsNumber( operand);\r\n                resulttype = this.LookupResultType(value1.type, value1.type, typelookup.unaryplus);\r\n                PushOperand(resulttype, value1.value);\r\n            }\r\n\r\n            // Unary % - percent, left associative\r\n\r\n            else if (ttext == '%') {\r\n                value1 = this.OperandAsNumber(operand);\r\n                resulttype = this.LookupResultType(value1.type, value1.type, typelookup.unarypercent);\r\n                PushOperand(resulttype, 0.01*value1.value);\r\n            }\r\n\r\n            // & - string concatenate\r\n\r\n            // else if (ttext == '&') {\r\n            //     if (operand.length <= 1) { // Need at least two things on the stack...\r\n            //         return missingOperandError;\r\n            //     }\r\n            //     value2 = operand_as_text( operand);\r\n            //     value1 = operand_as_text(operand);\r\n            //     resulttype = this.LookupResultType(value1.type, value1.type, typelookup.concat);\r\n            //     PushOperand(resulttype, value1.value + value2.value);\r\n            // }\r\n\r\n            // : - Range constructor\r\n\r\n            // else if (ttext == ':') {\r\n            //     if (operand.length <= 1) { // Need at least two things on the stack...\r\n            //         return missingOperandError;\r\n            //     }\r\n            //     value1 = scf.OperandsAsRangeOnSheet( operand); // get coords even if use name on other sheet\r\n            //     if (value1.error) { // not available\r\n            //         errortext = errortext || value1.error;\r\n            //     }\r\n            //     PushOperand(value1.type, value1.value); // push sheetname with range on that sheet\r\n            // }\r\n\r\n            // ! - sheetname!coord\r\n\r\n            // else if (ttext == '!') {\r\n            //     if (operand.length <= 1) { // Need at least two things on the stack...\r\n            //         return missingOperandError;\r\n            //     }\r\n            //     value1 = operands_as_coord_on_sheet( operand); // get coord even if name on other sheet\r\n            //     if (value1.error) { // not available\r\n            //         errortext = errortext || value1.error;\r\n            //     }\r\n            //     PushOperand(value1.type, value1.value); // push sheetname with coord or range on that sheet\r\n            // }\r\n\r\n            // Comparison operators: < L = G > N (< <= = >= > <>)\r\n\r\n            else if (ttext == \"<\" || ttext == \"L\" || ttext == \"=\" || ttext == \"G\" || ttext == \">\" || ttext == \"N\") {\r\n                if (operand.length <= 1) { // Need at least two things on the stack...\r\n                    errortext = scc.s_parseerrmissingoperand; // remember error\r\n                    break;\r\n                }\r\n                value2 = operand_value_and_type( operand);\r\n                value1 = operand_value_and_type( operand);\r\n                if (value1.type.charAt(0) == \"n\" && value2.type.charAt(0) == \"n\") { // compare two numbers\r\n                    cond = 0;\r\n                    if (ttext == \"<\") { cond = value1.value < value2.value ? 1 : 0; }\r\n                    else if (ttext == \"L\") { cond = value1.value <= value2.value ? 1 : 0; }\r\n                    else if (ttext == \"=\") { cond = value1.value == value2.value ? 1 : 0; }\r\n                    else if (ttext == \"G\") { cond = value1.value >= value2.value ? 1 : 0; }\r\n                    else if (ttext == \">\") { cond = value1.value > value2.value ? 1 : 0; }\r\n                    else if (ttext == \"N\") { cond = value1.value != value2.value ? 1 : 0; }\r\n                    PushOperand(\"nl\", cond);\r\n                }\r\n                else if (value1.type.charAt(0) == \"e\") { // error on left\r\n                    PushOperand(value1.type, 0);\r\n                }\r\n                else if (value2.type.charAt(0) == \"e\") { // error on right\r\n                    PushOperand(value2.type, 0);\r\n                }\r\n                else { // text maybe mixed with numbers or blank\r\n                    tostype = value1.type.charAt(0);\r\n                    tostype2 = value2.type.charAt(0);\r\n                    if (tostype == \"n\") {\r\n                        value1.value = format_number_for_display(value1.value, \"n\", \"\");\r\n                    }\r\n                    else if (tostype == \"b\") {\r\n                        value1.value = \"\";\r\n                    }\r\n                    if (tostype2 == \"n\") {\r\n                        value2.value = format_number_for_display(value2.value, \"n\", \"\");\r\n                    }\r\n                    else if (tostype2 == \"b\") {\r\n                        value2.value = \"\";\r\n                    }\r\n                    cond = 0;\r\n                    value1.value = value1.value.toLowerCase(); // ignore case\r\n                    value2.value = value2.value.toLowerCase();\r\n                    if (ttext == \"<\") { cond = value1.value < value2.value ? 1 : 0; }\r\n                    else if (ttext == \"L\") { cond = value1.value <= value2.value ? 1 : 0; }\r\n                    else if (ttext == \"=\") { cond = value1.value == value2.value ? 1 : 0; }\r\n                    else if (ttext == \"G\") { cond = value1.value >= value2.value ? 1 : 0; }\r\n                    else if (ttext == \">\") { cond = value1.value > value2.value ? 1 : 0; }\r\n                    else if (ttext == \"N\") { cond = value1.value != value2.value ? 1 : 0; }\r\n                    PushOperand(\"nl\", cond);\r\n                }\r\n            }\r\n\r\n            // Normal infix arithmethic operators: +, -. *, /, ^\r\n\r\n            else { // what's left are the normal infix arithmetic operators\r\n                if (operand.length <= 1) { // Need at least two things on the stack...\r\n                    errortext = scc.s_parseerrmissingoperand; // remember error\r\n                    break;\r\n                }\r\n                value2 = this.OperandAsNumber( operand);\r\n                value1 = this.OperandAsNumber( operand);\r\n                if (ttext == '+') {\r\n                    resulttype = lookup_result_type(value1.type, value2.type, typelookup.plus);\r\n                    PushOperand(resulttype, value1.value + value2.value);\r\n                }\r\n                else if (ttext == '-') {\r\n                    resulttype = lookup_result_type(value1.type, value2.type, typelookup.plus);\r\n                    PushOperand(resulttype, value1.value - value2.value);\r\n                }\r\n                else if (ttext == '*') {\r\n                    resulttype = lookup_result_type(value1.type, value2.type, typelookup.plus);\r\n                    PushOperand(resulttype, value1.value * value2.value);\r\n                }\r\n                else if (ttext == '/') {\r\n                    if (value2.value != 0) {\r\n                        PushOperand(\"n\", value1.value / value2.value); // gives plain numeric result type\r\n                    }\r\n                    else {\r\n                        PushOperand(\"e#DIV/0!\", 0);\r\n                    }\r\n                }\r\n                else if (ttext == '^') {\r\n                    value1.value = Math.pow(value1.value, value2.value);\r\n                    value1.type = \"n\"; // gives plain numeric result type\r\n                    if (isNaN(value1.value)) {\r\n                        value1.value = 0;\r\n                        value1.type = \"e#NUM!\";\r\n                    }\r\n                    PushOperand(value1.type, value1.value);\r\n                }\r\n            }\r\n        }\r\n\r\n        // function or name\r\n\r\n        else if (ttype == tokentype.name) {\r\n            errortext = scf.CalculateFunction(ttext, operand);\r\n            if (errortext) break;\r\n        }\r\n\r\n        // else {\r\n        //     errortext = scc.s_InternalError+\"Unknown token \"+ttype+\" (\"+ttext+\"). \";\r\n        //     break;\r\n        // }\r\n    }\r\n\r\n    // look at final value and handle special cases\r\n\r\n    value = operand[0] ? operand[0].value : \"\";\r\n    tostype = operand[0] ? operand[0].type : \"\";\r\n\r\n    // if (tostype == \"name\") { // name - expand it\r\n    //     value1 = SocialCalcFormula.LookupName(sheet, value);\r\n    //     value = value1.value;\r\n    //     tostype = value1.type;\r\n    //     errortext = errortext || value1.error;\r\n    // }\r\n\r\n    // if (tostype == \"coord\") { // the value is a coord reference, get its value and type\r\n    //     value1 = operand_value_and_type(sheet, operand);\r\n    //     value = value1.value;\r\n    //     tostype = value1.type;\r\n    //     if (tostype == \"b\") {\r\n    //         tostype = \"n\";\r\n    //         value = 0;\r\n    //     }\r\n    // }\r\n\r\n    if (operand.length > 1 && !errortext) { // something left - error\r\n        errortext += scc.s_parseerrerrorinformula;\r\n    }\r\n\r\n    // set return type\r\n\r\n    valuetype = tostype;\r\n\r\n    if (tostype.charAt(0) == \"e\") { // error value\r\n        errortext = errortext || tostype.substring(1) || scc.s_calcerrerrorvalueinformula;\r\n    }\r\n    else if (tostype == \"range\") {\r\n        vmatch = value.match(/^(.*)\\|(.*)\\|/);\r\n        smatch = vmatch[1].indexOf(\"!\");\r\n        if (smatch>=0) { // swap sheetname\r\n            vmatch[1] = vmatch[1].substring(smatch+1) + \"!\" + vmatch[1].substring(0, smatch).toUpperCase();\r\n        }\r\n        else {\r\n            vmatch[1] = vmatch[1].toUpperCase();\r\n        }\r\n        value = vmatch[1] + \":\" + vmatch[2].toUpperCase();\r\n        if (!allowrangereturn) {\r\n            errortext = scc.s_formularangeresult+\" \"+value;\r\n        }\r\n    }\r\n\r\n    if (errortext && valuetype.charAt(0) != \"e\") {\r\n        value = errortext;\r\n        valuetype = \"e\";\r\n    }\r\n\r\n    // look for overflow\r\n\r\n    if (valuetype.charAt(0) == \"n\" && (isNaN(value) || !isFinite(value))) {\r\n        value = 0;\r\n        valuetype = \"e#NUM!\";\r\n        errortext = isNaN(value) ? scc.s_calcerrnumericnan: scc.s_calcerrnumericoverflow;\r\n    }\r\n\r\n    return ({value: value, type: valuetype, error: errortext});\r\n\r\n}\r\n\r\nFormula.prototype.LookupResultType = function(type1, type2, typelookup) {\r\n\r\n    var pos1, pos2, result;\r\n\r\n    var table1 = typelookup[type1];\r\n\r\n    if (!table1) {\r\n        table1 = typelookup[type1.charAt(0)+'*'];\r\n        if (!table1) {\r\n            return \"e#VALUE! (internal error, missing LookupResultType \"+type1.charAt(0)+\"*)\"; // missing from table -- please add it\r\n        }\r\n    }\r\n    pos1 = table1.indexOf(\"|\"+type2+\":\");\r\n    if (pos1 >= 0) {\r\n        pos2 = table1.indexOf(\"|\", pos1+1);\r\n        if (pos2<0) return \"e#VALUE! (internal error, incorrect LookupResultType \"+table1+\")\";\r\n        result = table1.substring(pos1+type2.length+2, pos2);\r\n        if (result == \"1\") return type1;\r\n        if (result == \"2\") return type2;\r\n        return result;\r\n    }\r\n    pos1 = table1.indexOf(\"|\"+type2.charAt(0)+\"*:\");\r\n    if (pos1 >= 0) {\r\n        pos2 = table1.indexOf(\"|\", pos1+1);\r\n        if (pos2<0) return \"e#VALUE! (internal error, incorrect LookupResultType \"+table1+\")\";\r\n        result = table1.substring(pos1+4, pos2);\r\n        if (result == \"1\") return type1;\r\n        if (result == \"2\") return type2;\r\n        return result;\r\n    }\r\n    return \"e#VALUE!\";\r\n\r\n}\r\n\r\nFormula.prototype.OperandAsNumber = function(operand) {\r\n\r\n    var t, valueinfo;\r\n    var operandinfo = this.OperandValueAndType(operand)\r\n\r\n    t = operandinfo.type.charAt(0);\r\n\r\n    if (t == \"n\") {\r\n        operandinfo.value = operandinfo.value-0;\r\n    }\r\n    else if (t == \"b\") { // blank cell\r\n        operandinfo.type = \"n\";\r\n        operandinfo.value = 0;\r\n    }\r\n    else if (t == \"e\") { // error\r\n        operandinfo.value = 0;\r\n    }\r\n    else {\r\n        valueinfo = SocialCalc.DetermineValueType ? SocialCalc.DetermineValueType(operandinfo.value) :\r\n            {value: operandinfo.value-0, type: \"n\"}; // if without rest of SocialCalc\r\n        if (valueinfo.type.charAt(0) == \"n\") {\r\n            operandinfo.value = valueinfo.value-0;\r\n            operandinfo.type = valueinfo.type;\r\n        }\r\n        else {\r\n            operandinfo.value = 0;\r\n            operandinfo.type = valueinfo.type;\r\n        }\r\n    }\r\n\r\n    return operandinfo;\r\n\r\n}\r\nFormula.prototype.OperandValueAndType = function(operand) {\r\n    console.log(operand)\r\n    console.log('a')\r\n    var cellvtype, cell, pos, coordsheet;\r\n    var scf = this;\r\n\r\n    var result = {type: \"\", value: \"\"};\r\n\r\n    var stacklen = operand.length;\r\n\r\n    if (!stacklen) { // make sure something is there\r\n        //result.error = SocialCalc.Constants.s_InternalError+\"no operand on stack\";\r\n        return result;\r\n    }\r\n\r\n    result.value = operand[stacklen-1].value; // get top of stack\r\n    result.type = operand[stacklen-1].type;\r\n    operand.pop(); // we have data - pop stack\r\n\r\n    // if (result.type == \"name\") {\r\n    //     result = scf.LookupName( result.value);\r\n    // }\r\n    //\r\n    // if (result.type == \"range\") {\r\n    //     result = scf.StepThroughRangeDown(operand, result.value);\r\n    // }\r\n    //\r\n    // if (result.type == \"coord\") { // value is a coord reference\r\n    //     coordsheet = sheet;\r\n    //     pos = result.value.indexOf(\"!\");\r\n    //     if (pos != -1) { // sheet reference\r\n    //         coordsheet = scf.FindInSheetCache(result.value.substring(pos+1)); // get other sheet\r\n    //         if (coordsheet == null) { // unavailable\r\n    //             result.type = \"e#REF!\";\r\n    //             result.error = SocialCalc.Constants.s_sheetunavailable+\" \"+result.value.substring(pos+1);\r\n    //             result.value = 0;\r\n    //             return result;\r\n    //         }\r\n    //         result.value = result.value.substring(0, pos); // get coord part\r\n    //     }\r\n    //\r\n    //     if (coordsheet) {\r\n    //         cell = coordsheet.cells[SocialCalcFormula.PlainCoord(result.value)];\r\n    //         if (cell) {\r\n    //             cellvtype = cell.valuetype; // get type of value in the cell it points to\r\n    //             result.value = cell.datavalue;\r\n    //         }\r\n    //         else {\r\n    //             cellvtype = \"b\";\r\n    //         }\r\n    //     }\r\n    //     else {\r\n    //         cellvtype = \"e#N/A\";\r\n    //         result.value = 0;\r\n    //     }\r\n    //     result.type = cellvtype || \"b\";\r\n    //     if (result.type == \"b\") { // blank\r\n    //         result.value = 0;\r\n    //     }\r\n    // }\r\n\r\n    return result;\r\n\r\n}\r\nFormula.prototype.CalculateFunction = function(fname, operand) {\r\n    console.log(fname)\r\n    var fobj, foperand, ffunc, argnum, ttext;\r\n    var scf = this\r\n    var ok = 1;\r\n    var errortext = \"\";\r\n\r\n    fobj = scf.FunctionList[fname];\r\n\r\n    if (fobj) {\r\n        foperand = [];\r\n        ffunc = fobj[0];\r\n        argnum = fobj[1];\r\n        scf.CopyFunctionArgs(operand, foperand);\r\n        if (argnum != 100) {\r\n            if (argnum < 0) {\r\n                if (foperand.length < -argnum) {\r\n                    errortext = scf.FunctionArgsError(fname, operand);\r\n                    return errortext;\r\n                }\r\n            }\r\n            else {\r\n                if (foperand.length != argnum) {\r\n                    errortext = scf.FunctionArgsError(fname, operand);\r\n                    return errortext;\r\n                }\r\n            }\r\n        }\r\n        errortext = ffunc(fname, operand, foperand);\r\n    }\r\n\r\n    else {\r\n        ttext = fname;\r\n\r\n        if (operand.length && operand[operand.length-1].type == \"start\") { // no arguments - name or zero arg function\r\n            operand.pop();\r\n            scf.PushOperand(operand, \"name\", ttext);\r\n        }\r\n\r\n        else {\r\n            errortext = SocialCalc.Constants.s_sheetfuncunknownfunction+\" \" + ttext +\". \";\r\n        }\r\n    }\r\n\r\n    return errortext;\r\n\r\n}\r\nFormula.prototype.CopyFunctionArgs = function(operand, foperand) {\r\n\r\n    var fobj, foperand, ffunc, argnum;\r\n    var scf = this\r\n    var ok = 1;\r\n    var errortext = null;\r\n\r\n    while (operand.length>0 && operand[operand.length-1].type != \"start\") { // get each arg\r\n        foperand.push(operand.pop()); // copy it\r\n    }\r\n    operand.pop(); // get rid of \"start\"\r\n\r\n    return;\r\n\r\n}\r\nFormula.prototype.FunctionArgsError = function(fname, operand) {\r\n\r\n    var errortext = this.scc.s_calcerrincorrectargstofunction+\" \" + fname + \". \";\r\n    this.PushOperand(operand, \"e#VALUE!\", errortext);\r\n\r\n    return errortext;\r\n\r\n}\r\nFormula.prototype.DecodeRangeParts = function(sheetdata, range) {\r\n\r\n    var value1, value2, pos1, pos2, sheet1, coordsheetdata, rp;\r\n\r\n    var scf = SocialCalc.Formula;\r\n\r\n    pos1 = range.indexOf(\"|\");\r\n    pos2 = range.indexOf(\"|\", pos1+1);\r\n    value1 = range.substring(0, pos1);\r\n    value2 = range.substring(pos1+1, pos2);\r\n\r\n    pos1 = value1.indexOf(\"!\");\r\n    if (pos1 != -1) {\r\n        sheet1 = value1.substring(pos1+1);\r\n        value1 = value1.substring(0, pos1);\r\n    }\r\n    else {\r\n        sheet1 = \"\";\r\n    }\r\n    pos1 = value2.indexOf(\"!\");\r\n    if (pos1 != -1) {\r\n        value2 = value2.substring(0, pos1);\r\n    }\r\n\r\n    coordsheetdata = sheetdata;\r\n    if (sheet1) { // sheet reference\r\n        coordsheetdata = scf.FindInSheetCache(sheet1);\r\n        if (coordsheetdata == null) { // unavailable\r\n            return null;\r\n        }\r\n    }\r\n\r\n    rp = scf.OrderRangeParts(value1, value2);\r\n\r\n    return {sheetdata: coordsheetdata, sheetname: sheet1, col1num: rp.c1, ncols: rp.c2-rp.c1+1, row1num: rp.r1, nrows: rp.r2-rp.r1+1}\r\n\r\n}\r\n\r\nmodule.exports.Formula = Formula\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/Formula.js\n// module id = 6\n// module chunks = 0","/**\r\n 工具栏绑定事件\r\n */\r\n\r\nvar ToolEventHandlerModule = require('ToolEventHandler')\r\nvar ToolEventHandler = ToolEventHandlerModule.ToolEventHandler\r\nvar toolEventHandler = null\r\n\r\nvar SheetEventHandlerModule = require('SheetEventHandler')\r\nvar SheetEventHandler = SheetEventHandlerModule.SheetEventHandler\r\nvar sheetEventHandler = null\r\n\r\n\r\nvar ToolEventBinder = function (sheet) {\r\n    this.sheet = sheet\r\n    sheetEventHandler = new SheetEventHandler(sheet)\r\n    this.sheet.colorOrBackgroudcolor = null\r\n    toolEventHandler = new ToolEventHandler(sheet)\r\n}\r\nToolEventBinder.prototype.buttonClick = function (action) {\r\n    toolEventHandler.buttonClick(action)\r\n}\r\nToolEventBinder.prototype.initFontFamily = function (fontFamilySelect) {\r\n    var toolEventBinder = this\r\n    fontFamilySelect.onchange = function () {\r\n        toolEventBinder.sheet.setAttr('font', fontFamilySelect.value)\r\n        toolEventBinder.sheet.render()\r\n        fontFamilySelect.value = 'fontFamily'\r\n    }\r\n}\r\nToolEventBinder.prototype.initFontSize = function (fontSizeSelect) {\r\n    var toolEventBinder = this\r\n    fontSizeSelect.onchange = function () {\r\n        //todo\r\n        //switch\r\n        toolEventBinder.sheet.setAttr('fontSize', fontSizeSelect.value)\r\n        toolEventBinder.sheet.render()\r\n        fontSizeSelect.value = 'fontSize'\r\n    }\r\n}\r\nToolEventBinder.prototype.initFontWeight = function (fontWeightDiv) {\r\n    var toolEventBinder = this\r\n    fontWeightDiv.onclick = function () {\r\n        var lastCellId = toolEventBinder.sheet.lastCellid\r\n        if (!toolEventBinder.sheet.cells[lastCellId]) {\r\n            toolEventBinder.sheet.setAttr('bold', true)\r\n        }\r\n        toolEventBinder.sheet.setAttr('bold', !toolEventBinder.sheet.cells[lastCellId].bold)\r\n        toolEventBinder.sheet.render()\r\n    }\r\n}\r\nToolEventBinder.prototype.initFontStyle = function (fontStyleDiv) {\r\n    var toolEventBinder = this\r\n    fontStyleDiv.onclick = function () {\r\n        var lastCellId = toolEventBinder.sheet.lastCellid\r\n        if (!toolEventBinder.sheet.cells[lastCellId]) {\r\n            toolEventBinder.sheet.setAttr('italic', true)\r\n        }\r\n        toolEventBinder.sheet.setAttr('italic', !toolEventBinder.sheet.cells[lastCellId].italic)\r\n        toolEventBinder.sheet.render()\r\n    }\r\n}\r\nToolEventBinder.prototype.initColor = function (colorDiv) {\r\n    var toolEventBinder = this\r\n    colorDiv.onclick = function () {\r\n        var colorSelectDiv = document.getElementById('colorSelect')\r\n        if (colorSelectDiv.style.display === 'none' || toolEventBinder.fontType === 'backgroundColor') {\r\n            toolEventBinder.colorOrBackgroudcolor = 'foregroundColor'\r\n            colorSelectDiv.style.display = 'block'\r\n            var left = this.offsetLeft\r\n            var top = this.offsetTop\r\n            colorSelectDiv.style.top = top + 18 + 'px'\r\n            colorSelectDiv.style.left = left + 'px'\r\n        } else {\r\n            colorSelectDiv.style.display = 'none'\r\n        }\r\n\r\n    }\r\n}\r\nToolEventBinder.prototype.initBackgroundColor = function (backgroundColorDiv) {\r\n    var toolEventBinder = this\r\n    backgroundColorDiv.onclick = function () {\r\n        var colorSelectDiv = document.getElementById('colorSelect')\r\n        if (colorSelectDiv.style.display === 'none' || toolEventBinder.fontType === 'foregroundColor') {\r\n            toolEventBinder.colorOrBackgroudcolor = 'backgroundColor'\r\n            colorSelectDiv.style.display = 'block'\r\n            var left = this.offsetLeft\r\n            var top = this.offsetTop\r\n            colorSelectDiv.style.top = top + 18 + 'px'\r\n            colorSelectDiv.style.left = left + 'px'\r\n        } else {\r\n            colorSelectDiv.style.display = 'none'\r\n        }\r\n    }\r\n}\r\nToolEventBinder.prototype.initColorSelect = function (td) {\r\n    var toolEventBinder = this\r\n    td.onclick = function () {\r\n        document.getElementById('colorSelect').style.display = 'none'\r\n        toolEventBinder.sheet.setAttr(toolEventBinder.colorOrBackgroudcolor, this.style.backgroundColor)\r\n        toolEventBinder.sheet.render()\r\n\r\n    }\r\n}\r\nToolEventBinder.prototype.initMerge = function (mergeDiv, value) {\r\n    var toolEventBinder = this\r\n    mergeDiv.onclick = function () {\r\n        sheetEventHandler.setCellBackgroundColor('#fff')\r\n        toolEventBinder.sheet.setAttr('merge', value)\r\n        toolEventBinder.sheet.render()\r\n        sheetEventHandler.mouseDown(toolEventBinder.sheet.firstCellid)\r\n        sheetEventHandler.mouseUp(document.getElementById(toolEventBinder.sheet.lastCellid))\r\n    }\r\n}\r\n\r\nToolEventBinder.prototype.initFontBorder = function (value) {\r\n    var toolEventBinder = this\r\n    switch (value) {\r\n        case 'left':\r\n            toolEventBinder.sheet.setAttr('leftFrame', true)\r\n\r\n            break\r\n        case 'top':\r\n            toolEventBinder.sheet.setAttr('topFrame', true)\r\n            break\r\n        case 'right':\r\n            toolEventBinder.sheet.setAttr('rightFrame', true)\r\n            break\r\n        case 'bottom':\r\n            toolEventBinder.sheet.setAttr('bottomFrame', true)\r\n            break\r\n        case 'clear':\r\n            toolEventBinder.sheet.setAttr('allFrameEx', false)\r\n            break\r\n        case 'outer':\r\n            toolEventBinder.sheet.setAttr('leftFrame', true)\r\n            toolEventBinder.sheet.setAttr('topFrame', true)\r\n            toolEventBinder.sheet.setAttr('rightFrame', true)\r\n            toolEventBinder.sheet.setAttr('bottomFrame', true)\r\n            break\r\n        case 'all':\r\n            toolEventBinder.sheet.setAttr('allFrameEx', true)\r\n            break\r\n    }\r\n    toolEventBinder.sheet.render()\r\n}\r\n\r\nToolEventBinder.prototype.initTextAlign = function (value) {\r\n    var toolEventBinder = this\r\n    toolEventBinder.sheet.setAttr('alignment', value)\r\n    toolEventBinder.sheet.render()\r\n}\r\nToolEventBinder.prototype.initFileInput = function (fileInput) {\r\n    fileInput.onchange = function () {\r\n        var ajax\r\n        if (window.XMLHttpRequest) {\r\n            ajax = new XMLHttpRequest()\r\n        } else if (window.ActiveXObject) {\r\n            ajax = new window.ActiveXObject()\r\n        } else {\r\n            alert(\"请升级至最新版本的浏览器\")\r\n        }\r\n        if (ajax !== null) {\r\n            ajax.open(\"GET\", \"json.json\", true)\r\n            ajax.send(null)\r\n            ajax.onreadystatechange = function () {\r\n                if (ajax.readyState === 4 && ajax.status === 200) {\r\n                    var CellList = JSON.parse(ajax.responseText)\r\n                    CellList.forEach(function (e) {\r\n                        for (var key in e) {\r\n                            cellRender.renderCell(e['cellName'], key, e[key])\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nmodule.exports.ToolEventBinder = ToolEventBinder\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/ToolEventBinder.js\n// module id = 7\n// module chunks = 0","/**\r\n * 整体工作管理对象\r\n * @constructor\r\n */\r\nvar config = require('config')\r\nvar WSManager = function () {\r\n}\r\n\r\nWSManager.prototype.init = function (parentNode) {\r\n\r\n\t//实例化初始化Tool对象\r\n\tvar ToolModule = require('Tool')\r\n\tvar Tool = ToolModule.Tool\r\n\tvar tool = new Tool()\r\n\r\n\t//实例化初始化UndoStack对象\r\n\tvar UndoStackModule = require('UndoStack')\r\n\tvar UndoStack = UndoStackModule.UndoStack\r\n\tvar undoStack = new UndoStack()\r\n\r\n\t//实例化初始化Sheet对象\r\n\tvar SheetModule = require('Sheet')\r\n\tvar Sheet = SheetModule.Sheet\r\n\tvar sheet = new Sheet(undoStack)\r\n\r\n\t// //实例化初始化SliderBar对象\r\n\t// var SliderBarModule = require('component/SliderBarHandler')\r\n\r\n\t//实例化初始化Workspace对象\r\n\tvar WorkspaceModule = require('Workspace')\r\n\tvar Workspace = WorkspaceModule.Workspace\r\n\tthis.workspace = new Workspace(tool, sheet)\r\n\r\n\t//实例化初始化WSRender对象\r\n\tvar WSRenderModule = require('WSRender')\r\n\tvar WSRender = WSRenderModule.WSRender\r\n\tvar wsRender = new WSRender(this, parentNode)\r\n\r\n\twsRender.init()\r\n\r\n\tif (config.WSConfig.isInit && parentNode.getAttribute(\"url\")) {\r\n\t\tdocument.getElementById(\"Init\").onclick()\r\n\t\tconfig.WSConfig.isInit = false\r\n\t}\r\n}\r\n\r\nmodule.exports.WSManager = WSManager\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/WSManager.js\n// module id = 8\n// module chunks = 0","/**\r\n * Created by Ian on 17/6/5.\r\n */\r\n\r\nvar WSManagerModule = require('WSManager')\r\nvar WSManager = WSManagerModule.WSManager\r\nvar wsManager=new WSManager()\r\n\r\nvar parentNode = document.getElementById('QianMoApp')\r\n\r\nvar myUrl=GetQueryString(\"url\")\r\nif(myUrl!=null && myUrl.toString().length>1){\r\n    parentNode.setAttribute('url',myUrl)\r\n}\r\nfunction GetQueryString(name){\r\n    var reg=new RegExp(\"(^|&)\"+name+\"=([^&]*)(&|$)\")\r\n    var r=window.location.search.substring(1).match(reg)\r\n    if(r!=null){\r\n        return unescape(r[2])\r\n    }\r\n    return null\r\n}\r\n\r\nwsManager.init(parentNode)\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app.js\n// module id = 9\n// module chunks = 0","var config = require('config')\r\n\r\n// var UtilModule=require('Util')\r\n// var Util=UtilModule.Util\r\n// var util=new Util()\r\n\r\nvar CellModule = require('Cell')\r\nvar Cell = CellModule.Cell\r\n\r\nvar CellRender = function (sheet) {\r\n    this.sheet = sheet\r\n}\r\n/**\r\n * 渲染单元格\r\n * @param id\r\n * @param cmd\r\n * @param value\r\n */\r\nCellRender.prototype.renderCell = function (id, cmd, value) {\r\n    // var sheet=this.sheet\r\n    // if(id && id.indexOf('_')==-1){\r\n    //     var index=id.search(/\\d/)\r\n    //     id=id.substring(0,index)+'_'+id.substring(index,id.length)\r\n    // }\r\n    var ele = document.getElementById(id)\r\n\r\n    // if(id && !sheet.cells[id]){\r\n    //     sheet.cells[id] = new Cell(id)\r\n    // }\r\n    if (ele) {\r\n        switch (cmd) {\r\n            //合并范围\r\n            case \"colSpan\":\r\n                if(value>0) ele.colSpan = value\r\n                break\r\n            case 'rowSpan':\r\n                if(value>0)ele.rowSpan = value\r\n                break\r\n            case \"show\":\r\n                if (value) ele.style.display = 'table-cell'\r\n                else {\r\n                    ele.style.display = 'none'\r\n                }\r\n                break\r\n            //字体颜色\r\n            case \"foregroundColor\":\r\n                ele.style.color = value\r\n\r\n\r\n                break\r\n            //背景色\r\n            case \"backgroundColor\":\r\n\r\n                ele.style.backgroundColor = value\r\n\r\n                break\r\n            //文本内容\r\n            case \"content\":\r\n                if (value === null) {\r\n                    value = ''\r\n                }\r\n                ele.firstChild.innerHTML = value\r\n                break\r\n            //字体\r\n            case \"font\":\r\n                if (value == 'Default') {\r\n                    value = ''\r\n                }\r\n                ele.style.fontFamily = value\r\n                break\r\n            //字体大小\r\n            case \"fontSize\":\r\n                if (value == 'Default' || value == '-----') {\r\n                    value = ''\r\n                }\r\n                ele.style.fontSize = value\r\n                //this.sheet.cells[id].fontSize=value\r\n                break\r\n            //字体类型\r\n            //case \"format\":\r\n            //    this.sheet.cells[id].format=value\r\n            //    break\r\n            //加粗\r\n            case \"bold\":\r\n                if (value) ele.style.fontWeight = 'bold'\r\n                else ele.style.fontWeight = ''\r\n                break\r\n\r\n            //斜体\r\n            case \"italic\":\r\n                if (value) ele.style.fontStyle = 'italic'\r\n                else ele.style.fontStyle = ''\r\n                break\r\n            //\r\n            //对齐方向\r\n            case \"alignment\":\r\n\r\n                ele.style.textAlign = value\r\n                ele.firstChild.style.textAlign = value\r\n\r\n                break\r\n            //换行\r\n            case \"wrapText\":\r\n                if (value) ele.firstChild.className = 'wrap'\r\n                else ele.firstChild.className = 'noWrap'\r\n                break\r\n            //边框\r\n            case \"bottomFrame\":\r\n                var newId = id.split('_')[0] + '_' + (parseInt(id.split('_')[1])+1)\r\n                if (value ) {\r\n                    ele.style.borderBottom = '1px solid #000'\r\n                } else if(!this.sheet.cells[newId] || !this.sheet.cells[newId].topFrame){\r\n                    ele.style.borderBottom = ''\r\n                    // console.log(newId)\r\n                }\r\n                // if (value) ele.style.borderBottom = '2px solid #000'\r\n                // else ele.style.borderBottom = ''\r\n                break\r\n            case \"leftFrame\":\r\n                var newId = String.fromCharCode(id.split('_')[0].charCodeAt(0) - 1) + '_' + id.split('_')[1]\r\n                if (value) {\r\n                    document.getElementById(newId).style.borderRight = '1px solid #000'\r\n                } else if(!this.sheet.cells[newId] || !this.sheet.cells[newId].rightFrame)document.getElementById(newId).style.borderRight = ''\r\n                // if (value) ele.style.borderLeft = '2px solid #000'\r\n                // else ele.style.borderLeft = ''\r\n                break\r\n            case \"rightFrame\":\r\n                var newId = String.fromCharCode(id.split('_')[0].charCodeAt(0) + 1) + '_' + id.split('_')[1]\r\n                if (value) {\r\n                    ele.style.borderRight = '1px solid #000'\r\n                } else if(!this.sheet.cells[newId] || !this.sheet.cells[newId].leftFrame) ele.style.borderRight = ''\r\n                // if (value) ele.style.borderRight = '2px solid #000'\r\n                // else ele.style.borderRight = ''\r\n                break\r\n            case \"topFrame\":\r\n                var newId = id.split('_')[0] + '_' + (parseInt(id.split('_')[1])-1)\r\n                if (value) {\r\n                    document.getElementById(newId).style.borderBottom = '1px solid #000'\r\n                } else if(!this.sheet.cells[newId] || !this.sheet.cells[newId].bottomFrame) document.getElementById(newId).style.borderBottom = ''\r\n                // if (value) ele.style.borderTop = '2px solid #000'\r\n                // else ele.style.borderTop = ''\r\n                break\r\n            //宽高\r\n            case 'width':\r\n                if (value) {\r\n                    var newId = id.split('_')[0]+'_0'\r\n                    document.getElementById(newId).firstChild.style.width = parseInt(value) + 'px'\r\n                }\r\n                break\r\n            case 'height':\r\n                if (value){\r\n                    var newId = '@_'+id.split('_')[1]\r\n                    document.getElementById(newId).firstChild.style.height = parseInt(value) + 'px'\r\n                }\r\n                break\r\n            case 'area':\r\n                console.log('!!!')\r\n                break\r\n            // case \"formula\":\r\n            //     this.sheet.cells[id].formula=value\r\n            //     break\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports.CellRender = CellRender\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/CellRender.js\n// module id = 10\n// module chunks = 0","var Formula = require('Formula').Formula\r\n\r\nvar FuncListRender =  function () {\r\n    this.formula = new Formula()\r\n}\r\n\r\nFuncListRender.prototype.init = function (ele) {\r\n    var formula = this.formula\r\n    var funcTable = document.createElement('table')\r\n    funcTable.style.height = 200 + 'px'\r\n    funcTable.style.width = 500 + 'px'\r\n    funcTable.border = '1px bold #000'\r\n    funcTable.style.backgroundColor = '#DDD'\r\n    ele.appendChild(funcTable)\r\n\r\n    var funcTr = document.createElement('tr')\r\n    var funcTdLeft = document.createElement('td')\r\n    var funcTdRight = document.createElement('td')\r\n    var funcSpanLeft = document.createElement('span')\r\n    var funcSpanRight = document.createElement('span')\r\n    var funcTr2 = document.createElement('tr')\r\n    var funcTd2 = document.createElement('td')\r\n    var funcDiv = document.createElement('div')\r\n    var funcDiv2 = document.createElement('div')\r\n    var funcClassSelect = document.createElement('select')\r\n    var funcNameSelect = document.createElement('select')\r\n    funcNameSelect.id = 'funcNameSelect'\r\n\r\n    var sumOfClass = 0\r\n    for (name in formula.FunctionClassList) {\r\n        var op = document.createElement('option')\r\n        op.innerHTML = name\r\n        op.id = name\r\n        funcClassSelect.appendChild(op)\r\n        if (sumOfClass === 0) op.selected = true\r\n        sumOfClass++\r\n\r\n    }\r\n\r\n    funcClassSelect.size = sumOfClass\r\n    funcNameSelect.size = sumOfClass\r\n    var sumOfFname = 0\r\n    for (fname in  formula.FunctionClassList[funcClassSelect.value]) {\r\n        var op = document.createElement('option')\r\n        op.innerHTML = fname\r\n        op.id = fname\r\n        funcNameSelect.appendChild(op)\r\n        if (sumOfFname === 0) op.selected = true\r\n        sumOfFname++\r\n\r\n    }\r\n    funcDiv.innerHTML = funcNameSelect.value + '('+ formula.funcInfo['s_farg_' + formula.funcParem[funcNameSelect.value]] + ')'\r\n    funcDiv2.innerHTML = formula.funcInfo['s_fdef_' + funcNameSelect.value]\r\n\r\n    funcSpanLeft.innerHTML = 'Category'\r\n    funcTdRight.innerHTML = 'Functions'\r\n    funcTd2.colSpan = 2\r\n    funcClassSelect.style.width = 250 + 'px'\r\n    funcNameSelect.style.width = 250 + 'px'\r\n    funcTr.appendChild(funcTdLeft)\r\n    funcTr.appendChild(funcTdRight)\r\n    funcTdLeft.appendChild(funcSpanLeft)\r\n    funcTdLeft.appendChild(document.createElement('tr'))\r\n    funcTdLeft.appendChild(funcClassSelect)\r\n    funcTdRight.appendChild(funcSpanRight)\r\n    funcTdRight.appendChild(document.createElement('tr'))\r\n    funcTdRight.appendChild(funcNameSelect)\r\n    funcTr2.appendChild(funcTd2)\r\n    funcTd2.appendChild(funcDiv)\r\n    funcTd2.appendChild(document.createElement('tr'))\r\n    funcTd2.appendChild(funcDiv2)\r\n\r\n    funcTable.appendChild(funcTr)\r\n    funcTable.appendChild(funcTr2)\r\n\r\n    funcClassSelect.onchange = function () {\r\n        funcNameSelect.innerHTML = ''\r\n        funcNameSelect.size = 7\r\n        var sumOfFname =0\r\n        for (fname in  formula.FunctionClassList[this.value]) {\r\n            var op = document.createElement('option')\r\n            op.innerHTML = fname\r\n            op.id = fname\r\n            funcNameSelect.appendChild(op)\r\n            if (sumOfFname === 0) {\r\n                funcDiv.innerHTML = fname + '('+ formula.funcInfo['s_farg_' + formula.funcParem[fname]]+ ')'\r\n                funcDiv2.innerHTML = formula.funcInfo['s_fdef_' + fname]\r\n                op.selected = true\r\n            }\r\n        }\r\n    }\r\n    funcNameSelect.onchange = function () {\r\n        funcDiv.innerHTML = funcNameSelect.value +'('+ formula.funcInfo['s_farg_' + formula.funcParem[funcNameSelect.value]] + ')'\r\n        funcDiv2.innerHTML = formula.funcInfo['s_fdef_' + funcNameSelect.value]\r\n    }\r\n}\r\n\r\nmodule.exports.FuncListRender = FuncListRender\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/FuncListRender.js\n// module id = 11\n// module chunks = 0","/**\r\n * 表格对象\r\n */\r\n\r\n\r\nvar configModule = require('config')\r\nvar CellModule = require('Cell')\r\nvar Cell = CellModule.Cell\r\nvar sheetConfig = configModule.SheetConfig\r\n// var UtilModule = require('Util')\r\n// var Util = UtilModule.Util\r\n// var util = new Util()\r\nvar CellRenderModule = require('CellRender')\r\nvar CellRender = CellRenderModule.CellRender\r\n//var cellRender = new CellRender\r\nvar Sheet = function (UndoStack) {\r\n    this.cellRender = new CellRender(this)\r\n    this.height = sheetConfig.height\r\n    this.width = sheetConfig.width\r\n\r\n    this.headWidth = sheetConfig.headWidth\r\n    this.headHeight = sheetConfig.headHeight\r\n\r\n\r\n    this.rowNum = sheetConfig.rowNum\r\n    this.colNum = sheetConfig.colNum\r\n\r\n    this.maxCol = 65\r\n    this.maxRow = 1\r\n\r\n    this.cells = {}\r\n    this.firstCopiedCell = null\r\n    this.copiedCells = {}\r\n    // todo cellAttrs\r\n    this.cellAttrs = [['backgroundColor', ''], ['foregroundColor', ''], ['bold', false], ['italic', false],\r\n        ['content', ''], ['fontSize', ''], ['alignment', 'left'], ['font', ''], ['show', true],\r\n        ['colSpan', 1], ['rowSpan', 1]]\r\n    //['bottomFrame', false], ['leftFrame', false], ['topFrame', false], ['rightFrame', false]\r\n    this.UndoStack = UndoStack\r\n    this.undostackCache = []\r\n\r\n    this.isMouseDown = false\r\n    this.isKeyDown = false\r\n    this.isEditing = false\r\n    this.isMultiLineEditing = false\r\n    this.isDraging = false\r\n    this.isCtrlDown = false\r\n\r\n    //this.isFont = false\r\n    this.isPreview = false\r\n\r\n    this.firstCellid = 'A_1'\r\n    this.lastCellid = 'A_1'\r\n    this.editCells = this.getColAndRow()\r\n}\r\n\r\nSheet.prototype.addCell = function (id) {\r\n    if (!this.cells[id]) {\r\n        this.cells[id] = new Cell(id)\r\n        if (id.split('_')[0].charCodeAt(0) > this.maxCol) this.maxCol = id.split('_')[0].charCodeAt(0)\r\n        if (parseInt(id.split('_')[1]) > this.maxRow) this.maxRow = parseInt(id.split('_')[1])\r\n    }\r\n}\r\n\r\nSheet.prototype.setAttr = function (attr, value, cells) {\r\n    if (!cells) var cells = this.editCells\r\n    if (cells != null) {\r\n        switch (attr) {\r\n            //缩进\r\n            case 'indentation':\r\n                if (value > 0) {\r\n                    var html = '';\r\n                    for (var i = 0; i < value; i++) {\r\n                        html += '&nbsp;'\r\n                    }\r\n                    var i = cells.firstCellCol\r\n                    var j = cells.firstCellRow\r\n                    var id = String.fromCharCode(i) + '_' + j\r\n                    if (this.cells[id]) {\r\n                        if (this.cells[id]['content']) {\r\n                            if (this.cells[id].show) {\r\n                                html = html + this.cells[id]['content']\r\n                                this.undostackCache.push([id, 'content', html, this.cells[id]['content']])\r\n                                this.cells[id]['content'] = html\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break\r\n            case 'cellname':\r\n            case 'area':\r\n                break\r\n            case 'merge':\r\n                if (value) {\r\n                    for (var i = cells.firstCellCol; i <= cells.lastCellCol; i++) {\r\n                        for (var j = cells.firstCellRow; j <= cells.lastCellRow; j++) {\r\n                            var id = String.fromCharCode(i) + '_' + j\r\n                            this.addCell(id)\r\n                            if (this.cells[id].show) {\r\n                                if (i === cells.firstCellCol && j === cells.firstCellRow) {\r\n                                    var colSpan = cells.lastCellCol - cells.firstCellCol + 1\r\n                                    var rowSpan = cells.lastCellRow - cells.firstCellRow + 1\r\n                                    if (colSpan !== this.cells[id].colSpan || rowSpan !== this.cells[id].rowSpan) {\r\n                                        this.undostackCache.push([id, 'colSpan', colSpan, this.cells[id].colSpan])\r\n                                        this.undostackCache.push([id, 'rowSpan', rowSpan, this.cells[id].rowSpan])\r\n                                        //this.undostackCache.push([id, 'area', [colSpan, rowSpan], [this.cells[id].colSpan, this.cells[id].rowSpan]])\r\n                                        this.cells[id].colSpan = colSpan\r\n                                        this.cells[id].rowSpan = rowSpan\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    this.cells[id].show = false\r\n                                    this.undostackCache.push([id, 'show', false, true])\r\n                                    this.undostackCache.push([id, 'colSpan', cells.firstCellCol - i + 1, this.cells[id].colSpan])\r\n                                    this.undostackCache.push([id, 'rowSpan', cells.firstCellRow - j + 1, this.cells[id].rowSpan])\r\n                                    this.cells[id].colSpan = cells.firstCellCol - i + 1\r\n                                    this.cells[id].rowSpan = cells.firstCellRow - j + 1\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    this.lastCellid = this.firstCellid\r\n                }\r\n                else {\r\n                    this.firstCellid = String.fromCharCode(cells.firstCellCol) + '_' + cells.firstCellRow\r\n                    this.lastCellid = String.fromCharCode(cells.lastCellCol) + '_' + cells.lastCellRow\r\n                    for (var i = cells.firstCellCol; i <= cells.lastCellCol; i++) {\r\n                        for (var j = cells.firstCellRow; j <= cells.lastCellRow; j++) {\r\n                            var id = String.fromCharCode(i) + '_' + j\r\n                            if (!this.cells[id]) {\r\n                                continue\r\n                            }\r\n                            if (this.cells[id].colSpan != 1 || this.cells[id].rowSpan != 1) {\r\n                                this.undostackCache.push([id, 'colSpan', 1, this.cells[id].colSpan])\r\n                                this.undostackCache.push([id, 'rowSpan', 1, this.cells[id].rowSpan])\r\n                                this.cells[id].colSpan = 1\r\n                                this.cells[id].rowSpan = 1\r\n                            }\r\n                            if (!this.cells[id].show) {\r\n                                this.undostackCache.push([id, 'show', true, false])\r\n                                this.cells[id].show = true\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break\r\n            case 'leftFrame':\r\n            case 'topFrame':\r\n            case 'rightFrame':\r\n            case 'bottomFrame':\r\n                switch (attr) {\r\n                    case 'leftFrame':\r\n                        var mini = cells.firstCellCol\r\n                        var minj = cells.firstCellRow\r\n                        var maxi = cells.firstCellCol\r\n                        var maxj = cells.lastCellRow\r\n                        break\r\n                    case 'topFrame':\r\n                        var mini = cells.firstCellCol\r\n                        var minj = cells.firstCellRow\r\n                        var maxi = cells.lastCellCol\r\n                        var maxj = cells.firstCellRow\r\n                        break\r\n                    case 'rightFrame':\r\n                        var mini = cells.lastCellCol\r\n                        var minj = cells.firstCellRow\r\n                        var maxi = cells.lastCellCol\r\n                        var maxj = cells.lastCellRow\r\n                        break\r\n                    case 'bottomFrame':\r\n                        var mini = cells.firstCellCol\r\n                        var minj = cells.lastCellRow\r\n                        var maxi = cells.lastCellCol\r\n                        var maxj = cells.lastCellRow\r\n                        break\r\n\r\n                }\r\n                for (var i = mini; i <= maxi; i++) {\r\n                    for (var j = minj; j <= maxj; j++) {\r\n                        var id = String.fromCharCode(i) + '_' + j\r\n                        this.addCell(id)\r\n                        if (this.cells[id][attr] != value) {\r\n                            this.cells[id][attr] = value\r\n                            this.undostackCache.push([id, attr, value, !value])\r\n                        }\r\n                    }\r\n                }\r\n                break\r\n            case 'allFrameEx':\r\n                for (var i = cells.firstCellCol; i <= cells.lastCellCol; i++) {\r\n                    for (var j = cells.firstCellRow; j <= cells.lastCellRow; j++) {\r\n                        var id = String.fromCharCode(i) + '_' + j\r\n                        this.addCell(id)\r\n                        // var env = this\r\n                        //\r\n                        // if (env.cells[id].rightFrame != value && i !== cells.firstCellCol - 1) {\r\n                        //     env.undostackCache.push([id, 'topFrame', value, !value])\r\n                        //     env.cells[id].rightFrame = value\r\n                        // }\r\n                        // if (env.cells[id].bottomFrame != value && j !== cells.firstCellRow - 1) {\r\n                        //     env.undostackCache.push([id, 'rightFrame', value, !value])\r\n                        //     env.cells[id].bottomFrame = value\r\n                        // }\r\n                        var env = this\r\n\r\n                        var a = ['leftFrame', 'rightFrame', 'topFrame', 'bottomFrame']\r\n\r\n                        a.forEach(function (frame) {\r\n                            if (env.cells[id][frame] != value) {\r\n                                env.undostackCache.push([id, frame, value, !value])\r\n                                env.cells[id][frame] = value\r\n                            }\r\n                        })\r\n\r\n                    }\r\n                }\r\n                if (value == false) {\r\n                    if (cells.firstCellCol > 65) {\r\n                        var firstCellid = String.fromCharCode(cells.firstCellCol - 1)\r\n                            + '_' + cells.firstCellRow\r\n                        var lastCellid = String.fromCharCode(cells.firstCellCol - 1)\r\n                            + '_' + cells.lastCellRow\r\n                        var newCell = this.getColAndRow(firstCellid, lastCellid)\r\n                        this.setAttr('rightFrame', false, newCell)\r\n                        delete  newCell\r\n                    }\r\n                    if (cells.firstCellRow > 1) {\r\n\r\n                        var firstCellid = String.fromCharCode(cells.firstCellCol)\r\n                            + '_' + (cells.firstCellRow - 1)\r\n                        var lastCellid = String.fromCharCode(cells.lastCellCol)\r\n                            + '_' + (cells.firstCellRow - 1)\r\n                        var newCell = this.getColAndRow(firstCellid, lastCellid)\r\n                        this.setAttr('bottomFrame', false, newCell)\r\n                        delete  newCell\r\n                    }\r\n                    if (document.getElementById(String.fromCharCode(cells.lastCellCol)\r\n                            + '_' + (cells.lastCellRow + 1))) {\r\n                        var firstCellid = String.fromCharCode(cells.firstCellCol)\r\n                            + '_' + (cells.lastCellRow + 1)\r\n                        var lastCellid = String.fromCharCode(cells.lastCellCol)\r\n                            + '_' + (cells.lastCellRow + 1)\r\n                        var newCell = this.getColAndRow(firstCellid, lastCellid)\r\n                        this.setAttr('topFrame', false, newCell)\r\n                        delete  newCell\r\n                    }\r\n                    if (document.getElementById(String.fromCharCode(cells.lastCellCol + 1)\r\n                            + '_' + (cells.lastCellRow))) {\r\n                        var firstCellid = String.fromCharCode(cells.lastCellCol + 1)\r\n                            + '_' + (cells.firstCellRow)\r\n                        var lastCellid = String.fromCharCode(cells.lastCellCol + 1)\r\n                            + '_' + (cells.lastCellRow )\r\n                        var newCell = this.getColAndRow(firstCellid, lastCellid)\r\n                        this.setAttr('leftFrame', false, newCell)\r\n                        delete  newCell\r\n                    }\r\n                }\r\n                break\r\n            case 'allFrame':\r\n                for (var i = cells.firstCellCol; i <= cells.lastCellCol; i++) {\r\n                    for (var j = cells.firstCellRow; j <= cells.lastCellRow; j++) {\r\n                        var id = String.fromCharCode(i) + '_' + j\r\n                        this.addCell(id)\r\n                        var env = this\r\n\r\n                        var a = ['leftFrame', 'rightFrame', 'topFrame', 'bottomFrame']\r\n\r\n                        a.forEach(function (frame) {\r\n                            if (env.cells[id][frame] != value) {\r\n                                env.undostackCache.push([id, frame, value, !value])\r\n                                env.cells[id][frame] = value\r\n                            }\r\n                        })\r\n\r\n                    }\r\n                }\r\n                break\r\n            default:\r\n                for (var i = cells.firstCellCol; i <= cells.lastCellCol; i++) {\r\n                    for (var j = cells.firstCellRow; j <= cells.lastCellRow; j++) {\r\n                        var id = String.fromCharCode(i) + '_' + j\r\n                        this.addCell(id)\r\n\r\n                            if (this.cells[id][attr] !== value) {\r\n                                this.undostackCache.push([id, attr, value, this.cells[id][attr]])\r\n                                this.cells[id][attr] = value\r\n                            }\r\n\r\n                    }\r\n                }\r\n                break\r\n        }\r\n    }\r\n}\r\n//将value赋值给attr属性，赋值范围由sheet.firstcell和sheet.lastcell指定\r\n\r\nSheet.prototype.sheet2json = function () {\r\n//todo\r\n}\r\n\r\nSheet.prototype.json2sheet = function () {\r\n//todo\r\n}\r\n\r\nSheet.prototype.render = function () {\r\n    var sheet = this\r\n    this.undostackCache.forEach(function (cache) {\r\n        sheet.cellRender.renderCell(cache[0], cache[1], cache[2])\r\n    })\r\n    this.UndoStack.pushStep(this.undostackCache)\r\n    this.undostackCache = []\r\n    //遍历sheet.undostackCache,将sheet.undostackCache压入sheet.undostack\r\n}\r\nSheet.prototype.renderCell = function (id, cmd, value) {\r\n    this.cellRender.renderCell(id, cmd, value)\r\n}\r\n\r\nSheet.prototype.undo = function () {\r\n    var undoSteps = this.UndoStack.unDo()\r\n    if (undoSteps) {\r\n        var sheet = this\r\n        undoSteps.forEach(function (step) {\r\n            sheet.cells[step[0]][step[1]] = step[3]\r\n            sheet.cellRender.renderCell(step[0], step[1], step[3])\r\n        })\r\n    }\r\n}\r\n\r\nSheet.prototype.redo = function () {\r\n    var undoSteps = this.UndoStack.reDo()\r\n    if (undoSteps) {\r\n        var sheet = this\r\n        undoSteps.forEach(function (step) {\r\n            sheet.cells[step[0]][step[1]] = step[2]\r\n            sheet.cellRender.renderCell(step[0], step[1], step[2])\r\n        })\r\n    }\r\n\r\n}\r\n\r\nSheet.prototype.setIdAttr = function (id,cmd,value) {\r\n    this.cellRender.renderCell(id,cmd,value)\r\n}\r\n\r\nSheet.prototype.getColAndRow = function (firstCellid, lastCellid) {\r\n    if (firstCellid == null) {\r\n        firstCellid = this.firstCellid\r\n        lastCellid = this.lastCellid\r\n    }\r\n    //if (firstCell && firstCell.id && lastCell && lastCell.id) {\r\n    var result = {}\r\n    result.firstCellCol = Math.min(firstCellid.split('_')[0].charCodeAt(0), lastCellid.split('_')[0].charCodeAt(0))\r\n    result.firstCellRow = Math.min(parseInt(firstCellid.split('_')[1]), parseInt(lastCellid.split('_')[1]))\r\n    result.lastCellCol = Math.max(lastCellid.split('_')[0].charCodeAt(0), firstCellid.split('_')[0].charCodeAt(0))\r\n    result.lastCellRow = Math.max(parseInt(lastCellid.split('_')[1]), parseInt(firstCellid.split('_')[1]))\r\n    //}\r\n    var sheet = this\r\n    return getRectangle(result, sheet)\r\n}\r\n\r\ngetRectangle = function (cells, sheet) {\r\n    //console.log(cells)\r\n    var flag = false\r\n    var minCol = cells.firstCellCol\r\n    var minRow = cells.firstCellRow\r\n    var maxCol = cells.lastCellCol\r\n    var maxRow = cells.lastCellRow\r\n\r\n    for (var i = cells.firstCellCol; i <= cells.lastCellCol; i++) {\r\n        for (var j = cells.firstCellRow; j <= cells.lastCellRow; j++) {\r\n            var id = String.fromCharCode(i) + '_' + j\r\n            if (!sheet.cells[id]) {\r\n                continue\r\n\r\n            }\r\n            if (!sheet.cells[id].show) {\r\n                if ((i + sheet.cells[id].colSpan - 1) < minCol) {\r\n                    flag = true\r\n                    minCol = (i + sheet.cells[id].colSpan - 1)\r\n\r\n                }\r\n                if ((j + sheet.cells[id].rowSpan - 1) < minRow) {\r\n                    flag = true\r\n                    minRow = (j + sheet.cells[id].rowSpan - 1)\r\n                }\r\n            }\r\n            else {\r\n                if (sheet.cells[id].colSpan - 1 + i > maxCol) {\r\n                    flag = true\r\n                    maxCol = sheet.cells[id].colSpan - 1 + i\r\n                }\r\n                if (sheet.cells[id].rowSpan - 1 + j > maxRow) {\r\n                    flag = true\r\n                    maxRow = sheet.cells[id].rowSpan - 1 + j\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n    cells.firstCellCol = minCol\r\n    cells.firstCellRow = minRow\r\n    cells.lastCellCol = maxCol\r\n    cells.lastCellRow = maxRow\r\n    if (flag) return getRectangle(cells, sheet)\r\n    else return cells\r\n}\r\n\r\n\r\nmodule.exports.Sheet = Sheet\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/Sheet.js\n// module id = 12\n// module chunks = 0","//事件绑定对象\r\nvar SheetEventHandlerModule = require('SheetEventHandler')\r\nvar SheetEventHandler = SheetEventHandlerModule.SheetEventHandler\r\nvar sheetEventHandler = null\r\n\r\nvar SheetEventBinder = function (sheet) {\r\n    this.sheet = sheet\r\n    sheetEventHandler = new SheetEventHandler(sheet)\r\n    window.onmouseup = function () {\r\n        sheet.isMouseDown = false\r\n    }\r\n    document.onkeydown = function (event) {\r\n        if(!sheet.isPreview)  sheetEventHandler.keyDown(event)\r\n\r\n        if (!sheet.isMultiLineEditing && !sheet.isEditing) return false\r\n    }\r\n    document.onkeyup = function (event) {\r\n        if(event.which === 17) sheet.isKeyDown = false\r\n    }\r\n}\r\n\r\nSheetEventBinder.prototype.initRowTD = function (rowTD) {\r\n    var sheet = this.sheet\r\n    rowTD.onmousedown = function () {\r\n        sheetEventHandler.mouseDown(rowTD.id)\r\n    }\r\n    rowTD.onmouseup = function () {\r\n        sheetEventHandler.mouseUp(rowTD)\r\n    }\r\n    rowTD.onmousemove = function () {\r\n        if (sheet.isMouseDown || sheet.isDraging) {\r\n            sheetEventHandler.mouseMove(rowTD.id)\r\n        }\r\n    }\r\n    rowTD.ondblclick = function () {\r\n        sheetEventHandler.dblclick(this)\r\n    }\r\n}\r\nSheetEventBinder.prototype.initInput = function (input) {\r\n    input.onblur = function () {\r\n        sheetEventHandler.inputBlur()\r\n    }\r\n    input.onfocus = function () {\r\n        sheetEventHandler.inputFocus()\r\n    }\r\n}\r\nSheetEventBinder.prototype.initMultiLine = function (multiLine) {\r\n    multiLine.onblur = function () {\r\n        sheetEventHandler.multiLineBlur(multiLine.value)\r\n        multiLine.value = ''\r\n        multiLine.style.display = 'none'\r\n    }\r\n}\r\nSheetEventBinder.prototype.initDragBar = function (dragBar) {\r\n    dragBar.onmousedown = function () {\r\n        sheetEventHandler.dragBarMouseDown()\r\n    }\r\n    dragBar.onmouseup = function () {\r\n        sheetEventHandler.dragBarMouseUp()\r\n    }\r\n}\r\nSheetEventBinder.prototype.initFormulaButton = function (button) {\r\n    button.onclick = function () {\r\n        sheetEventHandler.formulaButonClick()\r\n    }\r\n}\r\nmodule.exports.SheetEventBinder = SheetEventBinder\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/SheetEventBinder.js\n// module id = 13\n// module chunks = 0","/**\r\n * Created by Ian on 17/7/22.\r\n */\r\n\r\n\r\nvar config = require('config')\r\nvar style = require('style')\r\nvar renderPane = require('SliderBarRender').renderPane\r\nvar renderBar = require('SliderBarRender').renderBar\r\nvar renderToggle = require('SliderBarRender').renderToggle\r\n\r\nvar SliderBarHandler = function (sheet) {\r\n\tthis.sheet = sheet\r\n}\r\n\r\nSliderBarHandler.prototype.autoOpen = function () {\r\n\tvar sheet = this.sheet\r\n\tvar cell = sheet.cells[sheet.firstCellid]\r\n\r\n\tif ((sheet.firstCellid !== sheet.lastCellid) || !cell) {\r\n\t\treturn\r\n\t}\r\n\r\n\tvar sliderBarDiv = document.getElementById(config.SlideBarConfig.id)\r\n\tvar sheetTableDiv = document.getElementById(config.SheetTableDivConfig.id)\r\n\tvar toggleDiv = document.getElementById(config.SlideBarConfig.toggleId)\r\n\r\n\ttoggleDiv.isOpen = true\r\n\r\n\trenderBar(sliderBarDiv, sheetTableDiv, toggleDiv)\r\n\trenderToggle(toggleDiv)\r\n}\r\n\r\nSliderBarHandler.prototype.addCellAttr = function () {\r\n\tvar sheet = this.sheet\r\n\tvar cell = sheet.cells[sheet.firstCellid]\r\n\r\n\tif ((sheet.firstCellid !== sheet.lastCellid) || !cell) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// var paneDiv = document.getElementById(config.SlideBarConfig.sliderPaneConfig.cellAttr.paneId)\r\n\tvar titleDiv = document.getElementById(config.SlideBarConfig.sliderPaneConfig.cellAttr.titleId)\r\n\tvar arrowDiv = document.getElementById(config.SlideBarConfig.sliderPaneConfig.cellAttr.arrowId)\r\n\tvar contentDiv = document.getElementById(config.SlideBarConfig.sliderPaneConfig.cellAttr.contentId)\r\n\r\n\ttitleDiv.isOpen = true\r\n\r\n\trenderPane(arrowDiv, contentDiv, titleDiv)\r\n\r\n\tremoveAllChild(contentDiv)\r\n\r\n\tvar cellAttrTable = document.createElement('table')\r\n\tcellAttrTable.style = style.SliderTableStyle\r\n\tcontentDiv.appendChild(cellAttrTable)\r\n\r\n\tvar i = 0\r\n\r\n\tfor (var attr in cell) {\r\n\r\n\t\tif(cell[attr] == false){continue}\r\n\r\n\t\tvar attrTr = document.createElement('tr')\r\n\t\tcellAttrTable.appendChild(attrTr)\r\n\r\n\t\ti++\r\n\t\tif(i%2 === 1){\r\n\t\t\tattrTr.style = style.SliderEvenTrStyle\r\n\t\t}else{\r\n\t\t\tattrTr.style = style.SliderOddTrStyle\r\n\t\t}\r\n\r\n\t\tvar attrTd = document.createElement('td')\r\n\t\tattrTd.innerHTML = attr\r\n\t\tattrTd.style = style.SliderTdStyle\r\n\t\tvar valueTd = document.createElement('td')\r\n\t\tvalueTd.innerHTML = cell[attr]\r\n\t\tvalueTd.style = style.SliderTdStyle\r\n\t\tattrTr.appendChild(attrTd)\r\n\t\tattrTr.appendChild(valueTd)\r\n\t}\r\n}\r\n\r\nfunction removeAllChild(node) {\r\n\r\n\twhile (node.hasChildNodes()) {\r\n\t\tnode.removeChild(node.firstChild)\r\n\t}\r\n}\r\nmodule.exports.SliderBarHandler = SliderBarHandler\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/SliderBarHandler.js\n// module id = 14\n// module chunks = 0","/**\r\n * 工具栏对象\r\n */\r\nvar configModule = require('config')\r\n\r\nvar ToolConfig = configModule.ToolConfig\r\n\r\nvar Tool = function () {\r\n    this.width = ToolConfig.width\r\n    this.height = ToolConfig.height\r\n}\r\n\r\nmodule.exports.Tool = Tool\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/Tool.js\n// module id = 15\n// module chunks = 0","/**\r\n * 工具栏事件\r\n */\r\nvar config = require('config')\r\n\r\n\r\nvar SheetRenderModule = require('SheetRender')\r\nvar SheetRender = SheetRenderModule.SheetRender\r\nvar sheetRender = null\r\n// var CellRenderModule = require('CellRender')\r\n// var CellRender = CellRenderModule.CellRender\r\n// var cellRender = null\r\n\r\nvar SheetEventHandlerModule = require('SheetEventHandler')\r\nvar SheetEventHandler = SheetEventHandlerModule.SheetEventHandler\r\nvar sheetEventHandler = null\r\n\r\nvar ToolEventHandler = function (sheet) {\r\n    this.sheet = sheet\r\n    sheetRender = new SheetRender(sheet)\r\n    //cellRender = new CellRender(sheet)\r\n    sheetEventHandler = new SheetEventHandler(sheet)\r\n}\r\nToolEventHandler.prototype.buttonClick = function (action, value) {\r\n    var sheet = this.sheet\r\n    switch (action) {\r\n        case \"wrapText\":\r\n            var lastCellId = this.sheet.lastCellid\r\n            if (!sheet.cells[lastCellId]) {\r\n                sheet.setAttr('wrapText', true)\r\n            }\r\n            else {\r\n                sheet.setAttr('wrapText', !this.sheet.cells[lastCellId].wrapText)\r\n            }\r\n            sheet.render()\r\n            break\r\n        case \"preview\":\r\n            var e = this.sheet.cells\r\n            if (JSON.stringify(e) !== \"{}\") {\r\n                var needEditCells = []\r\n                for (var key in e) {\r\n                    if (isNaN(e[key][\"content\"]) && e[key][\"content\"] != '' && e[key][\"content\"].indexOf('=') == 0) {\r\n                        var formula = {\r\n                            'coord': key,\r\n                            'value': e[key][\"content\"]\r\n                        }\r\n                        needEditCells.push(formula)\r\n                        this.sheet.cells[key][\"formula\"] = e[key][\"content\"]\r\n                    }\r\n                    // if(e[key][\"formula\"]!==undefined && e[key][\"formula\"]!=''){\r\n                    //     var formula = {\r\n                    //         'coord': key,\r\n                    //         'value': e[key][\"formula\"]\r\n                    //     }\r\n                    //     needEditCells.push(formula)\r\n                    // }\r\n                }\r\n                if (needEditCells.length > 0) {\r\n                    var ajax\r\n                    if (window.XMLHttpRequest) {\r\n                        ajax = new XMLHttpRequest()\r\n                    } else if (window.ActiveXObject) {\r\n                        ajax = new window.ActiveXObject()\r\n                    } else {\r\n                        alert(\"请升级至最新版本的浏览器\")\r\n                    }\r\n                    if (ajax !== null) {\r\n                        ajax.open(\"POST\", \"http://123.56.22.114:8080/qianmo-service/changeContent\", true)\r\n                        // ajax.open(\"POST\", \"http://localhost:8088/qianmo-service/changeContent\", true)\r\n                        needEditCells = JSON.stringify(needEditCells)\r\n                        ajax.send(needEditCells)\r\n                        ajax.onreadystatechange = function () {\r\n                            if (ajax.readyState == 4 && ajax.status == 200) {\r\n                                var CellList = JSON.parse(ajax.responseText)\r\n                                for (var key in CellList) {\r\n                                    var value = CellList[key].value.substring(1)\r\n                                    // if (value.indexOf(\"+\") != -1) {\r\n                                    //     var result = 0\r\n                                    //     var values = value.split(\"+\")\r\n                                    //     for (var v in values) {\r\n                                    //         result += parseInt(values[v])\r\n                                    //     }\r\n                                    //     value = result\r\n                                    // }\r\n                                    e[CellList[key].coord][\"content\"] = value\r\n                                }\r\n                                sheet.isPreview = true\r\n                                document.getElementById('previewDiv').style.display = 'block'\r\n                                document.getElementById('editDiv').style.display = 'none'\r\n                                document.getElementById('menuDiv').isDisabled = true\r\n                                sheetRender.renderSheet(sheet, document.getElementById('sheetTable'))\r\n\r\n                                for (cell in sheet.cells) {\r\n                                    for (attr in sheet.cells[cell]) {\r\n                                        if (attr != 'coord') sheet.setIdAttr(sheet.cells[cell].coord, attr, sheet.cells[cell][attr])\r\n                                        //console.log(attr)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    sheet.isPreview = true\r\n                    document.getElementById('previewDiv').style.display = 'block'\r\n                    document.getElementById('editDiv').style.display = 'none'\r\n                    document.getElementById('menuDiv').isDisabled = true\r\n                    sheetRender.renderSheet(sheet, document.getElementById('sheetTable'))\r\n\r\n                    for (cell in sheet.cells) {\r\n                        for (attr in sheet.cells[cell]) {\r\n                            if (attr != 'coord') sheet.setIdAttr(sheet.cells[cell].coord, attr, sheet.cells[cell][attr])\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                alert(\"无内容，不允许预览！\")\r\n            }\r\n\r\n            break\r\n        case \"Edit\":\r\n            sheet.isPreview = false\r\n            document.getElementById('previewDiv').style.display = 'none'\r\n            document.getElementById('editDiv').style.display = 'block'\r\n            //document.getElementById('menuDiv').style.display = 'block'\r\n            sheetRender.renderSheet(sheet, document.getElementById('sheetTable'))\r\n            // console.log(sheet.cells)\r\n            for (cell in sheet.cells) {\r\n                for (attr in sheet.cells[cell]) {\r\n                    if (attr != 'coord') {\r\n                        // console.log(sheet.cells[cell]['formula'])\r\n                        if (attr === 'content' && sheet.cells[cell]['formula'] !== undefined && sheet.cells[cell]['formula'] !== '') {\r\n                            sheet.setIdAttr(sheet.cells[cell].coord, attr, sheet.cells[cell]['formula'])\r\n                        } else {\r\n                            sheet.setIdAttr(sheet.cells[cell].coord, attr, sheet.cells[cell][attr])\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            break\r\n        case \"Down\":\r\n            var myMask = document.getElementById('mask')\r\n            myMask.style.display = \"block\"\r\n            var e = this.sheet.cells\r\n            var a = {}\r\n            var CellList = []\r\n            for (var key in e) {\r\n                if (e[key].show) {\r\n                    var col = key.split('_')[0]\r\n                    var row = key.split('_')[1]\r\n                    col = String.fromCharCode(col.charCodeAt(0) + e[key].colSpan - 1)\r\n                    row = parseInt(row) + e[key].rowSpan - 1\r\n                    var area = key + '_' + col + '_' + row\r\n                    var content = e[key][\"content\"] === undefined ? \"\" : e[key][\"content\"] === null ? \"\" : e[key][\"content\"] === \"\" ? \"\" : e[key][\"content\"] + ''\r\n                    var addCell = {\r\n                        \"cellName\": key,\r\n                        \"area\": area,\r\n                        \"content\": content.replace(/&nbsp;/g, ''),\r\n                        \"format\": e[key][\"format\"] === undefined ? \"\" : e[key][\"format\"],\r\n                        \"font\": e[key][\"font\"] === undefined ? \"\" : e[key][\"font\"],\r\n                        \"fontSize\": e[key][\"fontSize\"] === undefined ? \"\" : e[key][\"fontSize\"],\r\n                        \"foregroundColor\": e[key][\"foregroundColor\"] === undefined ? \"\" : e[key][\"foregroundColor\"],\r\n                        \"backgroundColor\": e[key][\"backgroundColor\"] === undefined ? \"\" : e[key][\"backgroundColor\"],\r\n                        \"formula\": e[key][\"formula\"] === undefined ? \"\" : e[key][\"formula\"],\r\n                        \"leftFrame\": e[key][\"leftFrame\"] === undefined ? \"\" : e[key][\"leftFrame\"],\r\n                        \"topFrame\": e[key][\"topFrame\"] === undefined ? \"\" : e[key][\"topFrame\"],\r\n                        \"rightFrame\": e[key][\"rightFrame\"] === undefined ? \"\" : e[key][\"rightFrame\"],\r\n                        \"bottomFrame\": e[key][\"bottomFrame\"] === undefined ? \"\" : e[key][\"bottomFrame\"],\r\n                        \"indentation\": e[key][\"indentation\"] === undefined ? 0 : e[key][\"indentation\"],\r\n                        \"alignment\": e[key][\"alignment\"] === undefined ? \"\" : e[key][\"alignment\"],\r\n                        \"bold\": e[key][\"bold\"] === undefined ? \"\" : e[key][\"bold\"],\r\n                        \"italic\": e[key][\"italic\"] === undefined ? \"\" : e[key][\"italic\"],\r\n                        \"vertical\": e[key][\"vertical\"] === undefined ? \"\" : e[key][\"vertical\"],\r\n                        \"wrapText\": e[key][\"wrapText\"] === undefined ? \"\" : e[key][\"wrapText\"],\r\n                        \"width\": e[key][\"width\"] === undefined ? \"\" : e[key][\"width\"],\r\n                        \"height\": e[key][\"height\"] === undefined ? \"\" : e[key][\"height\"]\r\n                    }\r\n                    // console.log(addCell.content)\r\n                    CellList.push(addCell)\r\n                }\r\n            }\r\n            var json = JSON.stringify(CellList)\r\n            var ajax\r\n            if (window.XMLHttpRequest) {\r\n                ajax = new XMLHttpRequest()\r\n            } else if (window.ActiveXObject) {\r\n                ajax = new window.ActiveXObject()\r\n            } else {\r\n                alert(\"请升级至最新版本的浏览器\")\r\n            }\r\n            if (ajax != null) {\r\n                ajax.open(\"POST\", \"http://123.56.22.114:8080/qianmo-service/excelDownload\", true)\r\n                // ajax.open(\"POST\",\"http://localhost:8088/qianmo-service/excelDownload\",true)\r\n                ajax.onload = function () {\r\n                    if (ajax.status == 200) {\r\n                        var filename = \"\";\r\n                        var disposition = ajax.getResponseHeader('Content-Disposition');\r\n                        if (disposition && disposition.indexOf('attachment') !== -1) {\r\n                            var filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\r\n                            var matches = filenameRegex.exec(disposition);\r\n                            if (matches != null && matches[1]) filename = matches[1].replace(/['\"]/g, '');\r\n                        }\r\n                        var type = ajax.getResponseHeader('Content-Type');\r\n                        var blob = new Blob([this.response], {type: type});\r\n                        if (typeof window.navigator.msSaveBlob !== 'undefined') {\r\n                            // IE workaround for \"HTML7007: One or more blob URLs were revoked by closing the blob for which they were created. These URLs will no longer resolve as the data backing the URL has been freed.\"\r\n                            window.navigator.msSaveBlob(blob, filename);\r\n                        } else {\r\n                            var URL = window.URL || window.webkitURL;\r\n                            var downloadUrl = URL.createObjectURL(blob);\r\n                            if (filename) {\r\n                                // use HTML5 a[download] attribute to specify filename\r\n                                var a = document.createElement(\"a\");\r\n                                // safari doesn't support this yet\r\n                                if (typeof a.download === 'undefined') {\r\n                                    window.location = downloadUrl;\r\n                                } else {\r\n                                    a.href = downloadUrl;\r\n                                    a.download = filename;\r\n                                    document.body.appendChild(a);\r\n                                    a.click();\r\n                                }\r\n                            } else {\r\n                                window.location = downloadUrl;\r\n                            }\r\n\r\n                            setTimeout(function () {\r\n                                URL.revokeObjectURL(downloadUrl);\r\n                            }, 100); // cleanup\r\n                        }\r\n                    }\r\n                    myMask.style.display = \"none\"\r\n                }\r\n                ajax.responseType = 'blob'\r\n                ajax.setRequestHeader('Content-type', 'application/json;charset=utf-8')\r\n                ajax.send(json)\r\n            }\r\n            break\r\n        case  \"Init\":\r\n            var parentNode = document.getElementById(\"QianMoApp\")\r\n            var param = parentNode.getAttribute(\"url\")\r\n            var url = ''\r\n            var method = \"GET\"\r\n            if (!param && param != '') {\r\n                url = 'json.json'\r\n                param = null\r\n            } else {\r\n                method = \"POST\"\r\n                url = 'http://123.56.22.114:8080/qianmo-service/getContentJson'\r\n                // url='http://localhost:8088/qianmo-service/getContentJson'\r\n                param = param.substring(param.lastIndexOf(\"\\\\\") + 1)\r\n            }\r\n            var ajax\r\n            if (window.XMLHttpRequest) {\r\n                ajax = new XMLHttpRequest()\r\n            } else if (window.ActiveXObject) {\r\n                ajax = new window.ActiveXObject()\r\n            } else {\r\n                alert(\"请升级至最新版本的浏览器\")\r\n            }\r\n            if (ajax !== null) {\r\n                ajax.open(method, url, true)\r\n                ajax.send(param)\r\n                ajax.onreadystatechange = function () {\r\n                    if (ajax.readyState === 4 && ajax.status === 200) {\r\n                        var CellList = JSON.parse(ajax.responseText)\r\n                        CellList.forEach(function (e) {\r\n\r\n                            var area = e['area']\r\n                            var firstCell = e['cellName'].split('_')\r\n\r\n                            var cells = {}\r\n                            cells.firstCellCol = firstCell[0].charCodeAt(0)\r\n                            cells.firstCellRow = parseInt(firstCell[1])\r\n                            var areaSubstring = area.split('_')\r\n                            cells.lastCellCol = areaSubstring[2].charCodeAt(0)\r\n                            cells.lastCellRow = parseInt(areaSubstring[3])\r\n                            if (cells.firstCellCol !== cells.lastCellCol || cells.firstCellRow !== cells.lastCellRow) {\r\n                                sheet.setAttr('merge', true, cells)\r\n                            }\r\n\r\n\r\n                            cells.lastCellCol = firstCell[0].charCodeAt(0)\r\n                            cells.lastCellRow = parseInt(firstCell[1])\r\n\r\n\r\n                            for (var key in e) {\r\n                                switch (e[key]) {\r\n                                    case 'false':\r\n                                        var value = false\r\n                                        break\r\n                                    case 'true':\r\n                                        var value = true\r\n                                        break\r\n                                    default:\r\n                                        var value = e[key]\r\n                                }\r\n                                if ((key === 'bottomFrame' || key === 'topFrame' || key === 'leftFrame' ||\r\n                                        key === 'rightFrame') && value === false) continue\r\n                                // if(key==='content' && e['formula']!==undefined && e['formula']!==''){\r\n                                //     value=e['formula']\r\n                                // }\r\n                                sheet.setAttr(key, value, cells)\r\n                            }\r\n                        })\r\n\r\n                        sheet.render()\r\n                    }\r\n                }\r\n            }\r\n            break\r\n        case 'copy':\r\n            cells = sheet.editCells\r\n            sheet.firstCopiedCell = String.fromCharCode(cells.firstCellCol) + '_' + cells.firstCellRow\r\n            sheet.copiedCells = []\r\n            for (var i = cells.firstCellCol; i <= cells.lastCellCol; i++) {\r\n                for (var j = cells.firstCellRow; j <= cells.lastCellRow; j++) {\r\n                    var id = String.fromCharCode(i) + '_' + j\r\n                    var newCell = {}\r\n                    newCell.coord = id\r\n                    sheet.cellAttrs.forEach(function (attr) {\r\n                        if (!sheet.cells[id]) {\r\n                            newCell[attr[0]] = attr[1]\r\n                        }\r\n                        else {\r\n                            newCell[attr[0]] = sheet.cells[id][attr[0]]\r\n                        }\r\n                    })\r\n                    if (!sheet.cells[id]) {\r\n                        newCell.bottomFrame = false\r\n                        newCell.topFrame = false\r\n                        newCell.leftFrame = false\r\n                        newCell.rightFrame = false\r\n                    }\r\n                    else {\r\n                        newCell.bottomFrame = sheet.cells[id].bottomFrame\r\n                        newCell.topFrame = sheet.cells[id].topFrame\r\n                        newCell.leftFrame = sheet.cells[id].leftFrame\r\n                        newCell.rightFrame = sheet.cells[id].rightFrame\r\n                    }\r\n                    sheet.copiedCells.push(newCell)\r\n                }\r\n            }\r\n            console.log('copy done!')\r\n            break\r\n        case 'cut':\r\n            cells = sheet.editCells\r\n            sheet.firstCopiedCell = String.fromCharCode(cells.firstCellCol) + '_' + cells.firstCellRow\r\n            sheet.copiedCells = []\r\n            for (var i = cells.firstCellCol; i <= cells.lastCellCol; i++) {\r\n                for (var j = cells.firstCellRow; j <= cells.lastCellRow; j++) {\r\n                    var id = String.fromCharCode(i) + '_' + j\r\n                    var newCell = {}\r\n                    newCell.coord = id\r\n                    sheet.cellAttrs.forEach(function (attr) {\r\n                        if (!sheet.cells[id]) {\r\n                            newCell[attr[0]] = attr[1]\r\n                        }\r\n                        else {\r\n                            newCell[attr[0]] = sheet.cells[id][attr[0]]\r\n                        }\r\n                    })\r\n                    if (!sheet.cells[id]) {\r\n                        newCell.bottomFrame = false\r\n                        newCell.topFrame = false\r\n                        newCell.leftFrame = false\r\n                        newCell.rightFrame = false\r\n                    }\r\n                    else {\r\n                        newCell.bottomFrame = sheet.cells[id].bottomFrame\r\n                        newCell.topFrame = sheet.cells[id].topFrame\r\n                        newCell.leftFrame = sheet.cells[id].leftFrame\r\n                        newCell.rightFrame = sheet.cells[id].rightFrame\r\n                    }\r\n                    sheet.copiedCells.push(newCell)\r\n                }\r\n            }\r\n            sheet.cellAttrs.forEach(function (attr) {\r\n                sheet.setAttr(attr[0], attr[1], cells)\r\n            })\r\n            sheet.setAttr('allFrame', false, cells)\r\n            sheet.render()\r\n            sheet.lastCellid = sheet.firstCellid\r\n\r\n            console.log('cut done!')\r\n            break\r\n        case 'paste':\r\n            var borders = [['bottomFrame', false], ['leftFrame', false], ['topFrame', false], ['rightFrame', false]]\r\n            if (sheet.firstCopiedCell) {\r\n                cells = sheet.editCells\r\n                sheet.copiedCells.forEach(function (cell) {\r\n                    var newCell = {}\r\n                    var firstCopiedCellCol = sheet.firstCopiedCell.split('_')[0].charCodeAt(0)\r\n                    var firstCopiedCellRow = parseInt(sheet.firstCopiedCell.split('_')[1])\r\n                    cellCol = cell.coord.split('_')[0].charCodeAt(0)\r\n                    cellRow = parseInt(cell.coord.split('_')[1])\r\n                    newCell.firstCellCol = cells.firstCellCol + cellCol - firstCopiedCellCol\r\n                    newCell.firstCellRow = cells.firstCellRow + cellRow - firstCopiedCellRow\r\n                    newCell.lastCellCol = newCell.firstCellCol\r\n                    newCell.lastCellRow = newCell.firstCellRow\r\n                    sheet.cellAttrs.forEach(function (attr) {\r\n                        sheet.setAttr(attr[0], cell[attr[0]], newCell)\r\n                    })\r\n                    borders.forEach(function (frame) {\r\n                        sheet.setAttr(frame[0], cell[frame[0]], newCell)\r\n                    })\r\n                    delete newCell\r\n                })\r\n                sheet.render()\r\n                console.log('paste done!')\r\n                // console.log(sheet.cells)\r\n            } else {\r\n                console.log('nothing to paste')\r\n            }\r\n            break\r\n        case 'font':\r\n            sheet.setAttr('font', value)\r\n            sheet.render()\r\n            break\r\n        case 'fontSize':\r\n            sheet.setAttr('fontSize', value)\r\n            sheet.render()\r\n            break\r\n        case 'bold':\r\n            var lastCellId = sheet.lastCell.id\r\n            if (!sheet.cells[lastCellId]) {\r\n                sheet.setAttr('bold', true)\r\n            }\r\n            sheet.setAttr('bold', !sheet.cells[lastCellId].bold)\r\n            sheet.render()\r\n            break\r\n        case 'italic':\r\n            var lastCellId = sheet.lastCell.id\r\n            if (!sheet.cells[lastCellId]) {\r\n                sheet.setAttr('italic', true)\r\n            }\r\n            sheet.setAttr('italic', !this.sheet.cells[lastCellId].italic)\r\n            sheet.render()\r\n            break\r\n        case 'merge':\r\n            this.setCellBackgroundColor('#fff')\r\n            this.sheet.setAttr('merge', value)\r\n            this.sheet.render()\r\n            this.mouseDown(sheet.firstCellid)\r\n            // console.log(sheet.firstCellid)\r\n            this.mouseUp(document.getElementById(sheet.lastCellid))\r\n            break\r\n        // case 'border':\r\n        // switch(value){\r\n        // \tcase 'left':\r\n        // \t\tsheet.setAttr('leftFrame',false)\r\n        //             console.log('a')\r\n        // \t\tbreak\r\n        // \tcase 'top':\r\n        // \t\tsheet.setAttr('topFrame',false)\r\n        // \t\tbreak\r\n        // \tcase 'right':\r\n        // \t\tsheet.setAttr('rightFrame',false)\r\n        // \t\tbreak\r\n        // \tcase 'bottom':\r\n        // \t\tsheet.setAttr('bottomFrame',false)\r\n        // \t\tbreak\r\n        // \tcase 'clear':\r\n        // \t\tsheet.setAttr('allFrame',false)\r\n        // \t\tbreak\r\n        // \tcase 'outer':\r\n        // \t\tsheet.setAttr('leftFrame',true)\r\n        // \t\tsheet.setAttr('topFrame',true)\r\n        // \t\tsheet.setAttr('rightFrame',true)\r\n        // \t\tsheet.setAttr('bottomFrame',true)\r\n        // \t\tbreak\r\n        // \tcase 'all':\r\n        // \t\tsheet.setAttr('allFrame',true)\r\n        // \t\tbreak\r\n        //\r\n        // \t//fontBorderSelect.value='border'\r\n        // }\r\n        // sheet.render()\r\n        //     break\r\n        case 'alignment':\r\n            sheet.setAttr('alignment', value)\r\n            sheet.render()\r\n            break\r\n        case 'undo':\r\n            sheet.undo()\r\n            break\r\n        case 'redo':\r\n            sheet.redo()\r\n            break\r\n        // case 'sort':\r\n        //     break\r\n        case 'multiLine':\r\n            document.getElementById('dragBar').style.display = 'none'\r\n            sheet.isMultiLineEditing = true\r\n            var ml = document.getElementById('multiLine1')\r\n            ml.style.display = 'block'\r\n            if (sheet.cells[sheet.lastCellid]) ml.value = sheet.cells[sheet.lastCellid].content\r\n            else ml.value = ''\r\n            ml.focus()\r\n            break\r\n        case 'cleanText':\r\n            sheet.setAttr('content', '')\r\n            sheet.render()\r\n            break\r\n        case 'cleanStyle':\r\n            sheet.cellAttrs.forEach(function (attr) {\r\n                if (attr[0] !== 'content') sheet.setAttr(attr[0], attr[1])\r\n            })\r\n            sheet.render()\r\n            break\r\n        case 'cleanAll':\r\n            sheet.cellAttrs.forEach(function (attr) {\r\n                sheet.setAttr(attr[0], attr[1])\r\n            })\r\n            sheet.setAttr('allFrameEx', false)\r\n            sheet.render()\r\n            break\r\n        case 'addCol':\r\n        case 'deleteCol':\r\n            cells = sheet.getColAndRow(sheet.firstCellid.split('_')[0] + '_1', String.fromCharCode(sheet.maxCol) + '_' + sheet.maxRow)\r\n            //sheet.firstCopiedCell = String.fromCharCode(cells.firstCellCol) + '_' + cells.firstCellRow\r\n            var sheetcopiedCells = []\r\n            for (var i = cells.firstCellCol; i <= cells.lastCellCol; i++) {\r\n                for (var j = cells.firstCellRow; j <= cells.lastCellRow; j++) {\r\n                    var id = String.fromCharCode(i) + '_' + j\r\n                    var newCell = {}\r\n                    newCell.coord = id\r\n                    sheet.cellAttrs.forEach(function (attr) {\r\n                        if (!sheet.cells[id]) {\r\n                            newCell[attr[0]] = attr[1]\r\n                        }\r\n                        else {\r\n                            newCell[attr[0]] = sheet.cells[id][attr[0]]\r\n                        }\r\n                    })\r\n                    if (!sheet.cells[id]) {\r\n                        newCell.bottomFrame = false\r\n                        newCell.topFrame = false\r\n                        newCell.leftFrame = false\r\n                        newCell.rightFrame = false\r\n                    }\r\n                    else {\r\n                        newCell.bottomFrame = sheet.cells[id].bottomFrame\r\n                        newCell.topFrame = sheet.cells[id].topFrame\r\n                        newCell.leftFrame = sheet.cells[id].leftFrame\r\n                        newCell.rightFrame = sheet.cells[id].rightFrame\r\n                    }\r\n                    sheetcopiedCells.push(newCell)\r\n                }\r\n            }\r\n            sheet.cellAttrs.forEach(function (attr) {\r\n                sheet.setAttr(attr[0], attr[1], cells)\r\n            })\r\n            sheet.setAttr('allFrame', false, cells)\r\n\r\n            var borders = [['bottomFrame', false], ['leftFrame', false], ['topFrame', false], ['rightFrame', false]]\r\n            if (sheetcopiedCells) {\r\n                if (action === 'deleteCol') {\r\n                    var firstCopiedCellCol = cells.firstCellCol + 1\r\n                    var firstCopiedCellRow = cells.firstCellRow\r\n                } else {\r\n                    var firstCopiedCellCol = cells.firstCellCol - 1\r\n                    var firstCopiedCellRow = cells.firstCellRow\r\n                }\r\n                sheetcopiedCells.forEach(function (cell) {\r\n                    var newCell = {}\r\n                    cellCol = cell.coord.split('_')[0].charCodeAt(0)\r\n                    cellRow = parseInt(cell.coord.split('_')[1])\r\n                    newCell.firstCellCol = cells.firstCellCol + cellCol - firstCopiedCellCol\r\n                    newCell.firstCellRow = cells.firstCellRow + cellRow - firstCopiedCellRow\r\n                    newCell.lastCellCol = newCell.firstCellCol\r\n                    newCell.lastCellRow = newCell.firstCellRow\r\n                    sheet.cellAttrs.forEach(function (attr) {\r\n                        sheet.setAttr(attr[0], cell[attr[0]], newCell)\r\n                    })\r\n                    borders.forEach(function (frame) {\r\n                        sheet.setAttr(frame[0], cell[frame[0]], newCell)\r\n                    })\r\n                    delete newCell\r\n                })\r\n                sheet.render()\r\n                console.log('addCol')\r\n            }\r\n            break\r\n        case 'addRow':\r\n        case 'deleteRow':\r\n            cells = sheet.getColAndRow('A_' + sheet.firstCellid.split('_')[1], String.fromCharCode(sheet.maxCol) + '_' + sheet.maxRow)\r\n            //sheet.firstCopiedCell = String.fromCharCode(cells.firstCellCol) + '_' + cells.firstCellRow\r\n            var sheetcopiedCells = []\r\n            for (var i = cells.firstCellCol; i <= cells.lastCellCol; i++) {\r\n                for (var j = cells.firstCellRow; j <= cells.lastCellRow; j++) {\r\n                    var id = String.fromCharCode(i) + '_' + j\r\n                    var newCell = {}\r\n                    newCell.coord = id\r\n                    sheet.cellAttrs.forEach(function (attr) {\r\n                        if (!sheet.cells[id]) {\r\n                            newCell[attr[0]] = attr[1]\r\n                        }\r\n                        else {\r\n                            newCell[attr[0]] = sheet.cells[id][attr[0]]\r\n                        }\r\n                    })\r\n                    if (!sheet.cells[id]) {\r\n                        newCell.bottomFrame = false\r\n                        newCell.topFrame = false\r\n                        newCell.leftFrame = false\r\n                        newCell.rightFrame = false\r\n                    }\r\n                    else {\r\n                        newCell.bottomFrame = sheet.cells[id].bottomFrame\r\n                        newCell.topFrame = sheet.cells[id].topFrame\r\n                        newCell.leftFrame = sheet.cells[id].leftFrame\r\n                        newCell.rightFrame = sheet.cells[id].rightFrame\r\n                    }\r\n                    sheetcopiedCells.push(newCell)\r\n                }\r\n            }\r\n            sheet.cellAttrs.forEach(function (attr) {\r\n                sheet.setAttr(attr[0], attr[1], cells)\r\n            })\r\n            sheet.setAttr('allFrame', false, cells)\r\n\r\n            var borders = [['bottomFrame', false], ['leftFrame', false], ['topFrame', false], ['rightFrame', false]]\r\n            if (sheetcopiedCells) {\r\n                if (action === 'deleteRow') {\r\n                    var firstCopiedCellCol = cells.firstCellCol\r\n                    var firstCopiedCellRow = cells.firstCellRow + 1\r\n                } else {\r\n                    var firstCopiedCellCol = cells.firstCellCol\r\n                    var firstCopiedCellRow = cells.firstCellRow - 1\r\n                }\r\n                sheetcopiedCells.forEach(function (cell) {\r\n                    var newCell = {}\r\n                    cellCol = cell.coord.split('_')[0].charCodeAt(0)\r\n                    cellRow = parseInt(cell.coord.split('_')[1])\r\n                    newCell.firstCellCol = cells.firstCellCol + cellCol - firstCopiedCellCol\r\n                    newCell.firstCellRow = cells.firstCellRow + cellRow - firstCopiedCellRow\r\n                    newCell.lastCellCol = newCell.firstCellCol\r\n                    newCell.lastCellRow = newCell.firstCellRow\r\n                    sheet.cellAttrs.forEach(function (attr) {\r\n                        sheet.setAttr(attr[0], cell[attr[0]], newCell)\r\n                    })\r\n                    borders.forEach(function (frame) {\r\n                        sheet.setAttr(frame[0], cell[frame[0]], newCell)\r\n                    })\r\n                    delete newCell\r\n                })\r\n                sheet.render()\r\n            }\r\n            break\r\n        case 'func':\r\n            if (document.getElementById('funcListDiv').style.display === 'none') document.getElementById('funcListDiv').style.display = 'block'\r\n            else document.getElementById('funcListDiv').style.display = 'none'\r\n            break\r\n        default:\r\n            alert('该功能未实现，请期待')\r\n            break\r\n    }\r\n    if (action !== ('multiLine' || 'copy' ) && !sheet.isPreview) {\r\n        sheetEventHandler.mouseDown(sheet.firstCellid)\r\n        sheetEventHandler.mouseUp(document.getElementById(sheet.lastCellid))\r\n    }\r\n}\r\n\r\n\r\nmodule.exports.ToolEventHandler = ToolEventHandler\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/ToolEventHandler.js\n// module id = 16\n// module chunks = 0","/**\r\n * 工具栏渲染\r\n */\r\nvar config = require('config')\r\nvar style = require('style')\r\nvar ToolRender = function (sheet) {\r\n    this.sheet = sheet\r\n}\r\nToolRender.prototype.init = function (toolDiv, width, height) {\r\n    var ToolEventBinderModule = require('ToolEventBinder')\r\n    var ToolEventBinder = ToolEventBinderModule.ToolEventBinder\r\n    // var toolEventBinder = new ToolEventBinder(this.sheet)\r\n\r\n    toolDiv.style.width = width + 'px'\r\n    toolDiv.style.height = height + 'px'\r\n\r\n    renderMenu(toolDiv, this.sheet)\r\n\r\n}\r\n\r\nfunction renderMenu(toolDiv, sheet) {\r\n    var menuDiv = document.createElement('div')\r\n    var buttonBox = document.createElement('div')\r\n\r\n    buttonBox.style = style.ButtonBoxStyle\r\n\r\n    toolDiv.appendChild(menuDiv)\r\n    toolDiv.appendChild(buttonBox)\r\n\r\n    var toolMenu = config.ToolConfig.menu\r\n\r\n    var styleBox = document.createElement('div')\r\n    styleBox.innerHTML = toolMenu[0]\r\n    var toolBox = document.createElement('div')\r\n    toolBox.innerHTML = toolMenu[1]\r\n    var dataBox = document.createElement('div')\r\n    dataBox.innerHTML = toolMenu[2]\r\n\r\n    var boxes = {\r\n        styleBox: {node: styleBox, selected: false},\r\n        toolBox: {node: toolBox, selected: false},\r\n        dataBox: {node: dataBox, selected: false}\r\n    }\r\n    menuDiv.id = 'menuDiv'\r\n    menuDiv.style = style.MeunDivStyle\r\n\r\n    changeSelected(boxes, 'styleBox')\r\n    renderTool('styleBox', buttonBox, sheet)\r\n\r\n    styleBox.onclick = function () {\r\n        if (!sheet.isPreview) {\r\n            changeSelected(boxes, 'styleBox')\r\n            renderTool('styleBox', buttonBox, sheet)\r\n        }\r\n    }\r\n    toolBox.onclick = function () {\r\n        if (!sheet.isPreview) {\r\n            changeSelected(boxes, 'toolBox')\r\n            renderTool('toolBox', buttonBox, sheet)\r\n        }\r\n    }\r\n    dataBox.onclick = function () {\r\n        if (!sheet.isPreview) {\r\n            changeSelected(boxes, 'dataBox')\r\n            renderTool('dataBox', buttonBox, sheet)\r\n        }\r\n    }\r\n\r\n    for (var box in boxes) {\r\n        menuDiv.appendChild(boxes[box].node)\r\n    }\r\n\r\n}\r\n\r\nfunction renderTool(menu, buttonBox, sheet) {\r\n\r\n    removeAllChild(buttonBox)\r\n\r\n    var ToolEventBinderModule = require('ToolEventBinder')\r\n    var ToolEventBinder = ToolEventBinderModule.ToolEventBinder\r\n    var toolEventBinder = new ToolEventBinder(sheet)\r\n\r\n    var cmdMap = config.ToolConfig.cmdCodeMap\r\n    var toolHtml = config.ToolConfig.toolHtml\r\n    var styleHtml = config.ToolConfig.styleHtml\r\n    var dataHtml = config.ToolConfig.dataHtml\r\n    var defaultHtml = config.ToolConfig.defaultHtml\r\n\r\n    var previewHtml = config.ToolConfig.previewHtml\r\n    var previewDiv = document.createElement('div')\r\n    previewHtml.forEach(function (innerhtml) {\r\n\r\n        var buttonDiv = document.createElement('div')\r\n        buttonDiv.id = innerhtml\r\n        buttonDiv.style = style.ButtonDivStyle\r\n        buttonDiv.innerHTML = innerhtml\r\n\r\n        buttonDiv.onclick = function () {\r\n            toolEventBinder.buttonClick(innerhtml)\r\n        }\r\n        previewDiv.appendChild(buttonDiv)\r\n    })\r\n    previewDiv.style.display = 'none'\r\n    previewDiv.id = 'previewDiv'\r\n    buttonBox.appendChild(previewDiv)\r\n\r\n    var editDiv = document.createElement('div')\r\n    defaultHtml.forEach(function (innerhtml) {\r\n        console.log(innerhtml)\r\n        var buttonDiv = document.createElement('div')\r\n        buttonDiv.id = innerhtml\r\n        buttonDiv.style = style.ButtonDivStyle\r\n        buttonDiv.innerHTML = cmdMap[innerhtml]\r\n        // if(innerhtml==='Init'){\r\n        //     buttonDiv.style.display='none'\r\n        // }\r\n        buttonDiv.onclick = function () {\r\n            toolEventBinder.buttonClick(innerhtml)\r\n        }\r\n        editDiv.appendChild(buttonDiv)\r\n    })\r\n\r\n    if (menu === 'styleBox') {\r\n\r\n        for (var i = 0; i < styleHtml.length; i++) {\r\n\r\n            if (styleHtml[i] === 'font') {\r\n                renderFont(toolEventBinder, editDiv)\r\n                continue\r\n            }\r\n\r\n            if (styleHtml[i] === 'align') {\r\n                renderAlign(toolEventBinder, editDiv)\r\n                continue\r\n            }\r\n\r\n            if (styleHtml[i] === 'border') {\r\n                renderBorder(toolEventBinder, editDiv)\r\n                continue\r\n            }\r\n\r\n            var styleButtonDiv = document.createElement('div')\r\n            styleButtonDiv.id = styleHtml[i]\r\n            styleButtonDiv.style = style.ButtonDivStyle\r\n            styleButtonDiv.innerHTML = cmdMap[styleHtml[i]]\r\n\r\n            editDiv.appendChild(styleButtonDiv)\r\n\r\n            if (styleHtml[i] === 'bold') {\r\n                toolEventBinder.initFontWeight(styleButtonDiv)\r\n                continue\r\n            }\r\n            if (styleHtml[i] === 'italic') {\r\n                toolEventBinder.initFontStyle(styleButtonDiv)\r\n                continue\r\n            }\r\n            if (styleHtml[i] === 'textColor') {\r\n                renderFontColor(toolEventBinder, styleButtonDiv)\r\n                renderColorSelect(toolEventBinder, editDiv)\r\n                continue\r\n            }\r\n            if (styleHtml[i] === 'fillColor') {\r\n                renderBackgroundColor(toolEventBinder, styleButtonDiv)\r\n                renderColorSelect(toolEventBinder, editDiv)\r\n                continue\r\n            }\r\n\r\n\r\n            styleButtonDiv.onclick = function (e) {\r\n                toolEventBinder.buttonClick(e.currentTarget.id)\r\n            }\r\n        }\r\n    } else if (menu === 'toolBox') {\r\n\r\n        for (var m = 0; m < toolHtml.length; m++) {\r\n\r\n            var toolButtonDiv = document.createElement('div')\r\n            toolButtonDiv.id = toolHtml[m]\r\n            toolButtonDiv.style = style.ButtonDivStyle\r\n            toolButtonDiv.innerHTML = cmdMap[toolHtml[m]]\r\n\r\n            editDiv.appendChild(toolButtonDiv)\r\n\r\n            if (toolHtml[m] === 'mergeCell') {\r\n                toolEventBinder.initMerge(toolButtonDiv, true)\r\n                continue\r\n            }\r\n\r\n            if (toolHtml[m] === 'splitCell') {\r\n                toolEventBinder.initMerge(toolButtonDiv, false)\r\n                continue\r\n            }\r\n\r\n            toolButtonDiv.onclick = function (e) {\r\n                toolEventBinder.buttonClick(e.currentTarget.id)\r\n            }\r\n        }\r\n    } else {\r\n\r\n        for (var n = 0; n < dataHtml.length; n++) {\r\n\r\n            var dataButtonDiv = document.createElement('div')\r\n            dataButtonDiv.id = dataHtml[n]\r\n            dataButtonDiv.style = style.ButtonDivStyle\r\n            dataButtonDiv.style.fontSize = '15px'\r\n            dataButtonDiv.innerHTML = dataHtml[n]\r\n\r\n            dataButtonDiv.onclick = function (e) {\r\n                console.log(e.currentTarget.id)\r\n                toolEventBinder.buttonClick(e.currentTarget.id)\r\n            }\r\n            editDiv.appendChild(dataButtonDiv)\r\n        }\r\n    }\r\n    editDiv.id = 'editDiv'\r\n    buttonBox.appendChild(editDiv)\r\n\r\n}\r\n\r\nfunction changeSelected(boxes, selectedNode) {\r\n\r\n    for (var box in boxes) {\r\n        boxes[box].selected = false\r\n    }\r\n    boxes[selectedNode].selected = true\r\n\r\n    for (var b in boxes) {\r\n        if (boxes[b].selected) {\r\n            boxes[b].node.style = style.MeunBoxSelectedStyle\r\n        } else {\r\n            boxes[b].node.style = style.MeunBoxStyle\r\n        }\r\n    }\r\n}\r\n\r\nfunction renderFont(toolEventBinder, buttonBox) {\r\n    //字体\r\n    var fontFamilySelect = document.createElement('select')\r\n    fontFamilySelect.style.marginLeft = '10px'\r\n    var fontFamilyOption = ['fontFamily', 'Default', 'Custom', 'Verdana', 'Arial', 'Courier']\r\n    fontFamilyOption.forEach(function (o) {\r\n        var option = document.createElement('option')\r\n        option.innerHTML = o\r\n        fontFamilySelect.appendChild(option)\r\n    })\r\n    toolEventBinder.initFontFamily(fontFamilySelect)\r\n    buttonBox.appendChild(fontFamilySelect)\r\n\r\n    //字体大小\r\n    var fontSizeSelect = document.createElement('select')\r\n    fontSizeSelect.style.marginLeft = '10px'\r\n    var fontSizeOption = ['fontSize', 'Default', 'X-Small', 'Small', 'Medium', 'Large',\r\n        'X-Large', '6pt', '7pt', '8pt', '9pt', '10pt', '11pt', '12pt', '14pt', '16pt', '18pt',\r\n        '20pt', '22pt', '24pt', '28pt', '36pt', '48pt', '72pt']\r\n    fontSizeOption.forEach(function (o) {\r\n        var option = document.createElement('option')\r\n        option.innerHTML = o\r\n        fontSizeSelect.appendChild(option)\r\n    })\r\n    toolEventBinder.initFontSize(fontSizeSelect)\r\n    buttonBox.appendChild(fontSizeSelect)\r\n}\r\n\r\nfunction renderBorder(toolEventBinder, buttonBox) {\r\n    var borderHtml = config.ToolConfig.borderHtml\r\n    var cmdMap = config.ToolConfig.cmdCodeMap\r\n    var borderButton = []\r\n    var i\r\n\r\n    for (i = 0; i < borderHtml.length; i++) {\r\n        var borderButtonDiv = document.createElement('div')\r\n        borderButtonDiv.id = borderHtml[i]\r\n        borderButtonDiv.style = style.ButtonDivStyle\r\n        borderButtonDiv.innerHTML = cmdMap[borderHtml[i]]\r\n\r\n        buttonBox.appendChild(borderButtonDiv)\r\n        borderButton.push(borderButtonDiv)\r\n    }\r\n\r\n    for (i = 0; i < borderButton.length; i++) {\r\n        borderButton[i].onclick = function (e) {\r\n            for (var j = 0; j < borderButton.length; j++) {\r\n                borderButton[j].style = style.ButtonDivStyle\r\n            }\r\n\r\n            var fontBorderOption = config.ToolConfig.fontBorderOption\r\n            toolEventBinder.initFontBorder(fontBorderOption[e.currentTarget.id])\r\n\r\n            e.currentTarget.style = style.ButtonDivSelectedStyle\r\n        }\r\n    }\r\n}\r\n\r\nfunction renderAlign(toolEventBinder, buttonBox) {\r\n    var alignHtml = config.ToolConfig.alignHtml\r\n    var cmdMap = config.ToolConfig.cmdCodeMap\r\n    var alignButton = []\r\n    var i\r\n\r\n    for (i = 0; i < alignHtml.length; i++) {\r\n        var alignButtonDiv = document.createElement('div')\r\n        alignButtonDiv.id = alignHtml[i]\r\n        alignButtonDiv.style = style.ButtonDivStyle\r\n        alignButtonDiv.innerHTML = cmdMap[alignHtml[i]]\r\n\r\n        buttonBox.appendChild(alignButtonDiv)\r\n        alignButton.push(alignButtonDiv)\r\n    }\r\n\r\n    for (i = 0; i < alignButton.length; i++) {\r\n        alignButton[i].onclick = function (e) {\r\n            for (var j = 0; j < alignButton.length; j++) {\r\n                alignButton[j].style = style.ButtonDivStyle\r\n            }\r\n\r\n            var alignOption = config.ToolConfig.alignOption\r\n            toolEventBinder.initTextAlign(alignOption[e.currentTarget.id])\r\n\r\n            e.currentTarget.style = style.ButtonDivSelectedStyle\r\n        }\r\n    }\r\n}\r\n\r\nfunction renderFontColor(toolEventBinder, styleButtonDiv) {\r\n    //color,字体颜色\r\n    // var colorDiv = document.createElement('div')\r\n    // colorDiv.style = style.ColorDivStyle\r\n    // buttonBox.appendChild(colorDiv)\r\n    toolEventBinder.initColor(styleButtonDiv)\r\n}\r\n\r\nfunction renderBackgroundColor(toolEventBinder, styleButtonDiv) {\r\n\r\n    //backgroundColor背景颜色\r\n    // var backgroundColorDiv = document.createElement('div')\r\n    // backgroundColorDiv.style = style.backgroundColorDivStyle\r\n    // buttonBox.appendChild(backgroundColorDiv)\r\n    toolEventBinder.initBackgroundColor(styleButtonDiv)\r\n}\r\n\r\nfunction renderColorSelect(toolEventBinder, buttonBox) {\r\n    var colorSelectDiv = document.createElement(\"div\")\r\n    colorSelectDiv.id = 'colorSelect'\r\n    colorSelectDiv.style = style.ColorSelectDivStyle\r\n    // colorSelectDiv.style.display = 'none'\r\n    // colorSelectDiv.style.position = \"absolute\"\r\n    // colorSelectDiv.style.zIndex = 100\r\n    // colorSelectDiv.style.backgroundColor = \"#FFF\"\r\n    // colorSelectDiv.style.border = \"1px solid black\"\r\n    // colorSelectDiv.style.width = '106px'\r\n    buttonBox.appendChild(colorSelectDiv)\r\n\r\n    var mainDiv = document.createElement(\"div\")\r\n    // mainDiv.style.padding = \"3px\"\r\n    // mainDiv.style.backgroundColor = \"#CCC\"\r\n    colorSelectDiv.appendChild(mainDiv)\r\n\r\n    var mainTable = document.createElement(\"table\")\r\n    mainTable.cellSpacing = 0\r\n    mainTable.cellPadding = 0\r\n    mainTable.style.width = \"100px\"\r\n    mainDiv.appendChild(mainTable)\r\n\r\n    var mainTbody = document.createElement(\"tbody\")\r\n    mainTable.appendChild(mainTbody)\r\n    var steps = [0, 68, 153, 204, 255]\r\n    var commonRgb = [\"400\", \"310\", \"420\", \"440\", \"442\", \"340\", \"040\", \"042\", \"032\", \"044\", \"024\", \"004\", \"204\", \"314\", \"402\", \"414\"]\r\n\r\n    for (var row = 0; row < 16; row++) {\r\n        var tr = document.createElement(\"tr\")\r\n        for (var col = 0; col < 5; col++) {\r\n            var td = document.createElement(\"td\")\r\n            toolEventBinder.initColorSelect(td)\r\n            td.style.fontSize = \"1px\"\r\n            td.innerHTML = \"&nbsp;\"\r\n            td.style.height = \"10px\"\r\n            td.style.lineHeight = '12px'\r\n            if (col <= 1) {\r\n                td.style.width = \"17px\"\r\n                td.style.borderRight = \"3px solid white\"\r\n            }\r\n            else {\r\n                td.style.width = \"20px\"\r\n                td.style.backgroundRepeat = \"no-repeat\"\r\n            }\r\n            if (col === 0) {\r\n                var x = commonRgb[row]\r\n                td.style.backgroundColor = \"rgb(\" + steps[x.charAt(0) - 0] + \",\" + steps[x.charAt(1) - 0] + \",\" + steps[x.charAt(2) - 0] + \")\"\r\n            }\r\n            if (col === 1) {\r\n                td.style.backgroundColor = makeRGB(17 * (15 - row), 17 * (15 - row), 17 * (15 - row))\r\n            }\r\n            if (col === 2) {\r\n                td.style.backgroundColor = makeRGB(17 * (15 - row), 0, 0)\r\n            }\r\n            if (col === 3) {\r\n                td.style.backgroundColor = makeRGB(0, 17 * (15 - row), 0)\r\n            }\r\n            if (col === 4) {\r\n                td.style.backgroundColor = makeRGB(0, 0, 17 * (15 - row))\r\n            }\r\n            tr.appendChild(td)\r\n        }\r\n        mainTbody.appendChild(tr)\r\n    }\r\n    mainTable.appendChild(mainTbody)\r\n}\r\n\r\nfunction makeRGB(r, g, b) {\r\n    return \"rgb(\" + (r > 0 ? r : 0) + \",\" + (g > 0 ? g : 0) + \",\" + (b > 0 ? b : 0) + \")\"\r\n}\r\n\r\nfunction removeAllChild(node) {\r\n\r\n    while (node.hasChildNodes()) {\r\n        node.removeChild(node.firstChild)\r\n    }\r\n}\r\n\r\nmodule.exports.ToolRender = ToolRender\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/ToolRender.js\n// module id = 17\n// module chunks = 0","/**\r\n *  堆栈对象\r\n */\r\nvar UndoStack = function () {\r\n\r\n    this.tos = -1\r\n    //this.maxRedo = 0\r\n    this.maxUndo = 50\r\n    this.stack = []\r\n\r\n}\r\nUndoStack.prototype.pushStep = function (stack) {\r\n    while(this.stack.length > this.tos+1) this.stack.pop()\r\n    this.stack.push(stack)\r\n    if(this.stack.length > this.maxUndo) this.stack.shift()\r\n    else this.tos++\r\n}\r\nUndoStack.prototype.reDo = function () {\r\n    if (this.tos < this.stack.length-1){\r\n        this.tos ++\r\n        var result = this.stack[this.tos]\r\n    }\r\n    else result = null\r\n    return result\r\n}\r\nUndoStack.prototype.unDo = function () {\r\n    if (this.tos > -1){\r\n        var result = this.stack[this.tos]\r\n        this.tos --\r\n    }\r\n    else result = null\r\n    return result\r\n}\r\nmodule.exports.UndoStack = UndoStack\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/UndoStack.js\n// module id = 18\n// module chunks = 0","/**\r\n * 工作区域渲染\r\n * @param wsManager\r\n * @param parentNode\r\n * @constructor\r\n */\r\n\r\n\r\nvar WSRender = function (wsManager, parentNode) {\r\n\tthis.manager = wsManager\r\n\tthis.parNode = parentNode\r\n}\r\n\r\nWSRender.prototype.init = function () {\r\n\tvar ws = this.manager.workspace\r\n\r\n\t//workspace\r\n\tvar WSDiv = document.createElement('div')\r\n\t// WSDiv.style.width = ws.width + 'px'\r\n\t// WSDiv.style.height = ws.height + 'px'\r\n\tWSDiv.style = require('style').WSStyle\r\n\tthis.parNode.appendChild(WSDiv)\r\n\r\n\t//tool\r\n\tvar ToolRenderModule = require('ToolRender')\r\n\tvar ToolRender = ToolRenderModule.ToolRender\r\n\tvar toolRender = new ToolRender(ws.Sheet)\r\n\tvar tool = ws.Tool\r\n\tvar toolDiv = document.createElement('div')\r\n\ttoolRender.init(toolDiv, tool.width, tool.height)\r\n\tWSDiv.appendChild(toolDiv)\r\n\r\n\t//sheet\r\n\tvar SheetRenderModule = require('SheetRender')\r\n\tvar SheetRender = SheetRenderModule.SheetRender\r\n\tvar sheetRender = new SheetRender(ws.Sheet)\r\n\tvar sheet = ws.Sheet\r\n\tvar sheetDiv = document.createElement('div')\r\n\tsheetRender.init(sheetDiv)\r\n\tWSDiv.appendChild(sheetDiv)\r\n\r\n\t//slideBar\r\n\t// var SliderBarRenderModule = require('SliderBarRender')\r\n\t// var SliderBarRender = SliderBarRenderModule.SliderBarRender\r\n\t// var sliderBarRender = new SliderBarRender(ws.Sheet)\r\n\t// var sliderBar = ws.SliderBar\r\n\t// var sliderBarDiv = document.createElement('div')\r\n\t// sliderBarRender.init(sliderBarDiv)\r\n\t// WSDiv.appendChild(sliderBarDiv)\r\n\r\n}\r\nmodule.exports.WSRender = WSRender\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/WSRender.js\n// module id = 19\n// module chunks = 0","/**\r\n * 工作区对象，包括工具栏，表格等\r\n * @type {*}\r\n */\r\nvar config= require('config')\r\n\r\nvar Workspace = function (Tool, Sheet, SliderBar) {\r\n\r\n    this.width = config.WSConfig.width\r\n    this.height = config.WSConfig.height\r\n\r\n    this.Tool =Tool\r\n    this.Sheet= Sheet\r\n    this.SliderBar = SliderBar\r\n}\r\n\r\nmodule.exports.Workspace = Workspace\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./component/Workspace.js\n// module id = 20\n// module chunks = 0"],"sourceRoot":""}